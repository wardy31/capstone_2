{"ast":null,"code":"import axios from \"@/config/axios\";\nexport default {\n  namespaced: true,\n  state: () => ({\n    user: {\n      data: [],\n      loading: false,\n      error: false,\n      message: \"\"\n    },\n    clinic: {\n      data: [],\n      loading: false,\n      page: 1,\n      error: false,\n      message: \"\"\n    }\n  }),\n  mutations: {\n    setData(state, payload) {\n      state[payload.type].data = payload.data;\n    },\n    setLoading(state, payload) {\n      state[payload.type].loading = payload.loading;\n    },\n    setPage(state, payload) {\n      state[payload.type].page = payload.page;\n    }\n  },\n  actions: {\n    async allRecords({\n      commit\n    }, params) {\n      try {\n        const {\n          data\n        } = await axios.get(`clinic/visited-log-record?page=${params}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        await commit(\"setData\", {\n          type: \"clinic\",\n          data: data.data.data\n        });\n        await commit(\"setPage\", {\n          type: \"clinic\",\n          page: data.data.last_page\n        });\n        console.log(\"record\", params);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async useRecords({\n      commit\n    }) {\n      try {\n        const {\n          data\n        } = await axios.get(\"user/visited-log-record\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        await commit(\"setData\", {\n          type: \"user\",\n          data: data.data\n        });\n        console.log(\"record\", data.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async perStation({\n      commit\n    }, params) {\n      try {\n        const {\n          data\n        } = await axios.get(`clinic/visited-log-record/${params}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        await commit(\"setData\", {\n          type: \"clinic\",\n          data: data.data.data\n        });\n        await commit(\"setPage\", {\n          type: \"clinic\",\n          page: data.data.last_page\n        });\n        console.log('data', data.data.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","namespaced","state","user","data","loading","error","message","clinic","page","mutations","setData","payload","type","setLoading","setPage","actions","allRecords","commit","params","get","headers","Authorization","localStorage","getItem","last_page","console","log","useRecords","perStation"],"sources":["/home/wardy/Desktop/capstone/fe/src/store/modules/records.js"],"sourcesContent":["import axios from \"@/config/axios\";\n\nexport default {\n  namespaced: true,\n  state: () => ({\n    user: {\n      data: [],\n      loading: false,\n      error: false,\n      message: \"\",\n    },\n    clinic: {\n      data: [],\n      loading: false,\n      page: 1,\n      error: false,\n      message: \"\",\n    },\n  }),\n  mutations: {\n    setData(state, payload) {\n      state[payload.type].data = payload.data;\n    },\n    setLoading(state, payload) {\n      state[payload.type].loading = payload.loading;\n    },\n    setPage(state, payload) {\n      state[payload.type].page = payload.page;\n    },\n  },\n  actions: {\n    async allRecords({ commit }, params) {\n      try {\n        const { data } = await axios.get(\n          `clinic/visited-log-record?page=${params}`,\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        );\n        await commit(\"setData\", { type: \"clinic\", data: data.data.data });\n        await commit(\"setPage\", { type: \"clinic\", page: data.data.last_page });\n\n        console.log(\"record\", params);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async useRecords({ commit }) {\n      try {\n        const { data } = await axios.get(\"user/visited-log-record\", {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n        await commit(\"setData\", { type: \"user\", data: data.data });\n        console.log(\"record\", data.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async perStation({ commit },params) {\n      try {\n        const { data } = await axios.get(`clinic/visited-log-record/${params}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n        await commit(\"setData\", { type: \"clinic\", data: data.data.data });\n        await commit(\"setPage\", { type: \"clinic\", page: data.data.last_page });\n\n        console.log('data',data.data.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}