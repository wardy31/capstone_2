{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { extractFaces, extractFaceTensors } from '../dom';\nimport { extendWithFaceLandmarks } from '../factories/WithFaceLandmarks';\nimport { ComposableTask } from './ComposableTask';\nimport { ComputeAllFaceDescriptorsTask, ComputeSingleFaceDescriptorTask } from './ComputeFaceDescriptorsTasks';\nimport { nets } from './nets';\nimport { PredictAllAgeAndGenderWithFaceAlignmentTask, PredictSingleAgeAndGenderWithFaceAlignmentTask } from './PredictAgeAndGenderTask';\nimport { PredictAllFaceExpressionsWithFaceAlignmentTask, PredictSingleFaceExpressionsWithFaceAlignmentTask } from './PredictFaceExpressionsTask';\nvar DetectFaceLandmarksTaskBase = /** @class */function (_super) {\n  __extends(DetectFaceLandmarksTaskBase, _super);\n  function DetectFaceLandmarksTaskBase(parentTask, input, useTinyLandmarkNet) {\n    var _this = _super.call(this) || this;\n    _this.parentTask = parentTask;\n    _this.input = input;\n    _this.useTinyLandmarkNet = useTinyLandmarkNet;\n    return _this;\n  }\n  Object.defineProperty(DetectFaceLandmarksTaskBase.prototype, \"landmarkNet\", {\n    get: function () {\n      return this.useTinyLandmarkNet ? nets.faceLandmark68TinyNet : nets.faceLandmark68Net;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return DetectFaceLandmarksTaskBase;\n}(ComposableTask);\nexport { DetectFaceLandmarksTaskBase };\nvar DetectAllFaceLandmarksTask = /** @class */function (_super) {\n  __extends(DetectAllFaceLandmarksTask, _super);\n  function DetectAllFaceLandmarksTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  DetectAllFaceLandmarksTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var parentResults, detections, faces, _a, faceLandmarksByFace;\n      var _this = this;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, this.parentTask];\n          case 1:\n            parentResults = _b.sent();\n            detections = parentResults.map(function (res) {\n              return res.detection;\n            });\n            if (!(this.input instanceof tf.Tensor)) return [3 /*break*/, 3];\n            return [4 /*yield*/, extractFaceTensors(this.input, detections)];\n          case 2:\n            _a = _b.sent();\n            return [3 /*break*/, 5];\n          case 3:\n            return [4 /*yield*/, extractFaces(this.input, detections)];\n          case 4:\n            _a = _b.sent();\n            _b.label = 5;\n          case 5:\n            faces = _a;\n            return [4 /*yield*/, Promise.all(faces.map(function (face) {\n              return _this.landmarkNet.detectLandmarks(face);\n            }))];\n          case 6:\n            faceLandmarksByFace = _b.sent();\n            faces.forEach(function (f) {\n              return f instanceof tf.Tensor && f.dispose();\n            });\n            return [2 /*return*/, parentResults.map(function (parentResult, i) {\n              return extendWithFaceLandmarks(parentResult, faceLandmarksByFace[i]);\n            })];\n        }\n      });\n    });\n  };\n  DetectAllFaceLandmarksTask.prototype.withFaceExpressions = function () {\n    return new PredictAllFaceExpressionsWithFaceAlignmentTask(this, this.input);\n  };\n  DetectAllFaceLandmarksTask.prototype.withAgeAndGender = function () {\n    return new PredictAllAgeAndGenderWithFaceAlignmentTask(this, this.input);\n  };\n  DetectAllFaceLandmarksTask.prototype.withFaceDescriptors = function () {\n    return new ComputeAllFaceDescriptorsTask(this, this.input);\n  };\n  return DetectAllFaceLandmarksTask;\n}(DetectFaceLandmarksTaskBase);\nexport { DetectAllFaceLandmarksTask };\nvar DetectSingleFaceLandmarksTask = /** @class */function (_super) {\n  __extends(DetectSingleFaceLandmarksTask, _super);\n  function DetectSingleFaceLandmarksTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  DetectSingleFaceLandmarksTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var parentResult, detection, faces, _a, landmarks;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, this.parentTask];\n          case 1:\n            parentResult = _b.sent();\n            if (!parentResult) {\n              return [2 /*return*/];\n            }\n\n            detection = parentResult.detection;\n            if (!(this.input instanceof tf.Tensor)) return [3 /*break*/, 3];\n            return [4 /*yield*/, extractFaceTensors(this.input, [detection])];\n          case 2:\n            _a = _b.sent();\n            return [3 /*break*/, 5];\n          case 3:\n            return [4 /*yield*/, extractFaces(this.input, [detection])];\n          case 4:\n            _a = _b.sent();\n            _b.label = 5;\n          case 5:\n            faces = _a;\n            return [4 /*yield*/, this.landmarkNet.detectLandmarks(faces[0])];\n          case 6:\n            landmarks = _b.sent();\n            faces.forEach(function (f) {\n              return f instanceof tf.Tensor && f.dispose();\n            });\n            return [2 /*return*/, extendWithFaceLandmarks(parentResult, landmarks)];\n        }\n      });\n    });\n  };\n  DetectSingleFaceLandmarksTask.prototype.withFaceExpressions = function () {\n    return new PredictSingleFaceExpressionsWithFaceAlignmentTask(this, this.input);\n  };\n  DetectSingleFaceLandmarksTask.prototype.withAgeAndGender = function () {\n    return new PredictSingleAgeAndGenderWithFaceAlignmentTask(this, this.input);\n  };\n  DetectSingleFaceLandmarksTask.prototype.withFaceDescriptor = function () {\n    return new ComputeSingleFaceDescriptorTask(this, this.input);\n  };\n  return DetectSingleFaceLandmarksTask;\n}(DetectFaceLandmarksTaskBase);\nexport { DetectSingleFaceLandmarksTask };","map":{"version":3,"mappings":"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","names":["tf","extractFaces","extractFaceTensors","extendWithFaceLandmarks","ComposableTask","ComputeAllFaceDescriptorsTask","ComputeSingleFaceDescriptorTask","nets","PredictAllAgeAndGenderWithFaceAlignmentTask","PredictSingleAgeAndGenderWithFaceAlignmentTask","PredictAllFaceExpressionsWithFaceAlignmentTask","PredictSingleFaceExpressionsWithFaceAlignmentTask","__extends","parentTask","input","useTinyLandmarkNet","_super","_this","Object","DetectFaceLandmarksTaskBase","faceLandmark68TinyNet","faceLandmark68Net","DetectAllFaceLandmarksTask","parentResults","_b","detections","map","detection","Tensor","_a","faces","Promise","all","landmarkNet","detectLandmarks","face","faceLandmarksByFace","forEach","f","dispose","parentResult","i","DetectSingleFaceLandmarksTask","landmarks"],"sourceRoot":"","sources":["../../../src/globalApi/DetectFaceLandmarksTasks.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}