{"ast":null,"code":"import { mapState } from 'vuex';\nexport default {\n  mounted() {\n    this.$store.dispatch('clinic/getRole');\n  },\n  props: ['profile'],\n  computed: {\n    ...mapState({\n      role: state => state.clinic.role,\n      loading: state => state.staff.update.loading,\n      error: state => state.staff.update.error,\n      message: state => state.staff.submit.message\n    })\n  },\n  watch: {\n    profile() {\n      console.log('profile watch', this.profile);\n      if (this.profile) {\n        this.dialog = true;\n        this.clinic.id = this.profile.id;\n        this.clinic.first_name = this.profile.first_name;\n        this.clinic.middle_name = this.profile.middle_name;\n        this.clinic.last_name = this.profile.last_name;\n        this.clinic.gender = this.profile.gender;\n        this.clinic.address = this.profile.address;\n        this.clinic.role = this.profile.role_id;\n        this.clinic.contact_number = this.profile.contact_number;\n        this.clinic.email = this.profile.email;\n      }\n    }\n  },\n  data() {\n    return {\n      dialog: false,\n      clinic: {\n        id: null,\n        first_name: this.profile?.first_name,\n        middle_name: this.profile?.middle_name,\n        last_name: this.profile?.last_name,\n        gender: this.profile?.gender,\n        role: this.profile?.role,\n        address: this.profile?.address,\n        contact_number: this.profile?.contact_number,\n        email: this.profile?.email\n      }\n    };\n  },\n  methods: {\n    submit() {\n      this.$store.dispatch('staff/createClinic', this.clinic);\n    },\n    handleDialog() {\n      this.dialog = false;\n      this.$emit('handleProfile');\n    },\n    async editProfile() {\n      const res = await this.$store.dispatch('staff/editProfile', this.clinic);\n      if (res) {\n        this.handleDialog();\n        this.$emit('snackBar');\n        this.$store.dispatch('clinic/loadUser');\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA0EA;AAEA;EACAA;IACA;EACA;EACAC;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACAC;MACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;EACAC;IACA;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAd;QACAe;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACA;MACA;MACA;QACA;QACA;QACA;MACA;IACA;EACA;AACA","names":["mounted","props","computed","role","loading","error","message","watch","profile","console","data","dialog","clinic","id","first_name","middle_name","last_name","gender","address","contact_number","email","methods","submit","handleDialog"],"sourceRoot":"src/views/admin/Dialog/Profile","sources":["EditProfile.vue"],"sourcesContent":["<template>\n    <v-dialog v-model=\"dialog\" fullscreen transition=\"dialog-bottom-transition\">\n      <v-card color=\"accent text-capitalize\">\n        <v-toolbar color=\"primary\"> \n          <v-btn @click=\"handleDialog\" icon large color=\"accent\"><v-icon>close</v-icon></v-btn>\n          <v-toolbar-title class=\"accent--text font-weight-bold\">Edit Profile</v-toolbar-title>\n          <v-spacer></v-spacer>\n        </v-toolbar>\n        <v-container>\n          <h2 class=\"font-weight-regular mb-4 mt-4\">Personal Information</h2>\n          \n          <v-row dense>\n            <v-col>\n              <v-text-field filled outlined label=\"First Name\" v-model=\"clinic.first_name\" :error-messages=\"error?.first_name ? error?.first_name : false \"></v-text-field>\n            </v-col>\n            <v-col>\n              <v-text-field filled outlined label=\"Middle Name\" v-model=\"clinic.middle_name\" :error-messages=\"error?.middle_name ? error?.middle_name : false \"></v-text-field>\n            </v-col>\n            <v-col>\n              <v-text-field filled outlined label=\"Last Name\" v-model=\"clinic.last_name\" :error-messages=\"error?.last_name ? error?.last_name : false \"></v-text-field>\n            </v-col>\n          </v-row>\n  \n          <v-row dense class=\"mt-n3\">\n            <v-col cols=\"3\">\n              <v-select\n                outlined\n                filled\n                :items=\"['male', 'female']\"\n                v-model=\"clinic.gender\"\n                label=\"Gender\"\n                :error-messages=\"error?.gender ? error?.gender : false \"\n              ></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n              <v-select\n                outlined\n                filled\n                :items=\"role\"\n                item-text=\"name\"\n                item-value=\"id\"\n                v-model=\"clinic.role\"\n                label=\"Role\"\n              ></v-select>\n            </v-col>\n            <v-col cols=\"6\">\n              <v-text-field filled outlined label=\"Address\" v-model=\"clinic.address\" :error-messages=\"error?.address ? error.address : false\"></v-text-field>\n            </v-col>\n          </v-row>\n          <v-row dense class=\"mt-n3\">\n            <v-col cols=\"4\">\n              <v-text-field filled outlined maxlength=\"11\" :rules=\"[(value) => value.length <=11]\" label=\"Contact Number\" v-model=\"clinic.contact_number\" :error-messages=\"error?.contact_number ? error?.contact_number : false \"></v-text-field>\n            </v-col>\n            <v-col cols=\"4\">\n              <v-text-field filled outlined label=\"Email\" v-model=\"clinic.email\" :error-messages=\"error?.email ? error?.email : false \"></v-text-field>\n            </v-col>\n          </v-row>\n          <v-row dense class=\"mt-n4\">\n            <v-col md=\"2\">\n              <v-btn\n                color=\"primary\"\n                block\n                :loading=\"loading\"\n                class=\"px-12 py-5 text-capitalize font-weight-bold\"\n                @click=\"editProfile()\">Edit Profile</v-btn\n              >\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-card>\n    </v-dialog>\n  </template>\n  \n  <script>\n  import { mapState } from 'vuex';\n  \n  export default {\n    mounted(){\n    this.$store.dispatch('clinic/getRole')\n    },\n    props:['profile'],\n    computed:{\n      ...mapState({\n        role:state => state.clinic.role,\n        loading:state => state.staff.update.loading,\n        error:state => state.staff.update.error,\n        message:state => state.staff.submit.message,\n      })\n    },\n    watch:{\n        profile(){\n            console.log('profile watch',this.profile);\n            if(this.profile){\n                this.dialog = true\n                this.clinic.id = this.profile.id\n                this.clinic.first_name = this.profile.first_name\n                this.clinic.middle_name = this.profile.middle_name\n                this.clinic.last_name = this.profile.last_name\n                this.clinic.gender = this.profile.gender\n                this.clinic.address = this.profile.address\n                this.clinic.role = this.profile.role_id\n                this.clinic.contact_number = this.profile.contact_number\n                this.clinic.email = this.profile.email\n            }\n        }\n    },\n    data() {\n      return {\n        dialog:false,\n        clinic:{\n              id:null,\n              first_name:this.profile?.first_name, \n              middle_name:this.profile?.middle_name,\n              last_name:this.profile?.last_name,\n              gender:this.profile?.gender,\n              role:this.profile?.role,\n              address:this.profile?.address,\n              contact_number:this.profile?.contact_number,\n              email:this.profile?.email\n          }\n      }\n    },\n    methods:{\n      submit(){\n          this.$store.dispatch('staff/createClinic',this.clinic)\n      },\n      handleDialog(){\n        this.dialog = false\n        this.$emit('handleProfile')\n      },\n      async editProfile(){\n        const res =await this.$store.dispatch('staff/editProfile',this.clinic)\n        if(res){\n           this.handleDialog()\n           this.$emit('snackBar')\n           this.$store.dispatch('clinic/loadUser')\n        }\n      }\n    }\n  };\n  </script>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}