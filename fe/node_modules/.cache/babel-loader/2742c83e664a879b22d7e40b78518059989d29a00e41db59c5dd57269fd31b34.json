{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AppBar from \"@/components/ClinicAppBar.vue\";\nimport SideBar from \"@/components/SideBar.vue\";\nimport Loading from \"@/components/LoadingView.vue\";\nimport { mapState } from \"vuex\";\nexport default {\n  components: {\n    AppBar,\n    SideBar,\n    Loading\n  },\n  mounted() {\n    if (!localStorage.getItem(\"token\")) {\n      this.$router.push(\"/clinic-login\");\n    }\n    this.$store.dispatch(\"clinic/getUser\");\n  },\n  data() {\n    return {\n      dialog: true\n    };\n  },\n  computed: {\n    ...mapState({\n      loading: state => state.clinic.credentials.loading,\n      user: state => state.clinic.credentials.data\n    })\n  },\n  methods: {\n    handleDialog() {\n      this.dialog = !this.dialog;\n    }\n  }\n};","map":{"version":3,"mappings":";AAgBA;AACA;AACA;AACA;AACA;EACAA;IAAAC;IAAAC;IAAAC;EAAA;EACAC;IACA;MACA;IACA;IACA;EACA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;AACA","names":["components","AppBar","SideBar","Loading","mounted","data","dialog","computed","loading","user","methods","handleDialog"],"sourceRoot":"src/views/admin","sources":["AdminView.vue"],"sourcesContent":["<template>\r\n  <v-app>\r\n    <div v-if=\"loading\" class=\"ma-auto\">\r\n      <Loading />\r\n    </div>\r\n    <div v-else>\r\n      <v-app>\r\n        <app-bar :data=\"user\" type=\"admin\"  @handleDialog=\"handleDialog\" :dialog=\"dialog\"/>\r\n        <router-view></router-view>\r\n        <side-bar :dialog=\"dialog\" />\r\n      </v-app>\r\n    </div>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport AppBar from \"@/components/ClinicAppBar.vue\";\r\nimport SideBar from \"@/components/SideBar.vue\";\r\nimport Loading from \"@/components/LoadingView.vue\";\r\nimport { mapState } from \"vuex\";\r\nexport default {\r\n  components: { AppBar, SideBar, Loading },\r\n  mounted() {\r\n    if (!localStorage.getItem(\"token\")) {\r\n      this.$router.push(\"/clinic-login\");\r\n    }\r\n    this.$store.dispatch(\"clinic/getUser\");\r\n  },\r\n  data() {\r\n    return {\r\n      dialog:true\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      loading: (state) => state.clinic.credentials.loading,\r\n      user: (state) => state.clinic.credentials.data,\r\n    }),\r\n  },\r\n  methods: {\r\n    handleDialog(){\r\n      this.dialog = !this.dialog\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}