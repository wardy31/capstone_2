{"ast":null,"code":"import { FaceLandmarks } from '../classes/FaceLandmarks';\nimport { FaceLandmarks68 } from '../classes/FaceLandmarks68';\nimport { getContext2dOrThrow } from '../dom/getContext2dOrThrow';\nimport { isWithFaceLandmarks } from '../factories/WithFaceLandmarks';\nimport { drawContour } from './drawContour';\nvar DrawFaceLandmarksOptions = /** @class */function () {\n  function DrawFaceLandmarksOptions(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var _a = options.drawLines,\n      drawLines = _a === void 0 ? true : _a,\n      _b = options.drawPoints,\n      drawPoints = _b === void 0 ? true : _b,\n      lineWidth = options.lineWidth,\n      lineColor = options.lineColor,\n      pointSize = options.pointSize,\n      pointColor = options.pointColor;\n    this.drawLines = drawLines;\n    this.drawPoints = drawPoints;\n    this.lineWidth = lineWidth || 1;\n    this.pointSize = pointSize || 2;\n    this.lineColor = lineColor || 'rgba(0, 255, 255, 1)';\n    this.pointColor = pointColor || 'rgba(255, 0, 255, 1)';\n  }\n  return DrawFaceLandmarksOptions;\n}();\nexport { DrawFaceLandmarksOptions };\nvar DrawFaceLandmarks = /** @class */function () {\n  function DrawFaceLandmarks(faceLandmarks, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.faceLandmarks = faceLandmarks;\n    this.options = new DrawFaceLandmarksOptions(options);\n  }\n  DrawFaceLandmarks.prototype.draw = function (canvasArg) {\n    var ctx = getContext2dOrThrow(canvasArg);\n    var _a = this.options,\n      drawLines = _a.drawLines,\n      drawPoints = _a.drawPoints,\n      lineWidth = _a.lineWidth,\n      lineColor = _a.lineColor,\n      pointSize = _a.pointSize,\n      pointColor = _a.pointColor;\n    if (drawLines && this.faceLandmarks instanceof FaceLandmarks68) {\n      ctx.strokeStyle = lineColor;\n      ctx.lineWidth = lineWidth;\n      drawContour(ctx, this.faceLandmarks.getJawOutline());\n      drawContour(ctx, this.faceLandmarks.getLeftEyeBrow());\n      drawContour(ctx, this.faceLandmarks.getRightEyeBrow());\n      drawContour(ctx, this.faceLandmarks.getNose());\n      drawContour(ctx, this.faceLandmarks.getLeftEye(), true);\n      drawContour(ctx, this.faceLandmarks.getRightEye(), true);\n      drawContour(ctx, this.faceLandmarks.getMouth(), true);\n    }\n    if (drawPoints) {\n      ctx.strokeStyle = pointColor;\n      ctx.fillStyle = pointColor;\n      var drawPoint = function (pt) {\n        ctx.beginPath();\n        ctx.arc(pt.x, pt.y, pointSize, 0, 2 * Math.PI);\n        ctx.fill();\n      };\n      this.faceLandmarks.positions.forEach(drawPoint);\n    }\n  };\n  return DrawFaceLandmarks;\n}();\nexport { DrawFaceLandmarks };\nexport function drawFaceLandmarks(canvasArg, faceLandmarks) {\n  var faceLandmarksArray = Array.isArray(faceLandmarks) ? faceLandmarks : [faceLandmarks];\n  faceLandmarksArray.forEach(function (f) {\n    var landmarks = f instanceof FaceLandmarks ? f : isWithFaceLandmarks(f) ? f.landmarks : undefined;\n    if (!landmarks) {\n      throw new Error('drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof');\n    }\n    new DrawFaceLandmarks(landmarks).draw(canvasArg);\n  });\n}","map":{"version":3,"mappings":"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","names":["FaceLandmarks","FaceLandmarks68","getContext2dOrThrow","isWithFaceLandmarks","drawContour","options","drawLines","_b","drawPoints","lineWidth","lineColor","pointSize","pointColor","faceLandmarks","DrawFaceLandmarksOptions","DrawFaceLandmarks","canvasArg","ctx","strokeStyle","getJawOutline","getLeftEyeBrow","getRightEyeBrow","getNose","getLeftEye","getRightEye","getMouth","fillStyle","drawPoint","pt","beginPath","arc","x","y","Math","PI","fill","positions","forEach","drawFaceLandmarks","faceLandmarksArray","Array","isArray","landmarks","f","undefined","Error","draw"],"sourceRoot":"","sources":["../../../src/draw/DrawFaceLandmarks.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}