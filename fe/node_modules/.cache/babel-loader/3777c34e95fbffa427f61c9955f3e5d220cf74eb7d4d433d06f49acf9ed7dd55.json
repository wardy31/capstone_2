{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from \"vuex\";\nexport default {\n  props: [\"dialog\", \"updateData\"],\n  computed: {\n    ...mapState({\n      loading: state => state.questions.update.loading,\n      error: state => state.questions.update.error\n    })\n  },\n  watch: {\n    updateData() {\n      if (this.updateData) {\n        console.log(this.updateData);\n        this.id = this.updateData.id;\n        this.question = this.updateData[\"question\"];\n        // this.sub_question = this.updateData[\"sub_question\"];\n        this.arraySub = this.updateData[\"sub_question\"].split(',');\n      }\n    }\n  },\n  data() {\n    return {\n      id: null,\n      question: \"\",\n      sub_question: \"\",\n      arraySub: []\n    };\n  },\n  methods: {\n    async submit() {\n      const subTrim = this.arraySub.filter(e => e.trim() != \"\");\n      const res = await this.$store.dispatch(\"questions/update\", {\n        id: this.id,\n        question: this.question,\n        sub_question: subTrim.join()\n      });\n      if (res) {\n        this.question = \"\";\n        this.sub_question = \"\";\n        this.id = null;\n        this.$emit(\"handleDialog\");\n        this.$emit(\"snackBar\");\n        this.$emit(\"handleUpdateData\");\n      }\n    },\n    async handleDialog() {\n      this.$emit(\"handleDialog\");\n      this.$emit(\"handleUpdateData\");\n    },\n    removeSub(data) {\n      const subs = this.arraySub;\n      const filter = subs.filter((e, index) => {\n        return index != data;\n      });\n      this.arraySub = filter;\n    },\n    async addRow() {\n      this.arraySub.push(\"\");\n    }\n  }\n};","map":{"version":3,"mappings":";AA8EA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;QACAC;QACA;QACA;QACA;QACA;MACA;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACA;MACA;QACAJ;QACAC;QACAC;MACA;MACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;IACA;MACA;MACA;IACA;IACAG;MACA;MACA;QACA;MACA;MAEA;IACA;IACA;MACA;IACA;EACA;AACA","names":["props","computed","loading","error","watch","updateData","console","data","id","question","sub_question","arraySub","methods","removeSub"],"sourceRoot":"src/views/admin/Dialog/Form","sources":["UpdateDialog.vue"],"sourcesContent":["<template>\r\n  <v-dialog :value=\"dialog\" fullscreen transition=\"dialog-bottom-transition\">\r\n    <v-card color=\"accent text-capitalize\">\r\n      <v-toolbar color=\"primary\">\r\n        <v-btn @click=\"handleDialog\" icon large color=\"accent\"\r\n          ><v-icon>close</v-icon></v-btn\r\n        >\r\n        <v-toolbar-title class=\"accent--text font-weight-bold\"\r\n          >Update Form</v-toolbar-title\r\n        >\r\n        <v-spacer></v-spacer>\r\n      </v-toolbar>\r\n      <v-container>\r\n        <v-card width=\"420\" flat color=\"transparent\">\r\n          <div class=\"d-flex align-center justify-space-between\">\r\n            <h2 class=\"font-weight-regular mb-4 mt-4\">Question Details</h2>\r\n            <v-btn\r\n              color=\"primary\"\r\n              class=\"px-6 py-5 text-capitalize font-weight-bold\"\r\n              small\r\n              text\r\n              @click=\"addRow()\"\r\n            >\r\n              <v-icon>add</v-icon>\r\n              Add Sub Row\r\n            </v-btn>\r\n          </div>\r\n\r\n          <v-row dense>\r\n            <v-text-field\r\n              filled\r\n              outlined\r\n              :error-messages=\"error.question?.length ? error.question : false\"\r\n              label=\"Question Name\"\r\n              v-model=\"question\"\r\n            ></v-text-field>\r\n            \r\n            <div v-show=\"sub_question.split(',').length\">\r\n            <div v-for=\"(subs, index) in arraySub\" :key=\"index\">\r\n              <div class=\"d-flex\">\r\n                <v-text-field\r\n                  filled\r\n                  outlined\r\n                  label=\"Sub List Name\"\r\n                  v-model=\"arraySub[index]\"\r\n                ></v-text-field>\r\n\r\n                <v-btn\r\n                  class=\"mt-2 ml-2 text-capitalize\"\r\n                  color=\"error\"\r\n                  icon\r\n                  @click=\"removeSub(index)\"\r\n                >\r\n                  <v-icon>delete</v-icon>\r\n                </v-btn>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </v-row>\r\n          <v-row dense class=\"mt-n2\">\r\n            <v-col md=\"2\">\r\n              <v-btn\r\n                color=\"primary\"\r\n                block\r\n                :loading=\"loading\"\r\n                class=\"px-12 py-5 text-capitalize font-weight-bold\"\r\n                @click=\"submit()\"\r\n                >Update Form</v-btn\r\n              >\r\n            </v-col>\r\n          </v-row>\r\n        </v-card>\r\n      </v-container>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n  props: [\"dialog\", \"updateData\"],\r\n  computed: {\r\n    ...mapState({\r\n      loading: (state) => state.questions.update.loading,\r\n      error: (state) => state.questions.update.error,\r\n    }),\r\n  },\r\n  watch: {\r\n    updateData() {\r\n      if (this.updateData) {\r\n        console.log(this.updateData);\r\n        this.id = this.updateData.id\r\n        this.question = this.updateData[\"question\"];\r\n        // this.sub_question = this.updateData[\"sub_question\"];\r\n        this.arraySub = this.updateData[\"sub_question\"].split(',')\r\n      }\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      id: null,\r\n      question: \"\",\r\n      sub_question: \"\",\r\n      arraySub:[]\r\n    };\r\n  },\r\n  methods: {\r\n    async submit() {\r\n      const subTrim = this.arraySub.filter((e) => e.trim() != \"\");\r\n      const res = await this.$store.dispatch(\"questions/update\", {\r\n        id:this.id,\r\n        question: this.question,\r\n        sub_question: subTrim.join(),\r\n      });\r\n      if (res) {\r\n        this.question = \"\";\r\n        this.sub_question = \"\";\r\n        this.id = null;\r\n        this.$emit(\"handleDialog\");\r\n        this.$emit(\"snackBar\");\r\n        this.$emit(\"handleUpdateData\");\r\n      }\r\n    },\r\n    async handleDialog() {\r\n      this.$emit(\"handleDialog\");\r\n      this.$emit(\"handleUpdateData\");\r\n    },\r\n    removeSub(data) {\r\n      const subs = this.arraySub;\r\n      const filter = subs.filter((e, index) => {\r\n        return index != data;\r\n      });\r\n\r\n      this.arraySub = filter;\r\n    },\r\n    async addRow() {\r\n      this.arraySub.push(\"\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}