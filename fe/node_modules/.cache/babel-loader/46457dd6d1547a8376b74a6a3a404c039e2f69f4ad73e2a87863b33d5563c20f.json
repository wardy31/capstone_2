{"ast":null,"code":"import { mapState } from \"vuex\";\nimport moment from \"moment\";\nexport default {\n  computed: {\n    ...mapState({\n      profile: state => state.user.checkProfile.data,\n      details: state => state.user.details.data\n    })\n  },\n  data() {\n    return {\n      imageUrl: process.env.VUE_APP_IMAGE_URL,\n      tab: 0,\n      checkDialog: false,\n      responseData: null\n    };\n  },\n  filters: {\n    date(val) {\n      return moment(val).format(\"MMM DD, YYYY\").toString();\n    },\n    time(val) {\n      return moment(val).format(\"h:m A\").toString();\n    }\n  },\n  mounted() {\n    this.$store.dispatch(\"user/checkProfile\", this.$route.params.id);\n    this.$store.dispatch(\"user/userDetails\", this.$route.params.id);\n    console.log(\"reg\");\n  },\n  methods: {\n    handleResponse(data) {\n      this.checkDialog = true;\n      this.responseData = data;\n      console.log(data);\n    },\n    handleQuestion(data) {\n      if (data.trim()) {\n        const arr = data.split(\",\");\n        return arr;\n      }\n      return [];\n    },\n    checkStatus() {\n      const patient = this.profile?.user_patient;\n      const tagged = this.profile?.user_tagged;\n      const patientResult = patient.map(m => {\n        if (m.days_left) {\n          return true;\n        }\n      });\n      const taggedResult = tagged.map(m => {\n        if (m.days_left) {\n          return true;\n        }\n      });\n      if (patientResult.length || taggedResult.length) {\n        return true;\n      }\n      return false;\n    }\n  }\n};","map":{"version":3,"mappings":"AAqMA;AACA;AAEA;EACAA;IACA;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACA;IACA;IACAC;EACA;EACAC;IACAC;MACA;MACA;MAEAF;IACA;IACAG;MACA;QACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACA;MAEA;QACA;UACA;QACA;MACA;MAEA;QACA;UACA;QACA;MACA;MAEA;QACA;MACA;MAEA;IACA;EACA;AACA","names":["computed","profile","details","data","imageUrl","tab","checkDialog","responseData","filters","date","time","mounted","console","methods","handleResponse","handleQuestion","checkStatus"],"sourceRoot":"src/views/admin/Profile","sources":["CheckProfile.vue"],"sourcesContent":["<template>\r\n  <v-main class=\"accent\">\r\n    <v-container>\r\n      <div class=\"ma-12 text-capitalize\">\r\n        <div class=\"mt-2\">\r\n          <div class=\"py-1\">\r\n            <v-btn color=\"primary\" rounded text @click=\"$router.go(-1)\"\r\n              ><v-icon left>arrow_back_ios</v-icon>\r\n              <h4>Return</h4></v-btn\r\n            >\r\n          </div>\r\n          <!-- <h2 class=\"font-weight-bold\"><b class=\"primary--text\">{{`${profile.first_name} ${profile.middle_name} ${profile.last_name}`}} </b></h2>\r\n                <h2>Profile</h2> -->\r\n        </div>\r\n        <div class=\"mb-8 mt-6\">\r\n          <v-row align=\"center\">\r\n            <v-col cols=\"1\">\r\n              <v-avatar color=\"primary\" size=\"98\" class=\"white--text elevation-3\" tile\r\n                >\r\n                <img :src=\"`${imageUrl}${profile.images_path}`\" alt=\"\">\r\n                </v-avatar\r\n              >\r\n            </v-col>\r\n            <v-col>\r\n              <v-row>\r\n                <v-col class=\"ml-6\">\r\n                  <h3 class=\"mb-3 primary--text\">\r\n                    {{\r\n                      `${profile.first_name} ${profile.middle_name} ${profile.last_name}`\r\n                    }}\r\n                  </h3>\r\n                  <v-row>\r\n                    <v-col cols=\"3\">\r\n                      <h4 class=\"font-weight-thin\">{{ profile.gender }}</h4>\r\n                      <h4 class=\"font-weight-thin\">\r\n                        {{ profile.classification.name }}\r\n                      </h4>\r\n                      <h4 class=\"font-weight-thin\">\r\n                        {{ profile.vaccination_status }}\r\n                      </h4>\r\n                    </v-col>\r\n                    <v-divider vertical inset></v-divider>\r\n                    <v-col cols=\"4\">\r\n                      <h4 class=\"font-weight-thin\">{{ profile.address }}</h4>\r\n                      <h4 class=\"font-weight-thin\">\r\n                        {{ profile.contact_number }}\r\n                      </h4>\r\n                      <h4 class=\"font-weight-thin\">{{ profile.email }}</h4>\r\n                    </v-col>\r\n                    <v-divider vertical inset></v-divider>\r\n                    <v-col>\r\n                      <h4>status :</h4>\r\n                      <h4\r\n                        class=\"text-uppercase\"\r\n                        :class=\"checkStatus() ? 'error--text' : 'primary--text'\"\r\n                      >\r\n                        {{ checkStatus() ? \"Close Contact\" : \"No Contact\" }}\r\n                      </h4>\r\n                    </v-col>\r\n                  </v-row>\r\n                </v-col>\r\n              </v-row>\r\n            </v-col>\r\n          </v-row>\r\n        </div>\r\n\r\n        <v-divider></v-divider>\r\n        <v-tabs\r\n          background-color=\"transparent\"\r\n          slider-size=\"3\"\r\n          color=\"primary\"\r\n          class=\"my-5\"\r\n          v-model=\"tab\"\r\n        >\r\n          <v-tab>Health Declaration</v-tab>\r\n          <v-tab>Stations Visited</v-tab>\r\n          <v-tab>Follow Ups</v-tab>\r\n        </v-tabs>\r\n\r\n        <v-tabs-items v-model=\"tab\">\r\n          <v-tab-item>\r\n            <v-card>\r\n              <v-simple-table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Time Submitted</th>\r\n                    <th>Date Submitted</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"detail in details.hdr\" :key=\"detail.id\">\r\n                    <td>{{ detail.created_at | time }}</td>\r\n                    <td>{{ detail.created_at | date }}</td>\r\n                    <td>\r\n                      <v-tooltip bottom>\r\n                        <template v-slot:activator=\"{ on, attrs }\">\r\n                          <v-btn\r\n                            color=\"primary\"\r\n                            dark\r\n                            v-bind=\"attrs\"\r\n                            v-on=\"on\"\r\n                            icon\r\n                            @click=\"handleResponse(detail.answers)\"\r\n                            ><v-icon>description</v-icon></v-btn\r\n                          >\r\n                        </template>\r\n                        <span>Check Form</span>\r\n                      </v-tooltip>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </v-simple-table>\r\n            </v-card>\r\n\r\n          </v-tab-item>\r\n          <v-tab-item>\r\n            <v-simple-table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Location Visited</th>\r\n                  <th>Time</th>\r\n                  <th>Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"visited in details.visited\" :key=\"visited.id\">\r\n                  <td>{{visited.location.name}}</td>\r\n                  <td>{{visited.created_at | time}}</td>\r\n                  <td>{{visited.created_at | date}}</td>\r\n                </tr>\r\n              </tbody>\r\n            </v-simple-table>\r\n          </v-tab-item>\r\n          <v-tab-item>\r\n            <v-simple-table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Submitted Response</th>\r\n                  <th>Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"followUp in details.followUps\" :key=\"followUp.id\">\r\n                  <td>{{followUp.follow_up_status}}</td>\r\n                  <td>{{followUp.created_at | date}}</td>\r\n                </tr>\r\n              </tbody>\r\n            </v-simple-table>\r\n          </v-tab-item>\r\n        </v-tabs-items>\r\n      </div>\r\n\r\n      <v-dialog v-model=\"checkDialog\" width=\"540\">\r\n        <v-app-bar color=\"primary\">\r\n          <v-app-bar-title class=\"white--text\">\r\n            <h5>Response</h5>\r\n          </v-app-bar-title>\r\n        </v-app-bar>\r\n        <v-card\r\n          v-for=\"(response, index) in responseData\"\r\n          :key=\"response.id\"\r\n          tile\r\n        >\r\n          <v-card-title primary-title class=\"text-justify\">\r\n            <h6>{{ `${index + 1}. ${response.question.question}` }}</h6>\r\n          </v-card-title>\r\n\r\n          <v-card-text>\r\n            <ul v-if=\"response.question.sub_question\" class=\"mt-n4\">\r\n              <li\r\n                v-for=\"(q, index) in handleQuestion(\r\n                  response.question.sub_question\r\n                )\"\r\n                :key=\"index\"\r\n              >\r\n                <h4>{{ q }}</h4>\r\n              </li>\r\n            </ul>\r\n\r\n            <div class=\"mt-4\">\r\n              <!-- <h4 class=\"primary--text\">Answer: {{response.answer == 1 ? \"True\" : \"False\"   }}</h4> -->\r\n              <v-text-field\r\n                outlined\r\n                readonly\r\n                label=\"Answer\"\r\n                :value=\"response.answer == 1 ? `Yes` : `No`\"\r\n              ></v-text-field>\r\n            </div>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-dialog>\r\n    </v-container>\r\n  </v-main>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nimport moment from \"moment\";\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapState({\r\n      profile: (state) => state.user.checkProfile.data,\r\n      details: (state) => state.user.details.data,\r\n    }),\r\n  },\r\n  data() {\r\n    return {\r\n      imageUrl: process.env.VUE_APP_IMAGE_URL,\r\n      tab: 0,\r\n      checkDialog: false,\r\n      responseData: null,\r\n    };\r\n  },\r\n  filters: {\r\n    date(val) {\r\n      return moment(val).format(\"MMM DD, YYYY\").toString();\r\n    },\r\n    time(val) {\r\n      return moment(val).format(\"h:m A\").toString();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(\"user/checkProfile\", this.$route.params.id);\r\n    this.$store.dispatch(\"user/userDetails\",this.$route.params.id);\r\n    console.log(\"reg\");\r\n  },\r\n  methods: {\r\n    handleResponse(data) {\r\n      this.checkDialog = true;\r\n      this.responseData = data;\r\n\r\n      console.log(data);\r\n    },\r\n    handleQuestion(data){\r\n      if(data.trim()){\r\n        const arr = data.split(\",\")\r\n        return arr\r\n      }\r\n      return []\r\n    },\r\n    checkStatus() {\r\n      const patient = this.profile?.user_patient;\r\n      const tagged = this.profile?.user_tagged;\r\n\r\n      const patientResult = patient.map((m) => {\r\n        if (m.days_left) {\r\n          return true;\r\n        }\r\n      });\r\n\r\n      const taggedResult = tagged.map((m) => {\r\n        if (m.days_left) {\r\n          return true;\r\n        }\r\n      });\r\n\r\n      if (patientResult.length || taggedResult.length) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}