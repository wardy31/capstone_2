{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Loading from '@/components/LoadingView.vue';\nimport AppBar from \"@/components/AppBar.vue\";\nimport BottomBar from \"@/views/user/BottomNavigation.vue\";\nimport SideBar from \"@/views/user/SideBar.vue\";\nimport { mapState } from \"vuex\";\nexport default {\n  components: {\n    AppBar,\n    SideBar,\n    Loading,\n    BottomBar\n  },\n  computed: {\n    ...mapState({\n      loading: state => state.user.credentials.loading,\n      user: state => state.user.credentials.data\n    })\n  },\n  data() {\n    return {\n      dialog: true\n    };\n  },\n  mounted() {\n    if (!localStorage.getItem(\"token\")) {\n      this.$router.push(\"/user-login\");\n    }\n    this.$store.dispatch('user/getUser');\n  },\n  methods: {\n    handleDialog() {\n      this.dialog = !this.dialog;\n    }\n  }\n};","map":{"version":3,"mappings":";AAeA;AACA;AACA;AACA;AACA;AACA;EACAA;IAAAC;IAAAC;IAAAC;IAAAC;EAAA;EACAC;IACA;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACA;MACA;IACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;AACA","names":["components","AppBar","SideBar","Loading","BottomBar","computed","loading","user","data","dialog","mounted","methods","handleDialog"],"sourceRoot":"src/views/user","sources":["UserView.vue"],"sourcesContent":["<template>\n  <v-app>\n    <div v-if=\"loading\" class=\"ma-auto \">\n      <Loading />\n    </div>\n    <div v-else>\n      <app-bar :data=\"user\" type=\"user\" @handleDialog=\"handleDialog\" />\n      <router-view></router-view>\n      <side-bar :dialog=\"dialog\" />\n      <bottom-bar v-if=\"$vuetify.breakpoint.mobile\"></bottom-bar>\n    </div>\n  </v-app>\n</template>\n\n<script>\nimport Loading from '@/components/LoadingView.vue'\nimport AppBar from \"@/components/AppBar.vue\";\nimport BottomBar from \"@/views/user/BottomNavigation.vue\"\nimport SideBar from \"@/views/user/SideBar.vue\";\nimport { mapState } from \"vuex\";\nexport default {\n  components: { AppBar, SideBar, Loading, BottomBar },\n  computed: {\n    ...mapState({\n      loading: (state) => state.user.credentials.loading,\n      user: (state) => state.user.credentials.data,\n    }),\n  },\n  data() {\n    return {\n      dialog: true\n    };\n  },\n  mounted() {\n    if (!localStorage.getItem(\"token\")) {\n      this.$router.push(\"/user-login\")\n    }\n    this.$store.dispatch('user/getUser')\n  },\n  methods: {\n    handleDialog() {\n      this.dialog = !this.dialog\n    }\n  }\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}