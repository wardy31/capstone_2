{"ast":null,"code":"import { mapState } from \"vuex\";\nimport moment from \"moment\";\nexport default {\n  mounted() {\n    this.$store.dispatch(\"declaration/getSubmitted\");\n  },\n  filters: {\n    filterDate(val) {\n      return moment(val).format(\"MMM DD, YYYY\").toString();\n    },\n    filterTime(val) {\n      return moment(val).format(\"h:mm a\").toString();\n    },\n    subQ(val) {\n      return val;\n    }\n  },\n  computed: {\n    ...mapState({\n      responses: state => state.declaration.responses.data,\n      page: state => state.declaration.responses.page,\n      today: state => state.declaration.responses.today,\n      total: state => state.declaration.responses.total\n    })\n  },\n  data() {\n    return {\n      page_number: null,\n      checkDialog: false,\n      responseData: null,\n      inputSearch: \"\"\n    };\n  },\n  methods: {\n    pageSwitch(data) {\n      this.page_number = data;\n      this.$store.dispatch(\"declaration/getSubmitted\", data);\n    },\n    handleResponse(data) {\n      this.checkDialog = true;\n      this.responseData = data;\n    },\n    handleQuestion(data) {\n      console.log(data.split(\",\"));\n      if (data.trim()) {\n        const arr = data.split(\",\");\n        return arr;\n      }\n      return [];\n    },\n    handleSearch() {\n      this.$store.dispatch(\"declaration/responseSearch\", this.inputSearch);\n    }\n  }\n};","map":{"version":3,"mappings":"AAiJA;AACA;AACA;EACAA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACAC;MACA;QACA;QACA;MACA;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["mounted","filters","filterDate","filterTime","subQ","computed","responses","page","today","total","data","page_number","checkDialog","responseData","inputSearch","methods","pageSwitch","handleResponse","handleQuestion","console","handleSearch"],"sourceRoot":"src/views/admin","sources":["DeclarationForm.vue"],"sourcesContent":["<template>\n  <v-app class=\"bg\">\n    <v-main class=\"bg\">\n      <div class=\"ma-12\">\n        <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">\n          Health Declaration Records\n        </h2>\n        <h5 class=\"secondary--text\">user's health declaration responses</h5>\n\n        <v-row justify=\"start\" class=\"mt-8\">\n          <v-col cols=\"4\">\n            <v-card class=\"rounded-lg\">\n              <v-card-title class=\"font-weight-bold primary--text\"\n                >Today Responses</v-card-title\n              >\n              <v-card-text>\n                <v-row>\n                  <v-col>\n                    <div class=\"d-flex justify-center py-6\">\n                      <h1 class=\"teal--text\">{{today}}</h1>\n                    </div>\n                  </v-col>\n                </v-row>\n              </v-card-text>\n            </v-card>\n          </v-col>\n          <v-col cols=\"4\">\n            <v-card class=\"rounded-lg\">\n              <v-card-title class=\"font-weight-bold primary--text\"\n                >Total Responses</v-card-title\n              >\n              <v-card-text>\n                <v-row>\n                  <v-col>\n                    <div class=\"d-flex justify-center py-6\">\n                      <h1 class=\"secondary--text mr-4\">{{total}}</h1>\n                    </div>\n                  </v-col>\n                </v-row>\n              </v-card-text>\n            </v-card>\n          </v-col>\n        </v-row>\n\n        <div class=\"adj mt-12 mb-n3 d-flex\">\n          <v-text-field\n            class=\"mr-2\"\n            label=\"Search here\"\n            solo\n            dense\n            v-model=\"inputSearch\"\n          ></v-text-field>\n          <v-btn color=\"primary\" @click=\"handleSearch\"><v-icon>search</v-icon></v-btn>\n        </div>\n\n        <v-simple-table class=\"rounded-lg elevation-6\">\n          <thead>\n            <tr>\n              <th class=\"text-left black--text\">Name</th>\n\n              <th class=\"text-left black--text text-center\">Time Submitted</th>\n\n              <th class=\"text-left black--text text-center\">Date Submitted</th>\n\n              <th class=\"text-left black--text text-center\">Actions</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr\n              class=\"text-center\"\n              v-for=\"response in responses\"\n              :key=\"response.id\"\n            >\n            <td class=\"text-left font-weight-bold primary--text text-capitalize\">\n              {{\n                `${response.user_account.first_name} ${response.user_account.middle_name} ${response.user_account.last_name}`\n              }}\n              <div class=\"secondary--text font-weight-thin\">\n                {{ response.user_account.classification.name }}\n              </div>\n            </td>\n              <td>{{ response.created_at | filterTime }}</td>\n              <td>{{ response.created_at | filterDate }}</td>\n              <td>\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      color=\"primary\"\n                      dark\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      icon\n                      @click=\"handleResponse(response.answers)\"\n                      ><v-icon>description</v-icon></v-btn\n                    >\n                  </template>\n                  <span>Check Form</span>\n                </v-tooltip>\n                <!-- \n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on, attrs }\">\n                      <v-btn color=\"error\" dark v-bind=\"attrs\" v-on=\"on\" icon><v-icon>delete_forever</v-icon></v-btn>\n                    </template>\n                      <span>Delete</span>\n                  </v-tooltip> -->\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table>\n        <v-pagination\n          v-model=\"page_number\"\n          :length=\"page\"\n          class=\"float-left mt-4\"\n          @input=\"pageSwitch\"\n        ></v-pagination>\n      </div>\n    </v-main>\n    <v-dialog v-model=\"checkDialog\" width=\"540\">\n      <v-app-bar color=\"primary\" >\n        <v-app-bar-title class=\"white--text text-body-1\">Response</v-app-bar-title>\n      </v-app-bar>\n      <v-card v-for=\"(response,index) in responseData\" :key=\"response.id\" tile>\n        <v-card-title primary-title class=\"text-justify\">\n          <h6>{{ `${index + 1}. ${response.question.question}` }}</h6>\n        </v-card-title>\n\n        <v-card-text>\n          <ul v-if=\"response.question.sub_question\" class=\"mt-n4\">\n            <li v-for=\"(q,index) in handleQuestion(response.question.sub_question)\" :key=\"index\">\n              <h4>{{q}}</h4>          \n            </li>\n          </ul>\n\n          <div class=\"mt-4\">\n            <!-- <h4 class=\"primary--text\">Answer: {{response.answer == 1 ? \"True\" : \"False\"   }}</h4> -->\n            <v-text-field outlined readonly label=\"Answer\" :value=\"response.answer == 1 ? `Yes` : `No`\"></v-text-field>\n          </div>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n  </v-app>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport moment from \"moment\";\nexport default {\n  mounted() {\n    this.$store.dispatch(\"declaration/getSubmitted\");\n  },\n  filters: {\n    filterDate(val) {\n      return moment(val).format(\"MMM DD, YYYY\").toString();\n    },\n    filterTime(val) {\n      return moment(val).format(\"h:mm a\").toString();\n    },\n    subQ(val){\n      return val\n    }\n  },\n  computed: {\n    ...mapState({\n      responses: (state) => state.declaration.responses.data,\n      page: (state) => state.declaration.responses.page,\n      today: (state) => state.declaration.responses.today,\n      total: (state) => state.declaration.responses.total,\n    }),\n  },\n  data() {\n    return {\n      page_number: null,\n      checkDialog: false,\n      responseData: null,\n      inputSearch:\"\"\n    };\n  },\n  methods: {\n    pageSwitch(data) {\n      this.page_number = data;\n      this.$store.dispatch(\"declaration/getSubmitted\", data);\n    },\n    handleResponse(data) {\n      this.checkDialog = true;\n      this.responseData = data;\n    },\n    handleQuestion(data){\n      console.log(data.split(\",\"));\n      if(data.trim()){\n        const arr = data.split(\",\")\n        return arr\n      }\n      return []\n    },\n    handleSearch(){ \n      this.$store.dispatch(\"declaration/responseSearch\", this.inputSearch);\n    }\n  },\n};\n</script>\n\n<style scoped>\n.bg {\n  background-color: whitesmoke;\n}\n.adj {\n  width: 280px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}