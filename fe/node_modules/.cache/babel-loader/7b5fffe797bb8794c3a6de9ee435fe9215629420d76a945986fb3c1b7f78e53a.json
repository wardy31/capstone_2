{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\n/**\r\n * This class represents a basic channel.\r\n */\nvar Channel = /*#__PURE__*/function () {\n  function Channel() {\n    _classCallCheck(this, Channel);\n  }\n  _createClass(Channel, [{\n    key: \"listenForWhisper\",\n    value:\n    /**\r\n     * Listen for a whisper event on the channel instance.\r\n     */\n    function listenForWhisper(event, callback) {\n      return this.listen('.client-' + event, callback);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n  }, {\n    key: \"notification\",\n    value: function notification(callback) {\n      return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\n    }\n    /**\r\n     * Stop listening for a whisper event on the channel instance.\r\n     */\n  }, {\n    key: \"stopListeningForWhisper\",\n    value: function stopListeningForWhisper(event, callback) {\n      return this.stopListening('.client-' + event, callback);\n    }\n  }]);\n  return Channel;\n}();\n\n/**\r\n * Event name formatter\r\n */\nvar EventFormatter = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function EventFormatter(namespace) {\n    _classCallCheck(this, EventFormatter);\n    this.setNamespace(namespace);\n  }\n  /**\r\n   * Format the given event name.\r\n   */\n\n  _createClass(EventFormatter, [{\n    key: \"format\",\n    value: function format(event) {\n      if (event.charAt(0) === '.' || event.charAt(0) === '\\\\') {\n        return event.substr(1);\n      } else if (this.namespace) {\n        event = this.namespace + '.' + event;\n      }\n      return event.replace(/\\./g, '\\\\');\n    }\n    /**\r\n     * Set the event namespace.\r\n     */\n  }, {\n    key: \"setNamespace\",\n    value: function setNamespace(value) {\n      this.namespace = value;\n    }\n  }]);\n  return EventFormatter;\n}();\n\n/**\r\n * This class represents a Pusher channel.\r\n */\n\nvar PusherChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(PusherChannel, _Channel);\n  var _super = _createSuper(PusherChannel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function PusherChannel(pusher, name, options) {\n    var _this;\n    _classCallCheck(this, PusherChannel);\n    _this = _super.call(this);\n    _this.name = name;\n    _this.pusher = pusher;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n    _this.subscribe();\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Pusher channel.\r\n   */\n\n  _createClass(PusherChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.subscription = this.pusher.subscribe(this.name);\n    }\n    /**\r\n     * Unsubscribe from a Pusher channel.\r\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.pusher.unsubscribe(this.name);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Listen for all events on the channel instance.\r\n     */\n  }, {\n    key: \"listenToAll\",\n    value: function listenToAll(callback) {\n      var _this2 = this;\n      this.subscription.bind_global(function (event, data) {\n        if (event.startsWith('pusher:')) {\n          return;\n        }\n        var namespace = _this2.options.namespace.replace(/\\./g, '\\\\');\n        var formattedEvent = event.startsWith(namespace) ? event.substring(namespace.length + 1) : '.' + event;\n        callback(formattedEvent, data);\n      });\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      if (callback) {\n        this.subscription.unbind(this.eventFormatter.format(event), callback);\n      } else {\n        this.subscription.unbind(this.eventFormatter.format(event));\n      }\n      return this;\n    }\n    /**\r\n     * Stop listening for all events on the channel instance.\r\n     */\n  }, {\n    key: \"stopListeningToAll\",\n    value: function stopListeningToAll(callback) {\n      if (callback) {\n        this.subscription.unbind_global(callback);\n      } else {\n        this.subscription.unbind_global();\n      }\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('pusher:subscription_succeeded', function () {\n        callback();\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription error occurs.\r\n     */\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      this.on('pusher:subscription_error', function (status) {\n        callback(status);\n      });\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.subscription.bind(event, callback);\n      return this;\n    }\n  }]);\n  return PusherChannel;\n}(Channel);\n\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\nvar PusherPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPrivateChannel, _PusherChannel);\n  var _super = _createSuper(PusherPrivateChannel);\n  function PusherPrivateChannel() {\n    _classCallCheck(this, PusherPrivateChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PusherPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n  return PusherPrivateChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\nvar PusherEncryptedPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherEncryptedPrivateChannel, _PusherChannel);\n  var _super = _createSuper(PusherEncryptedPrivateChannel);\n  function PusherEncryptedPrivateChannel() {\n    _classCallCheck(this, PusherEncryptedPrivateChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PusherEncryptedPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n  return PusherEncryptedPrivateChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Pusher presence channel.\r\n */\n\nvar PusherPresenceChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPresenceChannel, _PusherChannel);\n  var _super = _createSuper(PusherPresenceChannel);\n  function PusherPresenceChannel() {\n    _classCallCheck(this, PusherPresenceChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PusherPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      this.on('pusher:subscription_succeeded', function (data) {\n        callback(Object.keys(data.members).map(function (k) {\n          return data.members[k];\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('pusher:member_added', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('pusher:member_removed', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n  }]);\n  return PusherPresenceChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Socket.io channel.\r\n */\n\nvar SocketIoChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(SocketIoChannel, _Channel);\n  var _super = _createSuper(SocketIoChannel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function SocketIoChannel(socket, name, options) {\n    var _this;\n    _classCallCheck(this, SocketIoChannel);\n    _this = _super.call(this);\n    /**\r\n     * The event callbacks applied to the socket.\r\n     */\n\n    _this.events = {};\n    /**\r\n     * User supplied callbacks for events on this channel.\r\n     */\n\n    _this.listeners = {};\n    _this.name = name;\n    _this.socket = socket;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n    _this.subscribe();\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Socket.io channel.\r\n   */\n\n  _createClass(SocketIoChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.socket.emit('subscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Unsubscribe from channel and ubind event callbacks.\r\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.unbind();\n      this.socket.emit('unsubscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      this.unbindEvent(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('connect', function (socket) {\n        callback(socket);\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind the channel's socket to an event and store the callback.\r\n     */\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      var _this2 = this;\n      this.listeners[event] = this.listeners[event] || [];\n      if (!this.events[event]) {\n        this.events[event] = function (channel, data) {\n          if (_this2.name === channel && _this2.listeners[event]) {\n            _this2.listeners[event].forEach(function (cb) {\n              return cb(data);\n            });\n          }\n        };\n        this.socket.on(event, this.events[event]);\n      }\n      this.listeners[event].push(callback);\n      return this;\n    }\n    /**\r\n     * Unbind the channel's socket from all stored event callbacks.\r\n     */\n  }, {\n    key: \"unbind\",\n    value: function unbind() {\n      var _this3 = this;\n      Object.keys(this.events).forEach(function (event) {\n        _this3.unbindEvent(event);\n      });\n    }\n    /**\r\n     * Unbind the listeners for the given event.\r\n     */\n  }, {\n    key: \"unbindEvent\",\n    value: function unbindEvent(event, callback) {\n      this.listeners[event] = this.listeners[event] || [];\n      if (callback) {\n        this.listeners[event] = this.listeners[event].filter(function (cb) {\n          return cb !== callback;\n        });\n      }\n      if (!callback || this.listeners[event].length === 0) {\n        if (this.events[event]) {\n          this.socket.removeListener(event, this.events[event]);\n          delete this.events[event];\n        }\n        delete this.listeners[event];\n      }\n    }\n  }]);\n  return SocketIoChannel;\n}(Channel);\n\n/**\r\n * This class represents a Socket.io private channel.\r\n */\n\nvar SocketIoPrivateChannel = /*#__PURE__*/function (_SocketIoChannel) {\n  _inherits(SocketIoPrivateChannel, _SocketIoChannel);\n  var _super = _createSuper(SocketIoPrivateChannel);\n  function SocketIoPrivateChannel() {\n    _classCallCheck(this, SocketIoPrivateChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SocketIoPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.socket.emit('client event', {\n        channel: this.name,\n        event: \"client-\".concat(eventName),\n        data: data\n      });\n      return this;\n    }\n  }]);\n  return SocketIoPrivateChannel;\n}(SocketIoChannel);\n\n/**\r\n * This class represents a Socket.io presence channel.\r\n */\n\nvar SocketIoPresenceChannel = /*#__PURE__*/function (_SocketIoPrivateChann) {\n  _inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);\n  var _super = _createSuper(SocketIoPresenceChannel);\n  function SocketIoPresenceChannel() {\n    _classCallCheck(this, SocketIoPresenceChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SocketIoPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      this.on('presence:subscribed', function (members) {\n        callback(members.map(function (m) {\n          return m.user_info;\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('presence:joining', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      this.socket.emit('client event', {\n        channel: this.name,\n        event: \"client-\".concat(eventName),\n        data: data\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('presence:leaving', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n  }]);\n  return SocketIoPresenceChannel;\n}(SocketIoPrivateChannel);\n\n/**\r\n * This class represents a null channel.\r\n */\n\nvar NullChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(NullChannel, _Channel);\n  var _super = _createSuper(NullChannel);\n  function NullChannel() {\n    _classCallCheck(this, NullChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(NullChannel, [{\n    key: \"subscribe\",\n    value:\n    /**\r\n     * Subscribe to a channel.\r\n     */\n    function subscribe() {//\n    }\n    /**\r\n     * Unsubscribe from a channel.\r\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {//\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      return this;\n    }\n    /**\r\n     * Listen for all events on the channel instance.\r\n     */\n  }, {\n    key: \"listenToAll\",\n    value: function listenToAll(callback) {\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      return this;\n    }\n  }]);\n  return NullChannel;\n}(Channel);\n\n/**\r\n * This class represents a null private channel.\r\n */\n\nvar NullPrivateChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPrivateChannel, _NullChannel);\n  var _super = _createSuper(NullPrivateChannel);\n  function NullPrivateChannel() {\n    _classCallCheck(this, NullPrivateChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(NullPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      return this;\n    }\n  }]);\n  return NullPrivateChannel;\n}(NullChannel);\n\n/**\r\n * This class represents a null presence channel.\r\n */\n\nvar NullPresenceChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPresenceChannel, _NullChannel);\n  var _super = _createSuper(NullPresenceChannel);\n  function NullPresenceChannel() {\n    _classCallCheck(this, NullPresenceChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(NullPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      return this;\n    }\n  }]);\n  return NullPresenceChannel;\n}(NullChannel);\nvar Connector = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Connector(options) {\n    _classCallCheck(this, Connector);\n\n    /**\r\n     * Default connector options.\r\n     */\n    this._defaultOptions = {\n      auth: {\n        headers: {}\n      },\n      authEndpoint: '/broadcasting/auth',\n      userAuthentication: {\n        endpoint: '/broadcasting/user-auth',\n        headers: {}\n      },\n      broadcaster: 'pusher',\n      csrfToken: null,\n      bearerToken: null,\n      host: null,\n      key: null,\n      namespace: 'App.Events'\n    };\n    this.setOptions(options);\n    this.connect();\n  }\n  /**\r\n   * Merge the custom options with the defaults.\r\n   */\n\n  _createClass(Connector, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.options = _extends(this._defaultOptions, options);\n      var token = this.csrfToken();\n      if (token) {\n        this.options.auth.headers['X-CSRF-TOKEN'] = token;\n        this.options.userAuthentication.headers['X-CSRF-TOKEN'] = token;\n      }\n      token = this.options.bearerToken;\n      if (token) {\n        this.options.auth.headers['Authorization'] = 'Bearer ' + token;\n        this.options.userAuthentication.headers['Authorization'] = 'Bearer ' + token;\n      }\n      return options;\n    }\n    /**\r\n     * Extract the CSRF token from the page.\r\n     */\n  }, {\n    key: \"csrfToken\",\n    value: function csrfToken() {\n      var selector;\n      if (typeof window !== 'undefined' && window['Laravel'] && window['Laravel'].csrfToken) {\n        return window['Laravel'].csrfToken;\n      } else if (this.options.csrfToken) {\n        return this.options.csrfToken;\n      } else if (typeof document !== 'undefined' && typeof document.querySelector === 'function' && (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\n        return selector.getAttribute('content');\n      }\n      return null;\n    }\n  }]);\n  return Connector;\n}();\n\n/**\r\n * This class creates a connector to Pusher.\r\n */\n\nvar PusherConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(PusherConnector, _Connector);\n  var _super = _createSuper(PusherConnector);\n  function PusherConnector() {\n    var _this;\n    _classCallCheck(this, PusherConnector);\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Pusher connection.\r\n   */\n\n  _createClass(PusherConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      if (typeof this.options.client !== 'undefined') {\n        this.pusher = this.options.client;\n      } else if (this.options.Pusher) {\n        this.pusher = new this.options.Pusher(this.options.key, this.options);\n      } else {\n        this.pusher = new Pusher(this.options.key, this.options);\n      }\n    }\n    /**\r\n     * Sign in the user via Pusher user authentication (https://pusher.com/docs/channels/using_channels/user-authentication/).\r\n     */\n  }, {\n    key: \"signin\",\n    value: function signin() {\n      this.pusher.signin();\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new PusherChannel(this.pusher, name, this.options);\n      }\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);\n      }\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n  }, {\n    key: \"encryptedPrivateChannel\",\n    value: function encryptedPrivateChannel(name) {\n      if (!this.channels['private-encrypted-' + name]) {\n        this.channels['private-encrypted-' + name] = new PusherEncryptedPrivateChannel(this.pusher, 'private-encrypted-' + name, this.options);\n      }\n      return this.channels['private-encrypted-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);\n      }\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this2 = this;\n      var channels = [name, 'private-' + name, 'private-encrypted-' + name, 'presence-' + name];\n      channels.forEach(function (name, index) {\n        _this2.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.pusher.connection.socket_id;\n    }\n    /**\r\n     * Disconnect Pusher connection.\r\n     */\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.pusher.disconnect();\n    }\n  }]);\n  return PusherConnector;\n}(Connector);\n\n/**\r\n * This class creates a connnector to a Socket.io server.\r\n */\n\nvar SocketIoConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(SocketIoConnector, _Connector);\n  var _super = _createSuper(SocketIoConnector);\n  function SocketIoConnector() {\n    var _this;\n    _classCallCheck(this, SocketIoConnector);\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Socket.io connection.\r\n   */\n\n  _createClass(SocketIoConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      var _this2 = this;\n      var io = this.getSocketIO();\n      this.socket = io(this.options.host, this.options);\n      this.socket.on('reconnect', function () {\n        Object.values(_this2.channels).forEach(function (channel) {\n          channel.subscribe();\n        });\n      });\n      return this.socket;\n    }\n    /**\r\n     * Get socket.io module from global scope or options.\r\n     */\n  }, {\n    key: \"getSocketIO\",\n    value: function getSocketIO() {\n      if (typeof this.options.client !== 'undefined') {\n        return this.options.client;\n      }\n      if (typeof io !== 'undefined') {\n        return io;\n      }\n      throw new Error('Socket.io client not found. Should be globally available or passed via options.client');\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new SocketIoChannel(this.socket, name, this.options);\n      }\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);\n      }\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);\n      }\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this3 = this;\n      var channels = [name, 'private-' + name, 'presence-' + name];\n      channels.forEach(function (name) {\n        _this3.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.socket.id;\n    }\n    /**\r\n     * Disconnect Socketio connection.\r\n     */\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.socket.disconnect();\n    }\n  }]);\n  return SocketIoConnector;\n}(Connector);\n\n/**\r\n * This class creates a null connector.\r\n */\n\nvar NullConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(NullConnector, _Connector);\n  var _super = _createSuper(NullConnector);\n  function NullConnector() {\n    var _this;\n    _classCallCheck(this, NullConnector);\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh connection.\r\n   */\n\n  _createClass(NullConnector, [{\n    key: \"connect\",\n    value: function connect() {//\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      return new NullPrivateChannel();\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n  }, {\n    key: \"encryptedPrivateChannel\",\n    value: function encryptedPrivateChannel(name) {\n      return new NullPrivateChannel();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      return new NullPresenceChannel();\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n  }, {\n    key: \"leave\",\n    value: function leave(name) {//\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {//\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return 'fake-socket-id';\n    }\n    /**\r\n     * Disconnect the connection.\r\n     */\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {//\n    }\n  }]);\n  return NullConnector;\n}(Connector);\n\n/**\r\n * This class is the primary API for interacting with broadcasting.\r\n */\n\nvar Echo = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Echo(options) {\n    _classCallCheck(this, Echo);\n    this.options = options;\n    this.connect();\n    if (!this.options.withoutInterceptors) {\n      this.registerInterceptors();\n    }\n  }\n  /**\r\n   * Get a channel instance by name.\r\n   */\n\n  _createClass(Echo, [{\n    key: \"channel\",\n    value: function channel(_channel) {\n      return this.connector.channel(_channel);\n    }\n    /**\r\n     * Create a new connection.\r\n     */\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      if (this.options.broadcaster == 'pusher') {\n        this.connector = new PusherConnector(this.options);\n      } else if (this.options.broadcaster == 'socket.io') {\n        this.connector = new SocketIoConnector(this.options);\n      } else if (this.options.broadcaster == 'null') {\n        this.connector = new NullConnector(this.options);\n      } else if (typeof this.options.broadcaster == 'function') {\n        this.connector = new this.options.broadcaster(this.options);\n      }\n    }\n    /**\r\n     * Disconnect from the Echo server.\r\n     */\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.connector.disconnect();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n  }, {\n    key: \"join\",\n    value: function join(channel) {\n      return this.connector.presenceChannel(channel);\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n  }, {\n    key: \"leave\",\n    value: function leave(channel) {\n      this.connector.leave(channel);\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(channel) {\n      this.connector.leaveChannel(channel);\n    }\n    /**\r\n     * Leave all channels.\r\n     */\n  }, {\n    key: \"leaveAllChannels\",\n    value: function leaveAllChannels() {\n      for (var channel in this.connector.channels) {\n        this.leaveChannel(channel);\n      }\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(channel, event, callback) {\n      return this.connector.listen(channel, event, callback);\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n  }, {\n    key: \"private\",\n    value: function _private(channel) {\n      return this.connector.privateChannel(channel);\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n  }, {\n    key: \"encryptedPrivate\",\n    value: function encryptedPrivate(channel) {\n      return this.connector.encryptedPrivateChannel(channel);\n    }\n    /**\r\n     * Get the Socket ID for the connection.\r\n     */\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.connector.socketId();\n    }\n    /**\r\n     * Register 3rd party request interceptiors. These are used to automatically\r\n     * send a connections socket id to a Laravel app with a X-Socket-Id header.\r\n     */\n  }, {\n    key: \"registerInterceptors\",\n    value: function registerInterceptors() {\n      if (typeof Vue === 'function' && Vue.http) {\n        this.registerVueRequestInterceptor();\n      }\n      if (typeof axios === 'function') {\n        this.registerAxiosRequestInterceptor();\n      }\n      if (typeof jQuery === 'function') {\n        this.registerjQueryAjaxSetup();\n      }\n      if ((typeof Turbo === \"undefined\" ? \"undefined\" : _typeof(Turbo)) === 'object') {\n        this.registerTurboRequestInterceptor();\n      }\n    }\n    /**\r\n     * Register a Vue HTTP interceptor to add the X-Socket-ID header.\r\n     */\n  }, {\n    key: \"registerVueRequestInterceptor\",\n    value: function registerVueRequestInterceptor() {\n      var _this = this;\n      Vue.http.interceptors.push(function (request, next) {\n        if (_this.socketId()) {\n          request.headers.set('X-Socket-ID', _this.socketId());\n        }\n        next();\n      });\n    }\n    /**\r\n     * Register an Axios HTTP interceptor to add the X-Socket-ID header.\r\n     */\n  }, {\n    key: \"registerAxiosRequestInterceptor\",\n    value: function registerAxiosRequestInterceptor() {\n      var _this2 = this;\n      axios.interceptors.request.use(function (config) {\n        if (_this2.socketId()) {\n          config.headers['X-Socket-Id'] = _this2.socketId();\n        }\n        return config;\n      });\n    }\n    /**\r\n     * Register jQuery AjaxPrefilter to add the X-Socket-ID header.\r\n     */\n  }, {\n    key: \"registerjQueryAjaxSetup\",\n    value: function registerjQueryAjaxSetup() {\n      var _this3 = this;\n      if (typeof jQuery.ajax != 'undefined') {\n        jQuery.ajaxPrefilter(function (options, originalOptions, xhr) {\n          if (_this3.socketId()) {\n            xhr.setRequestHeader('X-Socket-Id', _this3.socketId());\n          }\n        });\n      }\n    }\n    /**\r\n     * Register the Turbo Request interceptor to add the X-Socket-ID header.\r\n     */\n  }, {\n    key: \"registerTurboRequestInterceptor\",\n    value: function registerTurboRequestInterceptor() {\n      var _this4 = this;\n      document.addEventListener('turbo:before-fetch-request', function (event) {\n        event.detail.fetchOptions.headers['X-Socket-Id'] = _this4.socketId();\n      });\n    }\n  }]);\n  return Echo;\n}();\nexport { Channel, Echo as default };","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_extends","assign","arguments","source","hasOwnProperty","call","apply","_inherits","subClass","superClass","create","value","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","Channel","listenForWhisper","event","callback","listen","notification","stopListeningForWhisper","stopListening","EventFormatter","namespace","setNamespace","format","charAt","substr","replace","PusherChannel","_Channel","_super","pusher","name","options","_this","eventFormatter","subscribe","subscription","unsubscribe","on","listenToAll","_this2","bind_global","data","startsWith","formattedEvent","substring","unbind","stopListeningToAll","unbind_global","subscribed","error","status","bind","PusherPrivateChannel","_PusherChannel","whisper","eventName","channels","trigger","concat","PusherEncryptedPrivateChannel","PusherPresenceChannel","here","keys","members","map","k","joining","member","info","leaving","SocketIoChannel","socket","events","listeners","emit","channel","auth","unbindEvent","forEach","cb","push","_this3","filter","removeListener","SocketIoPrivateChannel","_SocketIoChannel","SocketIoPresenceChannel","_SocketIoPrivateChann","m","user_info","NullChannel","NullPrivateChannel","_NullChannel","NullPresenceChannel","Connector","_defaultOptions","headers","authEndpoint","userAuthentication","endpoint","broadcaster","csrfToken","bearerToken","host","setOptions","connect","token","selector","window","document","querySelector","getAttribute","PusherConnector","_Connector","client","Pusher","signin","privateChannel","encryptedPrivateChannel","presenceChannel","leave","index","leaveChannel","socketId","connection","socket_id","disconnect","SocketIoConnector","io","getSocketIO","values","Error","id","NullConnector","Echo","withoutInterceptors","registerInterceptors","_channel","connector","join","leaveAllChannels","_private","encryptedPrivate","Vue","http","registerVueRequestInterceptor","axios","registerAxiosRequestInterceptor","jQuery","registerjQueryAjaxSetup","Turbo","registerTurboRequestInterceptor","interceptors","request","next","set","use","config","ajax","ajaxPrefilter","originalOptions","xhr","setRequestHeader","_this4","addEventListener","detail","fetchOptions","default"],"sources":["/home/wardy/Desktop/capstone/fe/node_modules/laravel-echo/dist/echo.js"],"sourcesContent":["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\n/**\r\n * This class represents a basic channel.\r\n */\nvar Channel = /*#__PURE__*/function () {\n  function Channel() {\n    _classCallCheck(this, Channel);\n  }\n\n  _createClass(Channel, [{\n    key: \"listenForWhisper\",\n    value:\n    /**\r\n     * Listen for a whisper event on the channel instance.\r\n     */\n    function listenForWhisper(event, callback) {\n      return this.listen('.client-' + event, callback);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"notification\",\n    value: function notification(callback) {\n      return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\n    }\n    /**\r\n     * Stop listening for a whisper event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListeningForWhisper\",\n    value: function stopListeningForWhisper(event, callback) {\n      return this.stopListening('.client-' + event, callback);\n    }\n  }]);\n\n  return Channel;\n}();\n\n/**\r\n * Event name formatter\r\n */\nvar EventFormatter = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function EventFormatter(namespace) {\n    _classCallCheck(this, EventFormatter);\n\n    this.setNamespace(namespace);\n  }\n  /**\r\n   * Format the given event name.\r\n   */\n\n\n  _createClass(EventFormatter, [{\n    key: \"format\",\n    value: function format(event) {\n      if (event.charAt(0) === '.' || event.charAt(0) === '\\\\') {\n        return event.substr(1);\n      } else if (this.namespace) {\n        event = this.namespace + '.' + event;\n      }\n\n      return event.replace(/\\./g, '\\\\');\n    }\n    /**\r\n     * Set the event namespace.\r\n     */\n\n  }, {\n    key: \"setNamespace\",\n    value: function setNamespace(value) {\n      this.namespace = value;\n    }\n  }]);\n\n  return EventFormatter;\n}();\n\n/**\r\n * This class represents a Pusher channel.\r\n */\n\nvar PusherChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(PusherChannel, _Channel);\n\n  var _super = _createSuper(PusherChannel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function PusherChannel(pusher, name, options) {\n    var _this;\n\n    _classCallCheck(this, PusherChannel);\n\n    _this = _super.call(this);\n    _this.name = name;\n    _this.pusher = pusher;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\n    _this.subscribe();\n\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Pusher channel.\r\n   */\n\n\n  _createClass(PusherChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.subscription = this.pusher.subscribe(this.name);\n    }\n    /**\r\n     * Unsubscribe from a Pusher channel.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.pusher.unsubscribe(this.name);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Listen for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"listenToAll\",\n    value: function listenToAll(callback) {\n      var _this2 = this;\n\n      this.subscription.bind_global(function (event, data) {\n        if (event.startsWith('pusher:')) {\n          return;\n        }\n\n        var namespace = _this2.options.namespace.replace(/\\./g, '\\\\');\n\n        var formattedEvent = event.startsWith(namespace) ? event.substring(namespace.length + 1) : '.' + event;\n        callback(formattedEvent, data);\n      });\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      if (callback) {\n        this.subscription.unbind(this.eventFormatter.format(event), callback);\n      } else {\n        this.subscription.unbind(this.eventFormatter.format(event));\n      }\n\n      return this;\n    }\n    /**\r\n     * Stop listening for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListeningToAll\",\n    value: function stopListeningToAll(callback) {\n      if (callback) {\n        this.subscription.unbind_global(callback);\n      } else {\n        this.subscription.unbind_global();\n      }\n\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('pusher:subscription_succeeded', function () {\n        callback();\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      this.on('pusher:subscription_error', function (status) {\n        callback(status);\n      });\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.subscription.bind(event, callback);\n      return this;\n    }\n  }]);\n\n  return PusherChannel;\n}(Channel);\n\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\nvar PusherPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPrivateChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherPrivateChannel);\n\n  function PusherPrivateChannel() {\n    _classCallCheck(this, PusherPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherPrivateChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\nvar PusherEncryptedPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherEncryptedPrivateChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherEncryptedPrivateChannel);\n\n  function PusherEncryptedPrivateChannel() {\n    _classCallCheck(this, PusherEncryptedPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherEncryptedPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherEncryptedPrivateChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Pusher presence channel.\r\n */\n\nvar PusherPresenceChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPresenceChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherPresenceChannel);\n\n  function PusherPresenceChannel() {\n    _classCallCheck(this, PusherPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      this.on('pusher:subscription_succeeded', function (data) {\n        callback(Object.keys(data.members).map(function (k) {\n          return data.members[k];\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('pusher:member_added', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('pusher:member_removed', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n  }]);\n\n  return PusherPresenceChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Socket.io channel.\r\n */\n\nvar SocketIoChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(SocketIoChannel, _Channel);\n\n  var _super = _createSuper(SocketIoChannel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function SocketIoChannel(socket, name, options) {\n    var _this;\n\n    _classCallCheck(this, SocketIoChannel);\n\n    _this = _super.call(this);\n    /**\r\n     * The event callbacks applied to the socket.\r\n     */\n\n    _this.events = {};\n    /**\r\n     * User supplied callbacks for events on this channel.\r\n     */\n\n    _this.listeners = {};\n    _this.name = name;\n    _this.socket = socket;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\n    _this.subscribe();\n\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Socket.io channel.\r\n   */\n\n\n  _createClass(SocketIoChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.socket.emit('subscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Unsubscribe from channel and ubind event callbacks.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.unbind();\n      this.socket.emit('unsubscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      this.unbindEvent(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('connect', function (socket) {\n        callback(socket);\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind the channel's socket to an event and store the callback.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      var _this2 = this;\n\n      this.listeners[event] = this.listeners[event] || [];\n\n      if (!this.events[event]) {\n        this.events[event] = function (channel, data) {\n          if (_this2.name === channel && _this2.listeners[event]) {\n            _this2.listeners[event].forEach(function (cb) {\n              return cb(data);\n            });\n          }\n        };\n\n        this.socket.on(event, this.events[event]);\n      }\n\n      this.listeners[event].push(callback);\n      return this;\n    }\n    /**\r\n     * Unbind the channel's socket from all stored event callbacks.\r\n     */\n\n  }, {\n    key: \"unbind\",\n    value: function unbind() {\n      var _this3 = this;\n\n      Object.keys(this.events).forEach(function (event) {\n        _this3.unbindEvent(event);\n      });\n    }\n    /**\r\n     * Unbind the listeners for the given event.\r\n     */\n\n  }, {\n    key: \"unbindEvent\",\n    value: function unbindEvent(event, callback) {\n      this.listeners[event] = this.listeners[event] || [];\n\n      if (callback) {\n        this.listeners[event] = this.listeners[event].filter(function (cb) {\n          return cb !== callback;\n        });\n      }\n\n      if (!callback || this.listeners[event].length === 0) {\n        if (this.events[event]) {\n          this.socket.removeListener(event, this.events[event]);\n          delete this.events[event];\n        }\n\n        delete this.listeners[event];\n      }\n    }\n  }]);\n\n  return SocketIoChannel;\n}(Channel);\n\n/**\r\n * This class represents a Socket.io private channel.\r\n */\n\nvar SocketIoPrivateChannel = /*#__PURE__*/function (_SocketIoChannel) {\n  _inherits(SocketIoPrivateChannel, _SocketIoChannel);\n\n  var _super = _createSuper(SocketIoPrivateChannel);\n\n  function SocketIoPrivateChannel() {\n    _classCallCheck(this, SocketIoPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SocketIoPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.socket.emit('client event', {\n        channel: this.name,\n        event: \"client-\".concat(eventName),\n        data: data\n      });\n      return this;\n    }\n  }]);\n\n  return SocketIoPrivateChannel;\n}(SocketIoChannel);\n\n/**\r\n * This class represents a Socket.io presence channel.\r\n */\n\nvar SocketIoPresenceChannel = /*#__PURE__*/function (_SocketIoPrivateChann) {\n  _inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);\n\n  var _super = _createSuper(SocketIoPresenceChannel);\n\n  function SocketIoPresenceChannel() {\n    _classCallCheck(this, SocketIoPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SocketIoPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      this.on('presence:subscribed', function (members) {\n        callback(members.map(function (m) {\n          return m.user_info;\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('presence:joining', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      this.socket.emit('client event', {\n        channel: this.name,\n        event: \"client-\".concat(eventName),\n        data: data\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('presence:leaving', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n  }]);\n\n  return SocketIoPresenceChannel;\n}(SocketIoPrivateChannel);\n\n/**\r\n * This class represents a null channel.\r\n */\n\nvar NullChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(NullChannel, _Channel);\n\n  var _super = _createSuper(NullChannel);\n\n  function NullChannel() {\n    _classCallCheck(this, NullChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullChannel, [{\n    key: \"subscribe\",\n    value:\n    /**\r\n     * Subscribe to a channel.\r\n     */\n    function subscribe() {//\n    }\n    /**\r\n     * Unsubscribe from a channel.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {//\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      return this;\n    }\n    /**\r\n     * Listen for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"listenToAll\",\n    value: function listenToAll(callback) {\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      return this;\n    }\n  }]);\n\n  return NullChannel;\n}(Channel);\n\n/**\r\n * This class represents a null private channel.\r\n */\n\nvar NullPrivateChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPrivateChannel, _NullChannel);\n\n  var _super = _createSuper(NullPrivateChannel);\n\n  function NullPrivateChannel() {\n    _classCallCheck(this, NullPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      return this;\n    }\n  }]);\n\n  return NullPrivateChannel;\n}(NullChannel);\n\n/**\r\n * This class represents a null presence channel.\r\n */\n\nvar NullPresenceChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPresenceChannel, _NullChannel);\n\n  var _super = _createSuper(NullPresenceChannel);\n\n  function NullPresenceChannel() {\n    _classCallCheck(this, NullPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      return this;\n    }\n  }]);\n\n  return NullPresenceChannel;\n}(NullChannel);\n\nvar Connector = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Connector(options) {\n    _classCallCheck(this, Connector);\n\n    /**\r\n     * Default connector options.\r\n     */\n    this._defaultOptions = {\n      auth: {\n        headers: {}\n      },\n      authEndpoint: '/broadcasting/auth',\n      userAuthentication: {\n        endpoint: '/broadcasting/user-auth',\n        headers: {}\n      },\n      broadcaster: 'pusher',\n      csrfToken: null,\n      bearerToken: null,\n      host: null,\n      key: null,\n      namespace: 'App.Events'\n    };\n    this.setOptions(options);\n    this.connect();\n  }\n  /**\r\n   * Merge the custom options with the defaults.\r\n   */\n\n\n  _createClass(Connector, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.options = _extends(this._defaultOptions, options);\n      var token = this.csrfToken();\n\n      if (token) {\n        this.options.auth.headers['X-CSRF-TOKEN'] = token;\n        this.options.userAuthentication.headers['X-CSRF-TOKEN'] = token;\n      }\n\n      token = this.options.bearerToken;\n\n      if (token) {\n        this.options.auth.headers['Authorization'] = 'Bearer ' + token;\n        this.options.userAuthentication.headers['Authorization'] = 'Bearer ' + token;\n      }\n\n      return options;\n    }\n    /**\r\n     * Extract the CSRF token from the page.\r\n     */\n\n  }, {\n    key: \"csrfToken\",\n    value: function csrfToken() {\n      var selector;\n\n      if (typeof window !== 'undefined' && window['Laravel'] && window['Laravel'].csrfToken) {\n        return window['Laravel'].csrfToken;\n      } else if (this.options.csrfToken) {\n        return this.options.csrfToken;\n      } else if (typeof document !== 'undefined' && typeof document.querySelector === 'function' && (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\n        return selector.getAttribute('content');\n      }\n\n      return null;\n    }\n  }]);\n\n  return Connector;\n}();\n\n/**\r\n * This class creates a connector to Pusher.\r\n */\n\nvar PusherConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(PusherConnector, _Connector);\n\n  var _super = _createSuper(PusherConnector);\n\n  function PusherConnector() {\n    var _this;\n\n    _classCallCheck(this, PusherConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Pusher connection.\r\n   */\n\n\n  _createClass(PusherConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      if (typeof this.options.client !== 'undefined') {\n        this.pusher = this.options.client;\n      } else if (this.options.Pusher) {\n        this.pusher = new this.options.Pusher(this.options.key, this.options);\n      } else {\n        this.pusher = new Pusher(this.options.key, this.options);\n      }\n    }\n    /**\r\n     * Sign in the user via Pusher user authentication (https://pusher.com/docs/channels/using_channels/user-authentication/).\r\n     */\n\n  }, {\n    key: \"signin\",\n    value: function signin() {\n      this.pusher.signin();\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new PusherChannel(this.pusher, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivateChannel\",\n    value: function encryptedPrivateChannel(name) {\n      if (!this.channels['private-encrypted-' + name]) {\n        this.channels['private-encrypted-' + name] = new PusherEncryptedPrivateChannel(this.pusher, 'private-encrypted-' + name, this.options);\n      }\n\n      return this.channels['private-encrypted-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this2 = this;\n\n      var channels = [name, 'private-' + name, 'private-encrypted-' + name, 'presence-' + name];\n      channels.forEach(function (name, index) {\n        _this2.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.pusher.connection.socket_id;\n    }\n    /**\r\n     * Disconnect Pusher connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.pusher.disconnect();\n    }\n  }]);\n\n  return PusherConnector;\n}(Connector);\n\n/**\r\n * This class creates a connnector to a Socket.io server.\r\n */\n\nvar SocketIoConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(SocketIoConnector, _Connector);\n\n  var _super = _createSuper(SocketIoConnector);\n\n  function SocketIoConnector() {\n    var _this;\n\n    _classCallCheck(this, SocketIoConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Socket.io connection.\r\n   */\n\n\n  _createClass(SocketIoConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      var _this2 = this;\n\n      var io = this.getSocketIO();\n      this.socket = io(this.options.host, this.options);\n      this.socket.on('reconnect', function () {\n        Object.values(_this2.channels).forEach(function (channel) {\n          channel.subscribe();\n        });\n      });\n      return this.socket;\n    }\n    /**\r\n     * Get socket.io module from global scope or options.\r\n     */\n\n  }, {\n    key: \"getSocketIO\",\n    value: function getSocketIO() {\n      if (typeof this.options.client !== 'undefined') {\n        return this.options.client;\n      }\n\n      if (typeof io !== 'undefined') {\n        return io;\n      }\n\n      throw new Error('Socket.io client not found. Should be globally available or passed via options.client');\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new SocketIoChannel(this.socket, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this3 = this;\n\n      var channels = [name, 'private-' + name, 'presence-' + name];\n      channels.forEach(function (name) {\n        _this3.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.socket.id;\n    }\n    /**\r\n     * Disconnect Socketio connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.socket.disconnect();\n    }\n  }]);\n\n  return SocketIoConnector;\n}(Connector);\n\n/**\r\n * This class creates a null connector.\r\n */\n\nvar NullConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(NullConnector, _Connector);\n\n  var _super = _createSuper(NullConnector);\n\n  function NullConnector() {\n    var _this;\n\n    _classCallCheck(this, NullConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh connection.\r\n   */\n\n\n  _createClass(NullConnector, [{\n    key: \"connect\",\n    value: function connect() {//\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      return new NullPrivateChannel();\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivateChannel\",\n    value: function encryptedPrivateChannel(name) {\n      return new NullPrivateChannel();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      return new NullPresenceChannel();\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {//\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {//\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return 'fake-socket-id';\n    }\n    /**\r\n     * Disconnect the connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {//\n    }\n  }]);\n\n  return NullConnector;\n}(Connector);\n\n/**\r\n * This class is the primary API for interacting with broadcasting.\r\n */\n\nvar Echo = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Echo(options) {\n    _classCallCheck(this, Echo);\n\n    this.options = options;\n    this.connect();\n\n    if (!this.options.withoutInterceptors) {\n      this.registerInterceptors();\n    }\n  }\n  /**\r\n   * Get a channel instance by name.\r\n   */\n\n\n  _createClass(Echo, [{\n    key: \"channel\",\n    value: function channel(_channel) {\n      return this.connector.channel(_channel);\n    }\n    /**\r\n     * Create a new connection.\r\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      if (this.options.broadcaster == 'pusher') {\n        this.connector = new PusherConnector(this.options);\n      } else if (this.options.broadcaster == 'socket.io') {\n        this.connector = new SocketIoConnector(this.options);\n      } else if (this.options.broadcaster == 'null') {\n        this.connector = new NullConnector(this.options);\n      } else if (typeof this.options.broadcaster == 'function') {\n        this.connector = new this.options.broadcaster(this.options);\n      }\n    }\n    /**\r\n     * Disconnect from the Echo server.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.connector.disconnect();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"join\",\n    value: function join(channel) {\n      return this.connector.presenceChannel(channel);\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(channel) {\n      this.connector.leave(channel);\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(channel) {\n      this.connector.leaveChannel(channel);\n    }\n    /**\r\n     * Leave all channels.\r\n     */\n\n  }, {\n    key: \"leaveAllChannels\",\n    value: function leaveAllChannels() {\n      for (var channel in this.connector.channels) {\n        this.leaveChannel(channel);\n      }\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(channel, event, callback) {\n      return this.connector.listen(channel, event, callback);\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"private\",\n    value: function _private(channel) {\n      return this.connector.privateChannel(channel);\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivate\",\n    value: function encryptedPrivate(channel) {\n      return this.connector.encryptedPrivateChannel(channel);\n    }\n    /**\r\n     * Get the Socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.connector.socketId();\n    }\n    /**\r\n     * Register 3rd party request interceptiors. These are used to automatically\r\n     * send a connections socket id to a Laravel app with a X-Socket-Id header.\r\n     */\n\n  }, {\n    key: \"registerInterceptors\",\n    value: function registerInterceptors() {\n      if (typeof Vue === 'function' && Vue.http) {\n        this.registerVueRequestInterceptor();\n      }\n\n      if (typeof axios === 'function') {\n        this.registerAxiosRequestInterceptor();\n      }\n\n      if (typeof jQuery === 'function') {\n        this.registerjQueryAjaxSetup();\n      }\n\n      if ((typeof Turbo === \"undefined\" ? \"undefined\" : _typeof(Turbo)) === 'object') {\n        this.registerTurboRequestInterceptor();\n      }\n    }\n    /**\r\n     * Register a Vue HTTP interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerVueRequestInterceptor\",\n    value: function registerVueRequestInterceptor() {\n      var _this = this;\n\n      Vue.http.interceptors.push(function (request, next) {\n        if (_this.socketId()) {\n          request.headers.set('X-Socket-ID', _this.socketId());\n        }\n\n        next();\n      });\n    }\n    /**\r\n     * Register an Axios HTTP interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerAxiosRequestInterceptor\",\n    value: function registerAxiosRequestInterceptor() {\n      var _this2 = this;\n\n      axios.interceptors.request.use(function (config) {\n        if (_this2.socketId()) {\n          config.headers['X-Socket-Id'] = _this2.socketId();\n        }\n\n        return config;\n      });\n    }\n    /**\r\n     * Register jQuery AjaxPrefilter to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerjQueryAjaxSetup\",\n    value: function registerjQueryAjaxSetup() {\n      var _this3 = this;\n\n      if (typeof jQuery.ajax != 'undefined') {\n        jQuery.ajaxPrefilter(function (options, originalOptions, xhr) {\n          if (_this3.socketId()) {\n            xhr.setRequestHeader('X-Socket-Id', _this3.socketId());\n          }\n        });\n      }\n    }\n    /**\r\n     * Register the Turbo Request interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerTurboRequestInterceptor\",\n    value: function registerTurboRequestInterceptor() {\n      var _this4 = this;\n\n      document.addEventListener('turbo:before-fetch-request', function (event) {\n        event.detail.fetchOptions.headers['X-Socket-Id'] = _this4.socketId();\n      });\n    }\n  }]);\n\n  return Echo;\n}();\n\nexport { Channel, Echo as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}