{"ast":null,"code":"import { disposeUnusedWeightTensors } from '../common/disposeUnusedWeightTensors';\nimport { loadSeparableConvParamsFactory } from '../common/extractSeparableConvParamsFactory';\nimport { extractWeightEntryFactory } from '../common/extractWeightEntryFactory';\nfunction extractorsFactory(weightMap, paramMappings) {\n  var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\n  function extractBatchNormParams(prefix) {\n    var sub = extractWeightEntry(prefix + \"/sub\", 1);\n    var truediv = extractWeightEntry(prefix + \"/truediv\", 1);\n    return {\n      sub: sub,\n      truediv: truediv\n    };\n  }\n  function extractConvParams(prefix) {\n    var filters = extractWeightEntry(prefix + \"/filters\", 4);\n    var bias = extractWeightEntry(prefix + \"/bias\", 1);\n    return {\n      filters: filters,\n      bias: bias\n    };\n  }\n  function extractConvWithBatchNormParams(prefix) {\n    var conv = extractConvParams(prefix + \"/conv\");\n    var bn = extractBatchNormParams(prefix + \"/bn\");\n    return {\n      conv: conv,\n      bn: bn\n    };\n  }\n  var extractSeparableConvParams = loadSeparableConvParamsFactory(extractWeightEntry);\n  return {\n    extractConvParams: extractConvParams,\n    extractConvWithBatchNormParams: extractConvWithBatchNormParams,\n    extractSeparableConvParams: extractSeparableConvParams\n  };\n}\nexport function extractParamsFromWeigthMap(weightMap, config) {\n  var paramMappings = [];\n  var _a = extractorsFactory(weightMap, paramMappings),\n    extractConvParams = _a.extractConvParams,\n    extractConvWithBatchNormParams = _a.extractConvWithBatchNormParams,\n    extractSeparableConvParams = _a.extractSeparableConvParams;\n  var params;\n  if (config.withSeparableConvs) {\n    var numFilters = config.filterSizes && config.filterSizes.length || 9;\n    params = {\n      conv0: config.isFirstLayerConv2d ? extractConvParams('conv0') : extractSeparableConvParams('conv0'),\n      conv1: extractSeparableConvParams('conv1'),\n      conv2: extractSeparableConvParams('conv2'),\n      conv3: extractSeparableConvParams('conv3'),\n      conv4: extractSeparableConvParams('conv4'),\n      conv5: extractSeparableConvParams('conv5'),\n      conv6: numFilters > 7 ? extractSeparableConvParams('conv6') : undefined,\n      conv7: numFilters > 8 ? extractSeparableConvParams('conv7') : undefined,\n      conv8: extractConvParams('conv8')\n    };\n  } else {\n    params = {\n      conv0: extractConvWithBatchNormParams('conv0'),\n      conv1: extractConvWithBatchNormParams('conv1'),\n      conv2: extractConvWithBatchNormParams('conv2'),\n      conv3: extractConvWithBatchNormParams('conv3'),\n      conv4: extractConvWithBatchNormParams('conv4'),\n      conv5: extractConvWithBatchNormParams('conv5'),\n      conv6: extractConvWithBatchNormParams('conv6'),\n      conv7: extractConvWithBatchNormParams('conv7'),\n      conv8: extractConvParams('conv8')\n    };\n  }\n  disposeUnusedWeightTensors(weightMap, paramMappings);\n  return {\n    params: params,\n    paramMappings: paramMappings\n  };\n}","map":{"version":3,"mappings":"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","names":["disposeUnusedWeightTensors","loadSeparableConvParamsFactory","extractWeightEntryFactory","extractorsFactory","weightMap","paramMappings","extractWeightEntry","extractBatchNormParams","prefix","sub","truediv","extractConvParams","filters","bias","extractConvWithBatchNormParams","conv","bn","extractSeparableConvParams","extractParamsFromWeigthMap","config","params","withSeparableConvs","numFilters","filterSizes","length","conv0","isFirstLayerConv2d","conv1","conv2","conv3","conv4","conv5","conv6","undefined","conv7","conv8"],"sourceRoot":"","sources":["../../../src/tinyYolov2/extractParamsFromWeigthMap.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}