{"ast":null,"code":"import { mapState } from \"vuex\";\nimport moment from \"moment\";\nexport default {\n  computed: {\n    ...mapState({\n      profile: state => state.user.checkProfile.data,\n      details: state => state.user.details.data\n    })\n  },\n  data() {\n    return {\n      tab: 0,\n      checkDialog: false,\n      responseData: null\n    };\n  },\n  filters: {\n    date(val) {\n      return moment(val).format(\"MMM DD, YYYY\").toString();\n    },\n    time(val) {\n      return moment(val).format(\"mm:hh A\").toString();\n    }\n  },\n  mounted() {\n    this.$store.dispatch(\"user/checkProfile\", this.$route.params.id);\n    this.$store.dispatch(\"user/userDetails\");\n    console.log(\"reg\");\n  },\n  methods: {\n    handleResponse(data) {\n      this.checkDialog = true;\n      this.responseData = data;\n      console.log(data);\n    },\n    handleQuestion(data) {\n      if (data.trim()) {\n        const arr = data.split(\",\");\n        return arr;\n      }\n      return [];\n    },\n    checkStatus() {\n      const patient = this.profile?.user_patient;\n      const tagged = this.profile?.user_tagged;\n      const patientResult = patient.map(m => {\n        if (m.days_left) {\n          return true;\n        }\n      });\n      const taggedResult = tagged.map(m => {\n        if (m.days_left) {\n          return true;\n        }\n      });\n      if (patientResult.length || taggedResult.length) {\n        return true;\n      }\n      return false;\n    }\n  }\n};","map":{"version":3,"mappings":"AA+LA;AACA;AAEA;EACAA;IACA;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACA;IACA;IACAC;EACA;EACAC;IACAC;MACA;MACA;MAEAF;IACA;IACAG;MACA;QACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACA;MAEA;QACA;UACA;QACA;MACA;MAEA;QACA;UACA;QACA;MACA;MAEA;QACA;MACA;MAEA;IACA;EACA;AACA","names":["computed","profile","details","data","tab","checkDialog","responseData","filters","date","time","mounted","console","methods","handleResponse","handleQuestion","checkStatus"],"sourceRoot":"src/views/admin/Profile","sources":["CheckProfile.vue"],"sourcesContent":["<template>\n  <v-main class=\"accent\">\n    <v-container>\n      <div class=\"ma-12 text-capitalize\">\n        <div class=\"mt-2\">\n          <div class=\"py-1\">\n            <v-btn color=\"primary\" rounded text @click=\"$router.go(-1)\"\n              ><v-icon left>arrow_back_ios</v-icon>\n              <h4>Return</h4></v-btn\n            >\n          </div>\n          <!-- <h2 class=\"font-weight-bold\"><b class=\"primary--text\">{{`${profile.first_name} ${profile.middle_name} ${profile.last_name}`}} </b></h2>\n                <h2>Profile</h2> -->\n          {{ details }}\n        </div>\n        <div class=\"mb-8 mt-6\">\n          <v-row align=\"center\">\n            <v-col cols=\"1\">\n              <v-avatar color=\"primary\" size=\"94\" class=\"white--text\" tile\n                ><h3>A</h3></v-avatar\n              >\n            </v-col>\n            <v-col>\n              <v-row>\n                <v-col class=\"ml-6\">\n                  <h3 class=\"mb-3 primary--text\">\n                    {{\n                      `${profile.first_name} ${profile.middle_name} ${profile.last_name}`\n                    }}\n                  </h3>\n                  <v-row>\n                    <v-col cols=\"3\">\n                      <h4 class=\"font-weight-thin\">{{ profile.gender }}</h4>\n                      <h4 class=\"font-weight-thin\">\n                        {{ profile.classification.name }}\n                      </h4>\n                      <h4 class=\"font-weight-thin\">\n                        {{ profile.vaccination_status }}\n                      </h4>\n                    </v-col>\n                    <v-divider vertical inset></v-divider>\n                    <v-col cols=\"4\">\n                      <h4 class=\"font-weight-thin\">{{ profile.address }}</h4>\n                      <h4 class=\"font-weight-thin\">\n                        {{ profile.contact_number }}\n                      </h4>\n                      <h4 class=\"font-weight-thin\">{{ profile.email }}</h4>\n                    </v-col>\n                    <v-divider vertical inset></v-divider>\n                    <v-col>\n                      <h4>status :</h4>\n                      <h4\n                        class=\"text-uppercase\"\n                        :class=\"checkStatus() ? 'error--text' : 'primary--text'\"\n                      >\n                        {{ checkStatus() ? \"Close Contact\" : \"No Contact\" }}\n                      </h4>\n                    </v-col>\n                  </v-row>\n                </v-col>\n              </v-row>\n            </v-col>\n          </v-row>\n        </div>\n\n        <v-divider></v-divider>\n        <v-tabs\n          background-color=\"transparent\"\n          slider-size=\"3\"\n          color=\"primary\"\n          class=\"my-5\"\n          v-model=\"tab\"\n        >\n          <v-tab>Health Declaration</v-tab>\n          <v-tab>Stations Visited</v-tab>\n          <v-tab>Follow Ups</v-tab>\n        </v-tabs>\n\n        <v-tabs-items v-model=\"tab\">\n          <v-tab-item>\n            <v-card>\n              <v-simple-table>\n                <thead>\n                  <tr>\n                    <th>Time Submitted</th>\n                    <th>Date Submitted</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"detail in details.hdr\" :key=\"detail.id\">\n                    <td>{{ detail.created_at | time }}</td>\n                    <td>{{ detail.created_at | date }}</td>\n                    <td>\n                      <v-tooltip bottom>\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-btn\n                            color=\"primary\"\n                            dark\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                            icon\n                            @click=\"handleResponse(detail.answers)\"\n                            ><v-icon>description</v-icon></v-btn\n                          >\n                        </template>\n                        <span>Check Form</span>\n                      </v-tooltip>\n                    </td>\n                  </tr>\n                </tbody>\n              </v-simple-table>\n            </v-card>\n\n          </v-tab-item>\n          <v-tab-item>\n            <v-simple-table>\n              <thead>\n                <tr>\n                  <th>Location Visited</th>\n                  <th>Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"visited in details.visited\" :key=\"visited.id\">\n                  <td>dwd</td>\n                </tr>\n              </tbody>\n            </v-simple-table>\n          </v-tab-item>\n          <v-tab-item>\n            <v-simple-table>\n              <thead>\n                <tr>\n                  <th>3</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>dwd</td>\n                </tr>\n              </tbody>\n            </v-simple-table>\n          </v-tab-item>\n        </v-tabs-items>\n      </div>\n\n      <v-dialog v-model=\"checkDialog\" width=\"540\">\n        <v-app-bar color=\"primary\">\n          <v-app-bar-title class=\"white--text\">\n            <h5>Response</h5>\n          </v-app-bar-title>\n        </v-app-bar>\n        <v-card\n          v-for=\"(response, index) in responseData\"\n          :key=\"response.id\"\n          tile\n        >\n          <v-card-title primary-title class=\"text-justify\">\n            <h6>{{ `${index + 1}. ${response.question.question}` }}</h6>\n          </v-card-title>\n\n          <v-card-text>\n            <ul v-if=\"response.question.sub_question\" class=\"mt-n4\">\n              <li\n                v-for=\"(q, index) in handleQuestion(\n                  response.question.sub_question\n                )\"\n                :key=\"index\"\n              >\n                <h4>{{ q }}</h4>\n              </li>\n            </ul>\n\n            <div class=\"mt-4\">\n              <!-- <h4 class=\"primary--text\">Answer: {{response.answer == 1 ? \"True\" : \"False\"   }}</h4> -->\n              <v-text-field\n                outlined\n                readonly\n                label=\"Answer\"\n                :value=\"response.answer == 1 ? `Yes` : `No`\"\n              ></v-text-field>\n            </div>\n          </v-card-text>\n        </v-card>\n      </v-dialog>\n    </v-container>\n  </v-main>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport moment from \"moment\";\n\nexport default {\n  computed: {\n    ...mapState({\n      profile: (state) => state.user.checkProfile.data,\n      details: (state) => state.user.details.data,\n    }),\n  },\n  data() {\n    return {\n      tab: 0,\n      checkDialog: false,\n      responseData: null,\n    };\n  },\n  filters: {\n    date(val) {\n      return moment(val).format(\"MMM DD, YYYY\").toString();\n    },\n    time(val) {\n      return moment(val).format(\"mm:hh A\").toString();\n    },\n  },\n  mounted() {\n    this.$store.dispatch(\"user/checkProfile\", this.$route.params.id);\n    this.$store.dispatch(\"user/userDetails\");\n    console.log(\"reg\");\n  },\n  methods: {\n    handleResponse(data) {\n      this.checkDialog = true;\n      this.responseData = data;\n\n      console.log(data);\n    },\n    handleQuestion(data){\n      if(data.trim()){\n        const arr = data.split(\",\")\n        return arr\n      }\n      return []\n    },\n    checkStatus() {\n      const patient = this.profile?.user_patient;\n      const tagged = this.profile?.user_tagged;\n\n      const patientResult = patient.map((m) => {\n        if (m.days_left) {\n          return true;\n        }\n      });\n\n      const taggedResult = tagged.map((m) => {\n        if (m.days_left) {\n          return true;\n        }\n      });\n\n      if (patientResult.length || taggedResult.length) {\n        return true;\n      }\n\n      return false;\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}