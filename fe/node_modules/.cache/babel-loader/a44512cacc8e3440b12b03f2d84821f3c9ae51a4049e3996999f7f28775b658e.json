{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from \"vuex\";\nimport moment from \"moment\";\nexport default {\n  mounted() {\n    this.$store.dispatch(\"user/checkProfile\", this.$route.params.id);\n    this.$store.dispatch(\"traceContact/getVisitedLocation\", this.$route.params.id);\n    this.$store.dispatch(\"location/get\");\n  },\n  filters: {\n    filterDate(val) {\n      return moment(val).format(\"MMM. DD,YYYY\").toString();\n    },\n    filterTime(val) {\n      return moment(val).format(\"h:m:ss a\").toString();\n    }\n  },\n  computed: {\n    ...mapState({\n      user: state => state.user.checkProfile.data,\n      visiteds: state => state.traceContact.all.data,\n      contactLoading: state => state.traceContact.selected.loading,\n      visitedLoading: state => state.traceContact.all.loading,\n      location: state => state.location.all.data,\n      locationLoading: state => state.location.all.loading\n    })\n  },\n  data() {\n    return {\n      checkBox: {\n        checkAll: false,\n        checkBoxes: []\n      },\n      docState: \"saved\",\n      snackBar: false,\n      title: \"\",\n      page: 1,\n      menu: false,\n      filterSubmit: {\n        location: \"\",\n        date: \"\",\n        id: this.$route.params.id\n      }\n    };\n  },\n  methods: {\n    validate() {\n      const filtered = this.checkBox.checkBoxes.filter(f => {\n        return f != null;\n      });\n      return filtered.length ? false : true;\n    },\n    async submitSelected() {\n      const filtered = this.checkBox.checkBoxes.filter(f => {\n        return f != null;\n      });\n      const res = await this.$store.dispatch(\"traceContact/submitCheckSelected\", {\n        id: this.$route.params.id,\n        data: {\n          selected: filtered\n        }\n      });\n      if (res) {\n        this.checkBox.checkBoxes = [];\n        this.handleFilter();\n        this.snackBar = true;\n      }\n    },\n    handleCheck() {\n      console.log(\"hehe\", this.checkBox.checkAll);\n      this.checkBox.checkBoxes = [];\n      if (this.checkBox.checkAll) {\n        for (const select of this.visiteds) {\n          this.checkBox.checkBoxes.push(select.user_account.id);\n        }\n      }\n    },\n    handleSubmitCheck() {},\n    changeBtn() {\n      this.$router.go(-1);\n    },\n    handleFilter() {\n      this.$store.dispatch(\"traceContact/filterVisitedRecord\", this.filterSubmit);\n    },\n    handleDate(data) {\n      console.log(data);\n      this.filterSubmit.location = \"\";\n      this.menu = false;\n    },\n    async markContact(user) {\n      const submit = {\n        tag: user.user_account_id,\n        patient: this.$route.params.id,\n        filter: this.filterSubmit\n      };\n      const res = await this.$store.dispatch(\"traceContact/submitContact\", submit);\n      if (res) {\n        this.handleFilter();\n        this.snackBar = true;\n      }\n      console.log(submit);\n    }\n  }\n};","map":{"version":3,"mappings":";AAmOA;AACA;AACA;EACAA;IACA;IACA,qBACA,mCACA,sBACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAX;QACAY;QACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;QACA;MACA;MAEA;IACA;IACA;MACA;QACA;MACA;MAEA,uCACA,oCACA;QACAF;QACAX;UACAc;QACA;MACA,EACA;MAEA;QACA;QACA;QACA;MACA;IACA;IACAC;MACAC;MACA;MAEA;QACA;UACA;QACA;MACA;IACA;IACAC;IACAC;MACA;IACA;IACAC;MACA,qBACA,oCACA,kBACA;IACA;IACAC;MACAJ;MACA;MACA;IACA;IACA;MACA;QACAK;QACAC;QACAC;MACA;MACA,uCACA,8BACAC,OACA;MACA;QACA;QACA;MACA;MACAR;IACA;EACA;AACA","names":["mounted","filters","filterDate","filterTime","computed","user","visiteds","contactLoading","visitedLoading","location","locationLoading","data","checkBox","checkAll","checkBoxes","docState","snackBar","title","page","menu","filterSubmit","date","id","methods","validate","selected","handleCheck","console","handleSubmitCheck","changeBtn","handleFilter","handleDate","tag","patient","filter","submit"],"sourceRoot":"src/views/admin/ManageContact","sources":["TraceContact.vue"],"sourcesContent":["<template>\n  <v-container>\n    <div class=\"ma-12\">\n      <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">Trace Contacts</h2>\n      <h5 class=\"secondary--text\">Trace User's Contacts</h5>\n\n      <div class=\"d-flex align-center mt-6\">\n        <v-btn color=\"primary\" @click=\"changeBtn()\" rounded small\n          ><v-icon left>arrow_back</v-icon>\n          <h4>return</h4></v-btn\n        >\n        <h2 class=\"ml-4 text-capitalize\">\n          {{ `${user.first_name} ${user.middle_name} ${user.last_name}` }}\n        </h2>\n      </div>\n\n      <div class=\"d-flex align-stretch mt-6\">\n        <v-menu\n          v-model=\"menu\"\n          :close-on-content-click=\"false\"\n          :nudge-right=\"40\"\n          transition=\"scale-transition\"\n          offset-y\n          min-width=\"auto\"\n        >\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-text-field\n              v-model=\"filterSubmit.date\"\n              label=\"Date Started\"\n              prepend-inner-icon=\"event\"\n              outlined\n              filled\n              dense\n              readonly\n              v-bind=\"attrs\"\n              v-on=\"on\"\n            ></v-text-field>\n          </template>\n          <v-date-picker\n            v-model=\"filterSubmit.date\"\n            @input=\"handleDate\"\n          ></v-date-picker>\n        </v-menu>\n        <!-- <v-select label=\"Time Frame\" outlined filled dense></v-select> -->\n        <v-select\n          label=\"Location\"\n          v-model=\"filterSubmit.location\"\n          prepend-inner-icon=\"location_on\"\n          :loading=\"locationLoading\"\n          :disabled=\"locationLoading\"\n          :items=\"location\"\n          item-text=\"name\"\n          item-value=\"id\"\n          outlined\n          filled\n          dense\n          class=\"ml-2\"\n        ></v-select>\n        <v-btn\n          color=\"primary\"\n          class=\"ml-2 py-5\"\n          medium\n          text\n          :loading=\"visitedLoading\"\n          @click=\"handleFilter\"\n          ><v-icon left>filter_list</v-icon>\n          <h4>Filter</h4></v-btn\n        >\n      </div>\n\n      <!-- <div class=\"adj mt-4 pt-6 d-flex mb-n3\">\n        <v-text-field\n          class=\"mr-2\"\n          label=\"Search here\"\n          solo\n          outlined\n          dense\n        ></v-text-field>\n        <v-btn color=\"primary\" class=\"py-5\"><v-icon>search</v-icon></v-btn>\n      </div> -->\n      <div class=\"d-flex justify-end\">\n        <v-btn\n          color=\"primary\"\n          :loading=\"contactLoading\"\n          class=\"text-capitalize mb-2\"\n          :class=\"[validate() ? `d-none` : ``]\"\n          @click=\"submitSelected\"\n          >Submit Selected As Contact</v-btn\n        >\n      </div>\n      <v-simple-table class=\"rounded-lg elevation-6\">\n        <thead>\n          <tr class=\"text-left\">\n            <th>\n              <v-checkbox\n                v-model=\"checkBox.checkAll\"\n                @click=\"handleCheck\"\n              ></v-checkbox>\n            </th>\n            <th class=\"black--text\">\n              <h3>Name</h3>\n            </th>\n\n            <th class=\"text-center black--text\">\n              <h3>Location Visited</h3>\n            </th>\n\n            <th class=\"text-center black--text\">\n              <h3>Time In</h3>\n            </th>\n\n            <th class=\"text-center black--text\">\n              <h3>Date</h3>\n            </th>\n            <!-- <th class=\"text-center black--text\">\n              <h3>Time Out</h3>\n            </th>\n\n            <th class=\"text-center black--text text-center\">\n              <h3>Total Time</h3>\n            </th>\n             -->\n\n            <th class=\"text-center black--text\">\n              <h3>Action</h3>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr\n            class=\"text-center text-capitalize\"\n            v-for=\"(visited, index) in visiteds\"\n            :key=\"visited.id\"\n            :class=\"\n              visited.user_account.user_tagged.length ||\n              visited.user_account.user_patient.length\n                ? `d-none`\n                : 'white'\n            \"\n          >\n            <td class=\"text-center\">\n              <v-checkbox\n                v-model=\"checkBox.checkBoxes[index]\"\n                :value=\"visited.user_account.id\"\n              ></v-checkbox>\n            </td>\n            <td class=\"text-left font-weight-bold primary--text\">\n              {{\n                `${visited.user_account.first_name} ${visited.user_account.middle_name} ${visited.user_account.last_name}`\n              }}\n              <div class=\"secondary--text font-weight-thin\">\n                {{ visited.user_account.classification.name }}\n              </div>\n            </td>\n            <td>{{ visited.location.name }}</td>\n            <td>{{ visited.created_at | filterTime }}</td>\n            <td>{{ visited.created_at | filterDate }}</td>\n            <td>\n              <v-menu\n                offset-y\n                bottom\n                transition=\"slide-y-transition\"\n                rounded=\"lg\"\n              >\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    color=\"primary\"\n                    dark\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                    icon\n                    large\n                  >\n                    <v-icon>menu_open</v-icon>\n                  </v-btn>\n                </template>\n                <v-list>\n                  <v-list-item\n                    :to=\"`/admin/checkprofile/${visited.user_account.id}`\"\n                  >\n                    <v-list-item-icon class=\"mr-4\"\n                      ><v-icon color=\"primary\"\n                        >account_circle</v-icon\n                      ></v-list-item-icon\n                    >\n                    <v-list-item-title class=\"font-weight-bold\"\n                      ><h5>Check Profile</h5></v-list-item-title\n                    >\n                  </v-list-item>\n                  <v-divider></v-divider>\n                  <v-list-item @click=\"markContact(visited)\">\n                    <v-list-item-icon class=\"mr-4\"\n                      ><v-icon color=\"primary\"\n                        >reduce_capacity</v-icon\n                      ></v-list-item-icon\n                    >\n                    <v-list-item-title class=\"font-weight-bold\"\n                      ><h5>Mark As Close Contact</h5></v-list-item-title\n                    >\n                  </v-list-item>\n                </v-list>\n              </v-menu>\n            </td>\n          </tr>\n        </tbody>\n      </v-simple-table>\n      <!-- <v-pagination\n        v-model=\"page\"\n        :length=\"4\"\n        class=\"float-right mt-4\"\n        @input=\"pageSwitch\"\n      ></v-pagination> -->\n      <v-snackbar\n        v-model=\"snackBar\"\n        timeout=\"2000\"\n        color=\"success\"\n        bottom\n        right\n      >\n        <v-icon class=\"pr-2\">check</v-icon>\n        successfully classified as close contact.\n      </v-snackbar>\n    </div>\n  </v-container>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport moment from \"moment\";\nexport default {\n  mounted() {\n    this.$store.dispatch(\"user/checkProfile\", this.$route.params.id);\n    this.$store.dispatch(\n      \"traceContact/getVisitedLocation\",\n      this.$route.params.id\n    );\n    this.$store.dispatch(\"location/get\");\n  },\n  filters: {\n    filterDate(val) {\n      return moment(val).format(\"MMM. DD,YYYY\").toString();\n    },\n    filterTime(val) {\n      return moment(val).format(\"h:m:ss a\").toString();\n    },\n  },\n  computed: {\n    ...mapState({\n      user: (state) => state.user.checkProfile.data,\n      visiteds: (state) => state.traceContact.all.data,\n      contactLoading: (state) => state.traceContact.selected.loading,\n      visitedLoading: (state) => state.traceContact.all.loading,\n      location: (state) => state.location.all.data,\n      locationLoading: (state) => state.location.all.loading,\n    }),\n  },\n  data() {\n    return {\n      checkBox: {\n        checkAll: false,\n        checkBoxes: [],\n      },\n      docState: \"saved\",\n      snackBar: false,\n      title: \"\",\n      page: 1,\n      menu: false,\n      filterSubmit: {\n        location: \"\",\n        date: \"\",\n        id: this.$route.params.id,\n      },\n    };\n  },\n  methods: {\n    validate() {\n      const filtered = this.checkBox.checkBoxes.filter((f) => {\n        return f != null;\n      });\n\n      return filtered.length ? false : true;\n    },\n    async submitSelected() {\n      const filtered = this.checkBox.checkBoxes.filter((f) => {\n        return f != null;\n      });\n\n      const res = await this.$store.dispatch(\n        \"traceContact/submitCheckSelected\",\n        {\n          id: this.$route.params.id,\n          data: {\n            selected: filtered,\n          },\n        }\n      );\n\n      if (res) {\n        this.checkBox.checkBoxes = [];\n        this.handleFilter();\n        this.snackBar = true;\n      }\n    },\n    handleCheck() {\n      console.log(\"hehe\", this.checkBox.checkAll);\n      this.checkBox.checkBoxes = [];\n\n      if (this.checkBox.checkAll) {\n        for (const select of this.visiteds) {\n          this.checkBox.checkBoxes.push(select.user_account.id);\n        }\n      }\n    },\n    handleSubmitCheck() {},\n    changeBtn() {\n      this.$router.go(-1);\n    },\n    handleFilter() {\n      this.$store.dispatch(\n        \"traceContact/filterVisitedRecord\",\n        this.filterSubmit\n      );\n    },\n    handleDate(data) {\n      console.log(data);\n      this.filterSubmit.location = \"\";\n      this.menu = false;\n    },\n    async markContact(user) {\n      const submit = {\n        tag: user.user_account_id,\n        patient: this.$route.params.id,\n        filter: this.filterSubmit,\n      };\n      const res = await this.$store.dispatch(\n        \"traceContact/submitContact\",\n        submit\n      );\n      if (res) {\n        this.handleFilter();\n        this.snackBar = true;\n      }\n      console.log(submit);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}