{"ast":null,"code":"import { FaceMatch } from '../classes/FaceMatch';\nimport { LabeledFaceDescriptors } from '../classes/LabeledFaceDescriptors';\nimport { euclideanDistance } from '../euclideanDistance';\nvar FaceMatcher = /** @class */function () {\n  function FaceMatcher(inputs, distanceThreshold) {\n    if (distanceThreshold === void 0) {\n      distanceThreshold = 0.6;\n    }\n    this._distanceThreshold = distanceThreshold;\n    var inputArray = Array.isArray(inputs) ? inputs : [inputs];\n    if (!inputArray.length) {\n      throw new Error(\"FaceRecognizer.constructor - expected atleast one input\");\n    }\n    var count = 1;\n    var createUniqueLabel = function () {\n      return \"person \" + count++;\n    };\n    this._labeledDescriptors = inputArray.map(function (desc) {\n      if (desc instanceof LabeledFaceDescriptors) {\n        return desc;\n      }\n      if (desc instanceof Float32Array) {\n        return new LabeledFaceDescriptors(createUniqueLabel(), [desc]);\n      }\n      if (desc.descriptor && desc.descriptor instanceof Float32Array) {\n        return new LabeledFaceDescriptors(createUniqueLabel(), [desc.descriptor]);\n      }\n      throw new Error(\"FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>\");\n    });\n  }\n  Object.defineProperty(FaceMatcher.prototype, \"labeledDescriptors\", {\n    get: function () {\n      return this._labeledDescriptors;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FaceMatcher.prototype, \"distanceThreshold\", {\n    get: function () {\n      return this._distanceThreshold;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  FaceMatcher.prototype.computeMeanDistance = function (queryDescriptor, descriptors) {\n    return descriptors.map(function (d) {\n      return euclideanDistance(d, queryDescriptor);\n    }).reduce(function (d1, d2) {\n      return d1 + d2;\n    }, 0) / (descriptors.length || 1);\n  };\n  FaceMatcher.prototype.matchDescriptor = function (queryDescriptor) {\n    var _this = this;\n    return this.labeledDescriptors.map(function (_a) {\n      var descriptors = _a.descriptors,\n        label = _a.label;\n      return new FaceMatch(label, _this.computeMeanDistance(queryDescriptor, descriptors));\n    }).reduce(function (best, curr) {\n      return best.distance < curr.distance ? best : curr;\n    });\n  };\n  FaceMatcher.prototype.findBestMatch = function (queryDescriptor) {\n    var bestMatch = this.matchDescriptor(queryDescriptor);\n    return bestMatch.distance < this.distanceThreshold ? bestMatch : new FaceMatch('unknown', bestMatch.distance);\n  };\n  FaceMatcher.prototype.toJSON = function () {\n    return {\n      distanceThreshold: this.distanceThreshold,\n      labeledDescriptors: this.labeledDescriptors.map(function (ld) {\n        return ld.toJSON();\n      })\n    };\n  };\n  FaceMatcher.fromJSON = function (json) {\n    var labeledDescriptors = json.labeledDescriptors.map(function (ld) {\n      return LabeledFaceDescriptors.fromJSON(ld);\n    });\n    return new FaceMatcher(labeledDescriptors, json.distanceThreshold);\n  };\n  return FaceMatcher;\n}();\nexport { FaceMatcher };","map":{"version":3,"mappings":"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","names":["FaceMatch","LabeledFaceDescriptors","euclideanDistance","inputs","distanceThreshold","_distanceThreshold","inputArray","Array","isArray","length","Error","count","createUniqueLabel","_labeledDescriptors","map","desc","Float32Array","descriptor","Object","FaceMatcher","queryDescriptor","descriptors","d","reduce","d1","d2","labeledDescriptors","_a","label","_this","computeMeanDistance","best","curr","distance","bestMatch","matchDescriptor","ld","toJSON","json","fromJSON"],"sourceRoot":"","sources":["../../../src/globalApi/FaceMatcher.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}