{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { getModelUris } from './common/getModelUris';\nimport { loadWeightMap } from './dom';\nimport { env } from './env';\nvar NeuralNetwork = /** @class */function () {\n  function NeuralNetwork(_name) {\n    this._name = _name;\n    this._params = undefined;\n    this._paramMappings = [];\n  }\n  Object.defineProperty(NeuralNetwork.prototype, \"params\", {\n    get: function () {\n      return this._params;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(NeuralNetwork.prototype, \"paramMappings\", {\n    get: function () {\n      return this._paramMappings;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(NeuralNetwork.prototype, \"isLoaded\", {\n    get: function () {\n      return !!this.params;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  NeuralNetwork.prototype.getParamFromPath = function (paramPath) {\n    var _a = this.traversePropertyPath(paramPath),\n      obj = _a.obj,\n      objProp = _a.objProp;\n    return obj[objProp];\n  };\n  NeuralNetwork.prototype.reassignParamFromPath = function (paramPath, tensor) {\n    var _a = this.traversePropertyPath(paramPath),\n      obj = _a.obj,\n      objProp = _a.objProp;\n    obj[objProp].dispose();\n    obj[objProp] = tensor;\n  };\n  NeuralNetwork.prototype.getParamList = function () {\n    var _this = this;\n    return this._paramMappings.map(function (_a) {\n      var paramPath = _a.paramPath;\n      return {\n        path: paramPath,\n        tensor: _this.getParamFromPath(paramPath)\n      };\n    });\n  };\n  NeuralNetwork.prototype.getTrainableParams = function () {\n    return this.getParamList().filter(function (param) {\n      return param.tensor instanceof tf.Variable;\n    });\n  };\n  NeuralNetwork.prototype.getFrozenParams = function () {\n    return this.getParamList().filter(function (param) {\n      return !(param.tensor instanceof tf.Variable);\n    });\n  };\n  NeuralNetwork.prototype.variable = function () {\n    var _this = this;\n    this.getFrozenParams().forEach(function (_a) {\n      var path = _a.path,\n        tensor = _a.tensor;\n      _this.reassignParamFromPath(path, tensor.variable());\n    });\n  };\n  NeuralNetwork.prototype.freeze = function () {\n    var _this = this;\n    this.getTrainableParams().forEach(function (_a) {\n      var path = _a.path,\n        variable = _a.tensor;\n      var tensor = tf.tensor(variable.dataSync());\n      variable.dispose();\n      _this.reassignParamFromPath(path, tensor);\n    });\n  };\n  NeuralNetwork.prototype.dispose = function (throwOnRedispose) {\n    if (throwOnRedispose === void 0) {\n      throwOnRedispose = true;\n    }\n    this.getParamList().forEach(function (param) {\n      if (throwOnRedispose && param.tensor.isDisposed) {\n        throw new Error(\"param tensor has already been disposed for path \" + param.path);\n      }\n      param.tensor.dispose();\n    });\n    this._params = undefined;\n  };\n  NeuralNetwork.prototype.serializeParams = function () {\n    return new Float32Array(this.getParamList().map(function (_a) {\n      var tensor = _a.tensor;\n      return Array.from(tensor.dataSync());\n    }).reduce(function (flat, arr) {\n      return flat.concat(arr);\n    }));\n  };\n  NeuralNetwork.prototype.load = function (weightsOrUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (weightsOrUrl instanceof Float32Array) {\n              this.extractWeights(weightsOrUrl);\n              return [2 /*return*/];\n            }\n\n            return [4 /*yield*/, this.loadFromUri(weightsOrUrl)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  NeuralNetwork.prototype.loadFromUri = function (uri) {\n    return __awaiter(this, void 0, void 0, function () {\n      var weightMap;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (uri && typeof uri !== 'string') {\n              throw new Error(this._name + \".loadFromUri - expected model uri\");\n            }\n            return [4 /*yield*/, loadWeightMap(uri, this.getDefaultModelName())];\n          case 1:\n            weightMap = _a.sent();\n            this.loadFromWeightMap(weightMap);\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  NeuralNetwork.prototype.loadFromDisk = function (filePath) {\n    return __awaiter(this, void 0, void 0, function () {\n      var readFile, _a, manifestUri, modelBaseUri, fetchWeightsFromDisk, loadWeights, manifest, _b, _c, weightMap;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            if (filePath && typeof filePath !== 'string') {\n              throw new Error(this._name + \".loadFromDisk - expected model file path\");\n            }\n            readFile = env.getEnv().readFile;\n            _a = getModelUris(filePath, this.getDefaultModelName()), manifestUri = _a.manifestUri, modelBaseUri = _a.modelBaseUri;\n            fetchWeightsFromDisk = function (filePaths) {\n              return Promise.all(filePaths.map(function (filePath) {\n                return readFile(filePath).then(function (buf) {\n                  return buf.buffer;\n                });\n              }));\n            };\n            loadWeights = tf.io.weightsLoaderFactory(fetchWeightsFromDisk);\n            _c = (_b = JSON).parse;\n            return [4 /*yield*/, readFile(manifestUri)];\n          case 1:\n            manifest = _c.apply(_b, [_d.sent().toString()]);\n            return [4 /*yield*/, loadWeights(manifest, modelBaseUri)];\n          case 2:\n            weightMap = _d.sent();\n            this.loadFromWeightMap(weightMap);\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  NeuralNetwork.prototype.loadFromWeightMap = function (weightMap) {\n    var _a = this.extractParamsFromWeigthMap(weightMap),\n      paramMappings = _a.paramMappings,\n      params = _a.params;\n    this._paramMappings = paramMappings;\n    this._params = params;\n  };\n  NeuralNetwork.prototype.extractWeights = function (weights) {\n    var _a = this.extractParams(weights),\n      paramMappings = _a.paramMappings,\n      params = _a.params;\n    this._paramMappings = paramMappings;\n    this._params = params;\n  };\n  NeuralNetwork.prototype.traversePropertyPath = function (paramPath) {\n    if (!this.params) {\n      throw new Error(\"traversePropertyPath - model has no loaded params\");\n    }\n    var result = paramPath.split('/').reduce(function (res, objProp) {\n      if (!res.nextObj.hasOwnProperty(objProp)) {\n        throw new Error(\"traversePropertyPath - object does not have property \" + objProp + \", for path \" + paramPath);\n      }\n      return {\n        obj: res.nextObj,\n        objProp: objProp,\n        nextObj: res.nextObj[objProp]\n      };\n    }, {\n      nextObj: this.params\n    });\n    var obj = result.obj,\n      objProp = result.objProp;\n    if (!obj || !objProp || !(obj[objProp] instanceof tf.Tensor)) {\n      throw new Error(\"traversePropertyPath - parameter is not a tensor, for path \" + paramPath);\n    }\n    return {\n      obj: obj,\n      objProp: objProp\n    };\n  };\n  return NeuralNetwork;\n}();\nexport { NeuralNetwork };","map":{"version":3,"mappings":"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","names":["tf","getModelUris","loadWeightMap","env","_name","undefined","Object","NeuralNetwork","_params","_paramMappings","params","paramPath","obj","objProp","tensor","dispose","map","_a","path","_this","getParamFromPath","getParamList","filter","Variable","param","getFrozenParams","forEach","reassignParamFromPath","variable","getTrainableParams","dataSync","throwOnRedispose","isDisposed","Error","Float32Array","from","reduce","flat","arr","concat","weightsOrUrl","extractWeights","loadFromUri","uri","getDefaultModelName","weightMap","loadFromWeightMap","filePath","readFile","getEnv","manifestUri","modelBaseUri","fetchWeightsFromDisk","filePaths","all","then","buffer","loadWeights","io","weightsLoaderFactory","_c","parse","manifest","_d","toString","paramMappings","weights","result","split","res","nextObj","hasOwnProperty","Tensor"],"sourceRoot":"","sources":["../../src/NeuralNetwork.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}