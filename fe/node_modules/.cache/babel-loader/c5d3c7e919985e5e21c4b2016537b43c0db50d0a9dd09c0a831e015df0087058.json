{"ast":null,"code":"import { isDimensions, isValidNumber } from '../utils';\nimport { Point } from './Point';\nvar Box = /** @class */function () {\n  function Box(_box, allowNegativeDimensions) {\n    if (allowNegativeDimensions === void 0) {\n      allowNegativeDimensions = true;\n    }\n    var box = _box || {};\n    var isBbox = [box.left, box.top, box.right, box.bottom].every(isValidNumber);\n    var isRect = [box.x, box.y, box.width, box.height].every(isValidNumber);\n    if (!isRect && !isBbox) {\n      throw new Error(\"Box.constructor - expected box to be IBoundingBox | IRect, instead have \" + JSON.stringify(box));\n    }\n    var _a = isRect ? [box.x, box.y, box.width, box.height] : [box.left, box.top, box.right - box.left, box.bottom - box.top],\n      x = _a[0],\n      y = _a[1],\n      width = _a[2],\n      height = _a[3];\n    Box.assertIsValidBox({\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }, 'Box.constructor', allowNegativeDimensions);\n    this._x = x;\n    this._y = y;\n    this._width = width;\n    this._height = height;\n  }\n  Box.isRect = function (rect) {\n    return !!rect && [rect.x, rect.y, rect.width, rect.height].every(isValidNumber);\n  };\n  Box.assertIsValidBox = function (box, callee, allowNegativeDimensions) {\n    if (allowNegativeDimensions === void 0) {\n      allowNegativeDimensions = false;\n    }\n    if (!Box.isRect(box)) {\n      throw new Error(callee + \" - invalid box: \" + JSON.stringify(box) + \", expected object with properties x, y, width, height\");\n    }\n    if (!allowNegativeDimensions && (box.width < 0 || box.height < 0)) {\n      throw new Error(callee + \" - width (\" + box.width + \") and height (\" + box.height + \") must be positive numbers\");\n    }\n  };\n  Object.defineProperty(Box.prototype, \"x\", {\n    get: function () {\n      return this._x;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"y\", {\n    get: function () {\n      return this._y;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"width\", {\n    get: function () {\n      return this._width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"height\", {\n    get: function () {\n      return this._height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"left\", {\n    get: function () {\n      return this.x;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"top\", {\n    get: function () {\n      return this.y;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"right\", {\n    get: function () {\n      return this.x + this.width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"bottom\", {\n    get: function () {\n      return this.y + this.height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"area\", {\n    get: function () {\n      return this.width * this.height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"topLeft\", {\n    get: function () {\n      return new Point(this.left, this.top);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"topRight\", {\n    get: function () {\n      return new Point(this.right, this.top);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"bottomLeft\", {\n    get: function () {\n      return new Point(this.left, this.bottom);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"bottomRight\", {\n    get: function () {\n      return new Point(this.right, this.bottom);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Box.prototype.round = function () {\n    var _a = [this.x, this.y, this.width, this.height].map(function (val) {\n        return Math.round(val);\n      }),\n      x = _a[0],\n      y = _a[1],\n      width = _a[2],\n      height = _a[3];\n    return new Box({\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    });\n  };\n  Box.prototype.floor = function () {\n    var _a = [this.x, this.y, this.width, this.height].map(function (val) {\n        return Math.floor(val);\n      }),\n      x = _a[0],\n      y = _a[1],\n      width = _a[2],\n      height = _a[3];\n    return new Box({\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    });\n  };\n  Box.prototype.toSquare = function () {\n    var _a = this,\n      x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height;\n    var diff = Math.abs(width - height);\n    if (width < height) {\n      x -= diff / 2;\n      width += diff;\n    }\n    if (height < width) {\n      y -= diff / 2;\n      height += diff;\n    }\n    return new Box({\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    });\n  };\n  Box.prototype.rescale = function (s) {\n    var scaleX = isDimensions(s) ? s.width : s;\n    var scaleY = isDimensions(s) ? s.height : s;\n    return new Box({\n      x: this.x * scaleX,\n      y: this.y * scaleY,\n      width: this.width * scaleX,\n      height: this.height * scaleY\n    });\n  };\n  Box.prototype.pad = function (padX, padY) {\n    var _a = [this.x - padX / 2, this.y - padY / 2, this.width + padX, this.height + padY],\n      x = _a[0],\n      y = _a[1],\n      width = _a[2],\n      height = _a[3];\n    return new Box({\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    });\n  };\n  Box.prototype.clipAtImageBorders = function (imgWidth, imgHeight) {\n    var _a = this,\n      x = _a.x,\n      y = _a.y,\n      right = _a.right,\n      bottom = _a.bottom;\n    var clippedX = Math.max(x, 0);\n    var clippedY = Math.max(y, 0);\n    var newWidth = right - clippedX;\n    var newHeight = bottom - clippedY;\n    var clippedWidth = Math.min(newWidth, imgWidth - clippedX);\n    var clippedHeight = Math.min(newHeight, imgHeight - clippedY);\n    return new Box({\n      x: clippedX,\n      y: clippedY,\n      width: clippedWidth,\n      height: clippedHeight\n    }).floor();\n  };\n  Box.prototype.shift = function (sx, sy) {\n    var _a = this,\n      width = _a.width,\n      height = _a.height;\n    var x = this.x + sx;\n    var y = this.y + sy;\n    return new Box({\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    });\n  };\n  Box.prototype.padAtBorders = function (imageHeight, imageWidth) {\n    var w = this.width + 1;\n    var h = this.height + 1;\n    var dx = 1;\n    var dy = 1;\n    var edx = w;\n    var edy = h;\n    var x = this.left;\n    var y = this.top;\n    var ex = this.right;\n    var ey = this.bottom;\n    if (ex > imageWidth) {\n      edx = -ex + imageWidth + w;\n      ex = imageWidth;\n    }\n    if (ey > imageHeight) {\n      edy = -ey + imageHeight + h;\n      ey = imageHeight;\n    }\n    if (x < 1) {\n      edy = 2 - x;\n      x = 1;\n    }\n    if (y < 1) {\n      edy = 2 - y;\n      y = 1;\n    }\n    return {\n      dy: dy,\n      edy: edy,\n      dx: dx,\n      edx: edx,\n      y: y,\n      ey: ey,\n      x: x,\n      ex: ex,\n      w: w,\n      h: h\n    };\n  };\n  Box.prototype.calibrate = function (region) {\n    return new Box({\n      left: this.left + region.left * this.width,\n      top: this.top + region.top * this.height,\n      right: this.right + region.right * this.width,\n      bottom: this.bottom + region.bottom * this.height\n    }).toSquare().round();\n  };\n  return Box;\n}();\nexport { Box };","map":{"version":3,"mappings":"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","names":["isDimensions","isValidNumber","Point","_box","allowNegativeDimensions","box","isBbox","left","top","right","bottom","every","isRect","x","y","width","height","Error","JSON","stringify","Box","assertIsValidBox","_x","_y","_width","_height","rect","callee","Object","diff","Math","abs","s","scaleX","scaleY","padX","padY","imgWidth","imgHeight","clippedX","max","clippedY","newWidth","newHeight","clippedWidth","min","clippedHeight","floor","sx","sy","imageHeight","imageWidth","w","h","dx","dy","edx","edy","ex","ey","region","toSquare","round"],"sourceRoot":"","sources":["../../../src/classes/Box.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}