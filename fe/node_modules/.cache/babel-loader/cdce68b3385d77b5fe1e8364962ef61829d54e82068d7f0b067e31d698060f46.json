{"ast":null,"code":"import { mapState } from \"vuex\";\nimport addDialog from \"./Dialog/Form/AddDialog.vue\";\nimport updateDialog from \"./Dialog/Form/UpdateDialog.vue\";\nexport default {\n  components: {\n    updateDialog,\n    addDialog\n  },\n  mounted() {\n    this.$store.dispatch(\"questions/getData\");\n  },\n  computed: {\n    ...mapState({\n      questions: state => state.questions.all.data,\n      deleteLoading: state => state.questions.delete.loading\n    })\n  },\n  data() {\n    return {\n      dialog: {\n        add: false,\n        update: false\n      },\n      updateData: null,\n      deleteDialog: false,\n      formData: null,\n      page_number: 1,\n      inputSearch: \"\",\n      snackBar: {\n        update: false,\n        store: false,\n        delete: false\n      }\n    };\n  },\n  methods: {\n    questionSplit(data) {\n      const split = data.split(\",\");\n      return split;\n    },\n    openDeleteDialog(data) {\n      this.deleteDialog = true;\n      this.formData = data;\n    },\n    closeDeleteDialog() {\n      this.deleteDialog = false;\n    },\n    async deleteForm() {\n      const res = await this.$store.dispatch(\"questions/delete\", this.formData);\n      if (res) {\n        this.deleteDialog = false;\n        this.snackBar['delete'] = true;\n      }\n    },\n    handleDialog() {\n      this.dialog[\"add\"] = true;\n    },\n    handleUpdateDialog(data) {\n      this.updateData = data;\n      this.dialog['update'] = true;\n    },\n    changeStatus(data) {\n      this.$store.dispatch(\"station/changeStatus\", data);\n    },\n    pageSwitch(data) {\n      this.page_number = data;\n      this.$store.dispatch(\"station/get\", data);\n    },\n    async handleSearch() {\n      const res = await this.$store.dispatch(\"station/search\", this.inputSearch);\n      console.log(\"res\", res);\n    }\n  }\n};","map":{"version":3,"mappings":"AAiNA;AACA;AACA;AAEA;EACAA;IAAAC;IAAAC;EAAA;EACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAN;QACAO;QACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;MAEA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACA;MACA;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACA;MACA,uCACA,kBACA,iBACA;MAEAC;IACA;EACA;AACA","names":["components","updateDialog","addDialog","mounted","computed","questions","deleteLoading","data","dialog","add","update","updateData","deleteDialog","formData","page_number","inputSearch","snackBar","store","delete","methods","questionSplit","openDeleteDialog","closeDeleteDialog","handleDialog","handleUpdateDialog","changeStatus","pageSwitch","console"],"sourceRoot":"src/views/admin","sources":["ManageForm.vue"],"sourcesContent":["<template>\r\n  <v-main class=\"accent\">\r\n    <v-container fluid>\r\n      <addDialog\r\n        :dialog=\"dialog.add\"\r\n        @handleDialog=\"dialog.add = false\"\r\n        @snackBar=\"snackBar['store'] = true\"\r\n      />\r\n      <updateDialog\r\n        :dialog=\"dialog['update']\"\r\n        :updateData = \"updateData\"\r\n        @handleUpdateData = \"updateData = null\"\r\n        @handleDialog = \"dialog['update'] = false\"\r\n        @snackBar=\"snackBar['update']  = true\"\r\n      />\r\n      <div class=\"ma-lg-12\">\r\n        <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">Manage Form</h2>\r\n        <h5 class=\"secondary--text\">List of Health Declaration Form</h5>\r\n\r\n        <div class=\"mt-4 pt-6 d-flex justify-end mb-6\">\r\n          <!-- <div class=\"d-flex adj\">\r\n              <v-text-field\r\n                class=\"mr-2\"\r\n                label=\"Search here\"\r\n                solo\r\n                dense\r\n                v-model=\"inputSearch\"\r\n              ></v-text-field>\r\n              <v-btn color=\"primary\" @click=\"handleSearch\"><v-icon>search</v-icon></v-btn>\r\n            </div> -->\r\n\r\n          <v-btn\r\n            @click=\"handleDialog\"\r\n            color=\"primary\"\r\n            class=\"px-8 py-2 font-weight-bold\"\r\n            ><v-icon left>add</v-icon> Question</v-btn\r\n          >\r\n        </div>\r\n\r\n        <v-card\r\n          v-for=\"question in questions\"\r\n          :key=\"question.id\"\r\n          class=\"mb-4 rounded-lg\"\r\n        >\r\n          <v-card-title class=\"font-weight-bold primary--text\">Question</v-card-title>\r\n          <v-card-text>\r\n            <div class=\"text-body-1 font-weight-bold black--text\">\r\n              {{ question.question }}\r\n            </div>\r\n            <div class=\"mt-2\">\r\n              <ul v-if=\"question.sub_question\">\r\n                <li\r\n                  v-for=\"(list, index) in questionSplit(question.sub_question)\"\r\n                  :key=\"index\"\r\n                >\r\n                  {{ list }}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </v-card-text>\r\n          <v-card-actions class=\"ml-4\">\r\n            <v-tooltip bottom >\r\n              <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-btn\r\n                  class=\"text-capitalize mr-2\"\r\n                  color=\"primary\"\r\n                  @click=\"handleUpdateDialog(question)\"\r\n                  dark\r\n                  v-bind=\"attrs\"\r\n                  v-on=\"on\"\r\n                  ><v-icon>article</v-icon> Update Form</v-btn\r\n                >\r\n              </template>\r\n              <span>update form</span>\r\n            </v-tooltip>\r\n            <v-tooltip bottom>\r\n              <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-btn\r\n                  class=\"text-capitalize\"\r\n                  color=\"error\"\r\n                  dark\r\n                  v-bind=\"attrs\"\r\n                  v-on=\"on\"\r\n                  @click=\"openDeleteDialog(question)\"\r\n                  ><v-icon>delete_forever</v-icon> Delete</v-btn\r\n                >\r\n              </template>\r\n              <span>Delete</span>\r\n            </v-tooltip>\r\n          </v-card-actions>\r\n        </v-card>\r\n        <!-- <v-simple-table class=\"rounded-lg elevation-6\">\r\n          <thead>\r\n            <tr class=\"text-center\">\r\n              <th class=\"text-left black--text\">Questions</th>\r\n              <th class=\"text-left black--text\">Sub List</th>\r\n              <th class=\"text-left black--text text-center\">Status</th>\r\n              <th class=\"text-left black--text text-center\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            <tr\r\n              v-for=\"question in questions\"\r\n              :key=\"question.id\"\r\n              class=\"text-center text-capitalize\"\r\n            >\r\n              <td class=\"text-left text-justify py-4\">\r\n                {{ `${question.question}` }}\r\n              </td>\r\n              <td class=\"text-left text-justify py-4\">\r\n                <ul v-if=\"question.sub_question\">\r\n                  <li\r\n                    v-for=\"(list, index) in questionSplit(\r\n                      question.sub_question\r\n                    )\"\r\n                    :key=\"index\"\r\n                  >\r\n                    {{ list }}\r\n                  </li>\r\n                </ul>\r\n              </td>\r\n              <td class=\"\">\r\n                <v-tooltip bottom>\r\n                  <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-btn\r\n                      class=\"text-capitalize\"\r\n                      color=\"primary\"\r\n                      @click=\"changeStatus(question)\"\r\n                      dark\r\n                      v-bind=\"attrs\"\r\n                      v-on=\"on\"\r\n                      icon\r\n                      ><v-icon>article</v-icon></v-btn\r\n                    >\r\n                  </template>\r\n                  <span>Change Status</span>\r\n                </v-tooltip>\r\n                <v-tooltip bottom>\r\n                  <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-btn\r\n                      class=\"text-capitalize\"\r\n                      color=\"error\"\r\n                      dark\r\n                      v-bind=\"attrs\"\r\n                      v-on=\"on\"\r\n                      @click=\"openDeleteDialog(question)\"\r\n                      icon\r\n                      ><v-icon>delete_forever</v-icon></v-btn\r\n                    >\r\n                  </template>\r\n                  <span>Delete</span>\r\n                </v-tooltip>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </v-simple-table> -->\r\n        <!-- <v-pagination\r\n          v-model=\"page_number\"\r\n          :length=\"page\"\r\n          total-visible=\"6\"\r\n          class=\"float-left mt-4\"\r\n          @input=\"pageSwitch\"\r\n        ></v-pagination> -->\r\n      </div>\r\n      <!-- Station Delete Dialog -->\r\n      <v-dialog v-model=\"deleteDialog\" width=\"auto\">\r\n        <v-card>\r\n          <v-card-title class=\"primary accent--text\"\r\n            >Delete Station</v-card-title\r\n          >\r\n          <v-card-text>\r\n            <v-container>\r\n              <h3 class=\"font-weight-regular mt-6 mx-8\">\r\n                Are you sure to Delete?\r\n              </h3>\r\n            </v-container>\r\n          </v-card-text>\r\n          <v-card-actions>\r\n            <v-spacer></v-spacer>\r\n            <v-btn\r\n              color=\"black\"\r\n              plain\r\n              text\r\n              class=\"text-capitalize\"\r\n              @click=\"closeDeleteDialog\"\r\n              >Cancel</v-btn\r\n            >\r\n            <v-btn color=\"error\" :loading=\"deleteLoading\" class=\"text-capitalize px-6\" @click=\"deleteForm\">Delete</v-btn>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </v-dialog>\r\n\r\n      <v-snackbar v-model=\"snackBar.store\" color=\"success\" bottom right>\r\n        <v-icon>check</v-icon> Form Added Successfully\r\n      </v-snackbar>\r\n\r\n      <v-snackbar v-model=\"snackBar.update\" color=\"success\" bottom right>\r\n        <v-icon>check</v-icon> Form Updated Successfully\r\n      </v-snackbar>\r\n\r\n      <v-snackbar v-model=\"snackBar.delete\" color=\"error\" bottom right>\r\n        <v-icon>check</v-icon> Form Deleted Successfully\r\n      </v-snackbar>\r\n    </v-container>\r\n  </v-main>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nimport addDialog from \"./Dialog/Form/AddDialog.vue\";\r\nimport updateDialog from \"./Dialog/Form/UpdateDialog.vue\";\r\n\r\nexport default {\r\n  components: { updateDialog,addDialog },\r\n  mounted() {\r\n    this.$store.dispatch(\"questions/getData\");\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      questions: (state) => state.questions.all.data,\r\n      deleteLoading:(state) => state.questions.delete.loading\r\n    }),\r\n  },\r\n  data() {\r\n    return {\r\n      dialog: {\r\n        add: false,\r\n        update:false\r\n      },\r\n      updateData:null,\r\n      deleteDialog: false,\r\n      formData: null,\r\n      page_number: 1,\r\n      inputSearch: \"\",\r\n      snackBar: {\r\n        update: false,\r\n        store: false,\r\n        delete: false,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    questionSplit(data) {\r\n      const split = data.split(\",\");\r\n\r\n      return split;\r\n    },\r\n    openDeleteDialog(data) {\r\n      this.deleteDialog = true;\r\n      this.formData = data;\r\n    },\r\n    closeDeleteDialog() {\r\n      this.deleteDialog = false;\r\n    },\r\n    async deleteForm() {\r\n      const res = await this.$store.dispatch(\"questions/delete\", this.formData);\r\n      if (res) {\r\n        this.deleteDialog = false;\r\n        this.snackBar['delete'] = true\r\n      }\r\n    },\r\n    handleDialog() {\r\n      this.dialog[\"add\"] = true;\r\n    },\r\n    handleUpdateDialog(data){\r\n      this.updateData = data\r\n      this.dialog['update'] = true\r\n    },\r\n    changeStatus(data) {\r\n      this.$store.dispatch(\"station/changeStatus\", data);\r\n    },\r\n    pageSwitch(data) {\r\n      this.page_number = data;\r\n      this.$store.dispatch(\"station/get\", data);\r\n    },\r\n    async handleSearch() {\r\n      const res = await this.$store.dispatch(\r\n        \"station/search\",\r\n        this.inputSearch\r\n      );\r\n\r\n      console.log(\"res\", res);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.bg {\r\n  background-color: #f8f0f0;\r\n}\r\n.adj {\r\n  width: 280px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}