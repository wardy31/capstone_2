{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from \"vuex\";\nimport moment from \"moment\";\nexport default {\n  mounted() {\n    this.$store.dispatch(\"user/checkProfile\", this.$route.params.id);\n    this.$store.dispatch(\"traceContact/getVisitedLocation\", this.$route.params.id);\n    this.$store.dispatch(\"location/get\");\n  },\n  filters: {\n    filterDate(val) {\n      return moment(val).format(\"MMM. DD,YYYY\").toString();\n    },\n    filterTime(val) {\n      return moment(val).format(\"h:m:ss a\").toString();\n    }\n  },\n  computed: {\n    ...mapState({\n      user: state => state.user.checkProfile.data,\n      visiteds: state => state.traceContact.all.data,\n      contactLoading: state => state.traceContact.selected.loading,\n      visitedLoading: state => state.traceContact.all.loading,\n      location: state => state.location.all.data,\n      locationLoading: state => state.location.all.loading\n    })\n  },\n  data() {\n    return {\n      checkBox: {\n        checkAll: false,\n        checkBoxes: []\n      },\n      docState: \"saved\",\n      snackBar: false,\n      title: \"\",\n      page: 1,\n      menu: false,\n      filterSubmit: {\n        location: \"\",\n        date: \"\",\n        id: this.$route.params.id\n      }\n    };\n  },\n  methods: {\n    validate() {\n      const filtered = this.checkBox.checkBoxes.filter(f => {\n        return f != null;\n      });\n      return filtered.length ? false : true;\n    },\n    async submitSelected() {\n      const filtered = this.checkBox.checkBoxes.filter(f => {\n        return f != null;\n      });\n      const res = await this.$store.dispatch(\"traceContact/submitCheckSelected\", {\n        id: this.$route.params.id,\n        data: {\n          selected: filtered\n        }\n      });\n      if (res) {\n        this.checkBox.checkBoxes = [];\n        this.handleFilter();\n        this.snackBar = true;\n      }\n    },\n    handleCheck() {\n      console.log(\"hehe\", this.checkBox.checkAll);\n      this.checkBox.checkBoxes = [];\n      if (this.checkBox.checkAll) {\n        for (const select of this.visiteds) {\n          this.checkBox.checkBoxes.push(select.user_account.id);\n        }\n      }\n    },\n    handleSubmitCheck() {},\n    changeBtn() {\n      this.$router.go(-1);\n    },\n    handleFilter() {\n      this.$store.dispatch(\"traceContact/filterVisitedRecord\", this.filterSubmit);\n    },\n    handleDate(data) {\n      console.log(data);\n      this.filterSubmit.location = \"\";\n      this.menu = false;\n    },\n    async markContact(user) {\n      const submit = {\n        tag: user.user_account_id,\n        patient: this.$route.params.id,\n        filter: this.filterSubmit\n      };\n      const res = await this.$store.dispatch(\"traceContact/submitContact\", submit);\n      if (res) {\n        this.handleFilter();\n        this.snackBar = true;\n      }\n      console.log(submit);\n    }\n  }\n};","map":{"version":3,"mappings":";AAmOA;AACA;AACA;EACAA;IACA;IACA,qBACA,mCACA,sBACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAX;QACAY;QACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;QACA;MACA;MAEA;IACA;IACA;MACA;QACA;MACA;MAEA,uCACA,oCACA;QACAF;QACAX;UACAc;QACA;MACA,EACA;MAEA;QACA;QACA;QACA;MACA;IACA;IACAC;MACAC;MACA;MAEA;QACA;UACA;QACA;MACA;IACA;IACAC;IACAC;MACA;IACA;IACAC;MACA,qBACA,oCACA,kBACA;IACA;IACAC;MACAJ;MACA;MACA;IACA;IACA;MACA;QACAK;QACAC;QACAC;MACA;MACA,uCACA,8BACAC,OACA;MACA;QACA;QACA;MACA;MACAR;IACA;EACA;AACA","names":["mounted","filters","filterDate","filterTime","computed","user","visiteds","contactLoading","visitedLoading","location","locationLoading","data","checkBox","checkAll","checkBoxes","docState","snackBar","title","page","menu","filterSubmit","date","id","methods","validate","selected","handleCheck","console","handleSubmitCheck","changeBtn","handleFilter","handleDate","tag","patient","filter","submit"],"sourceRoot":"src/views/admin/ManageContact","sources":["TraceContact.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <div class=\"ma-12\">\r\n      <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">Trace Contacts</h2>\r\n      <h5 class=\"secondary--text\">Trace User's Contacts</h5>\r\n\r\n      <div class=\"d-flex align-center mt-6\">\r\n        <v-btn color=\"primary\" @click=\"changeBtn()\" rounded small\r\n          ><v-icon left>arrow_back</v-icon>\r\n          <h4>return</h4></v-btn\r\n        >\r\n        <h2 class=\"ml-4 text-capitalize\">\r\n          {{ `${user.first_name} ${user.middle_name} ${user.last_name}` }}\r\n        </h2>\r\n      </div>\r\n\r\n      <div class=\"d-flex align-stretch mt-6\">\r\n        <v-menu\r\n          v-model=\"menu\"\r\n          :close-on-content-click=\"false\"\r\n          :nudge-right=\"40\"\r\n          transition=\"scale-transition\"\r\n          offset-y\r\n          min-width=\"auto\"\r\n        >\r\n          <template v-slot:activator=\"{ on, attrs }\">\r\n            <v-text-field\r\n              v-model=\"filterSubmit.date\"\r\n              label=\"Date Started\"\r\n              prepend-inner-icon=\"event\"\r\n              outlined\r\n              filled\r\n              dense\r\n              readonly\r\n              v-bind=\"attrs\"\r\n              v-on=\"on\"\r\n            ></v-text-field>\r\n          </template>\r\n          <v-date-picker\r\n            v-model=\"filterSubmit.date\"\r\n            @input=\"handleDate\"\r\n          ></v-date-picker>\r\n        </v-menu>\r\n        <!-- <v-select label=\"Time Frame\" outlined filled dense></v-select> -->\r\n        <v-select\r\n          label=\"Location\"\r\n          v-model=\"filterSubmit.location\"\r\n          prepend-inner-icon=\"location_on\"\r\n          :loading=\"locationLoading\"\r\n          :disabled=\"locationLoading\"\r\n          :items=\"location\"\r\n          item-text=\"name\"\r\n          item-value=\"id\"\r\n          outlined\r\n          filled\r\n          dense\r\n          class=\"ml-2\"\r\n        ></v-select>\r\n        <v-btn\r\n          color=\"primary\"\r\n          class=\"ml-2 py-5\"\r\n          medium\r\n          text\r\n          :loading=\"visitedLoading\"\r\n          @click=\"handleFilter\"\r\n          ><v-icon left>filter_list</v-icon>\r\n          <h4>Filter</h4></v-btn\r\n        >\r\n      </div>\r\n\r\n      <!-- <div class=\"adj mt-4 pt-6 d-flex mb-n3\">\r\n        <v-text-field\r\n          class=\"mr-2\"\r\n          label=\"Search here\"\r\n          solo\r\n          outlined\r\n          dense\r\n        ></v-text-field>\r\n        <v-btn color=\"primary\" class=\"py-5\"><v-icon>search</v-icon></v-btn>\r\n      </div> -->\r\n      <div class=\"d-flex justify-end\">\r\n        <v-btn\r\n          color=\"primary\"\r\n          :loading=\"contactLoading\"\r\n          class=\"text-capitalize mb-2\"\r\n          :class=\"[validate() ? `d-none` : ``]\"\r\n          @click=\"submitSelected\"\r\n          >Submit Selected As Contact</v-btn\r\n        >\r\n      </div>\r\n      <v-simple-table class=\"rounded-lg elevation-6\">\r\n        <thead>\r\n          <tr class=\"text-left\">\r\n            <th>\r\n              <v-checkbox\r\n                v-model=\"checkBox.checkAll\"\r\n                @click=\"handleCheck\"\r\n              ></v-checkbox>\r\n            </th>\r\n            <th class=\"black--text\">\r\n              <h3>Name</h3>\r\n            </th>\r\n\r\n            <th class=\"text-center black--text\">\r\n              <h3>Location Visited</h3>\r\n            </th>\r\n\r\n            <th class=\"text-center black--text\">\r\n              <h3>Time In</h3>\r\n            </th>\r\n\r\n            <th class=\"text-center black--text\">\r\n              <h3>Date</h3>\r\n            </th>\r\n            <!-- <th class=\"text-center black--text\">\r\n              <h3>Time Out</h3>\r\n            </th>\r\n\r\n            <th class=\"text-center black--text text-center\">\r\n              <h3>Total Time</h3>\r\n            </th>\r\n             -->\r\n\r\n            <th class=\"text-center black--text\">\r\n              <h3>Action</h3>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            class=\"text-center text-capitalize\"\r\n            v-for=\"(visited, index) in visiteds\"\r\n            :key=\"visited.id\"\r\n            :class=\"\r\n              visited.user_account.user_tagged.length ||\r\n              visited.user_account.user_patient.length\r\n                ? `d-none`\r\n                : 'white'\r\n            \"\r\n          >\r\n            <td class=\"text-center\">\r\n              <v-checkbox\r\n                v-model=\"checkBox.checkBoxes[index]\"\r\n                :value=\"visited.user_account.id\"\r\n              ></v-checkbox>\r\n            </td>\r\n            <td class=\"text-left font-weight-bold primary--text\">\r\n              {{\r\n                `${visited.user_account.first_name} ${visited.user_account.middle_name} ${visited.user_account.last_name}`\r\n              }}\r\n              <div class=\"secondary--text font-weight-thin\">\r\n                {{ visited.user_account.classification.name }}\r\n              </div>\r\n            </td>\r\n            <td>{{ visited.location.name }}</td>\r\n            <td>{{ visited.created_at | filterTime }}</td>\r\n            <td>{{ visited.created_at | filterDate }}</td>\r\n            <td>\r\n              <v-menu\r\n                offset-y\r\n                bottom\r\n                transition=\"slide-y-transition\"\r\n                rounded=\"lg\"\r\n              >\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                  <v-btn\r\n                    color=\"primary\"\r\n                    dark\r\n                    v-bind=\"attrs\"\r\n                    v-on=\"on\"\r\n                    icon\r\n                    large\r\n                  >\r\n                    <v-icon>menu_open</v-icon>\r\n                  </v-btn>\r\n                </template>\r\n                <v-list>\r\n                  <v-list-item\r\n                    :to=\"`/admin/checkprofile/${visited.user_account.id}`\"\r\n                  >\r\n                    <v-list-item-icon class=\"mr-4\"\r\n                      ><v-icon color=\"primary\"\r\n                        >account_circle</v-icon\r\n                      ></v-list-item-icon\r\n                    >\r\n                    <v-list-item-title class=\"font-weight-bold\"\r\n                      ><h5>Check Profile</h5></v-list-item-title\r\n                    >\r\n                  </v-list-item>\r\n                  <v-divider></v-divider>\r\n                  <v-list-item @click=\"markContact(visited)\">\r\n                    <v-list-item-icon class=\"mr-4\"\r\n                      ><v-icon color=\"primary\"\r\n                        >reduce_capacity</v-icon\r\n                      ></v-list-item-icon\r\n                    >\r\n                    <v-list-item-title class=\"font-weight-bold\"\r\n                      ><h5>Mark As Close Contact</h5></v-list-item-title\r\n                    >\r\n                  </v-list-item>\r\n                </v-list>\r\n              </v-menu>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </v-simple-table>\r\n      <!-- <v-pagination\r\n        v-model=\"page\"\r\n        :length=\"4\"\r\n        class=\"float-right mt-4\"\r\n        @input=\"pageSwitch\"\r\n      ></v-pagination> -->\r\n      <v-snackbar\r\n        v-model=\"snackBar\"\r\n        timeout=\"2000\"\r\n        color=\"success\"\r\n        bottom\r\n        right\r\n      >\r\n        <v-icon class=\"pr-2\">check</v-icon>\r\n        successfully classified as close contact.\r\n      </v-snackbar>\r\n    </div>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nimport moment from \"moment\";\r\nexport default {\r\n  mounted() {\r\n    this.$store.dispatch(\"user/checkProfile\", this.$route.params.id);\r\n    this.$store.dispatch(\r\n      \"traceContact/getVisitedLocation\",\r\n      this.$route.params.id\r\n    );\r\n    this.$store.dispatch(\"location/get\");\r\n  },\r\n  filters: {\r\n    filterDate(val) {\r\n      return moment(val).format(\"MMM. DD,YYYY\").toString();\r\n    },\r\n    filterTime(val) {\r\n      return moment(val).format(\"h:m:ss a\").toString();\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      user: (state) => state.user.checkProfile.data,\r\n      visiteds: (state) => state.traceContact.all.data,\r\n      contactLoading: (state) => state.traceContact.selected.loading,\r\n      visitedLoading: (state) => state.traceContact.all.loading,\r\n      location: (state) => state.location.all.data,\r\n      locationLoading: (state) => state.location.all.loading,\r\n    }),\r\n  },\r\n  data() {\r\n    return {\r\n      checkBox: {\r\n        checkAll: false,\r\n        checkBoxes: [],\r\n      },\r\n      docState: \"saved\",\r\n      snackBar: false,\r\n      title: \"\",\r\n      page: 1,\r\n      menu: false,\r\n      filterSubmit: {\r\n        location: \"\",\r\n        date: \"\",\r\n        id: this.$route.params.id,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    validate() {\r\n      const filtered = this.checkBox.checkBoxes.filter((f) => {\r\n        return f != null;\r\n      });\r\n\r\n      return filtered.length ? false : true;\r\n    },\r\n    async submitSelected() {\r\n      const filtered = this.checkBox.checkBoxes.filter((f) => {\r\n        return f != null;\r\n      });\r\n\r\n      const res = await this.$store.dispatch(\r\n        \"traceContact/submitCheckSelected\",\r\n        {\r\n          id: this.$route.params.id,\r\n          data: {\r\n            selected: filtered,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res) {\r\n        this.checkBox.checkBoxes = [];\r\n        this.handleFilter();\r\n        this.snackBar = true;\r\n      }\r\n    },\r\n    handleCheck() {\r\n      console.log(\"hehe\", this.checkBox.checkAll);\r\n      this.checkBox.checkBoxes = [];\r\n\r\n      if (this.checkBox.checkAll) {\r\n        for (const select of this.visiteds) {\r\n          this.checkBox.checkBoxes.push(select.user_account.id);\r\n        }\r\n      }\r\n    },\r\n    handleSubmitCheck() {},\r\n    changeBtn() {\r\n      this.$router.go(-1);\r\n    },\r\n    handleFilter() {\r\n      this.$store.dispatch(\r\n        \"traceContact/filterVisitedRecord\",\r\n        this.filterSubmit\r\n      );\r\n    },\r\n    handleDate(data) {\r\n      console.log(data);\r\n      this.filterSubmit.location = \"\";\r\n      this.menu = false;\r\n    },\r\n    async markContact(user) {\r\n      const submit = {\r\n        tag: user.user_account_id,\r\n        patient: this.$route.params.id,\r\n        filter: this.filterSubmit,\r\n      };\r\n      const res = await this.$store.dispatch(\r\n        \"traceContact/submitContact\",\r\n        submit\r\n      );\r\n      if (res) {\r\n        this.handleFilter();\r\n        this.snackBar = true;\r\n      }\r\n      console.log(submit);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}