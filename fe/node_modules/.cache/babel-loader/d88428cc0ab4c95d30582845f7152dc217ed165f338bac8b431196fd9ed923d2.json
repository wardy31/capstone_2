{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from \"vuex\";\nexport default {\n  updated() {\n    if (this.next) {\n      this.$router.push(\"/user/home\");\n      this.$store.dispatch(\"user/reset\");\n    }\n  },\n  computed: {\n    ...mapState({\n      loading: state => state.user.credentials.loading,\n      data: state => state.user.credentials.data,\n      next: state => state.user.credentials.next,\n      error: state => state.user.credentials.error,\n      message: state => state.user.credentials.message\n    })\n  },\n  data() {\n    return {\n      credentials: {\n        username: \"\",\n        password: \"\"\n      }\n    };\n  },\n  methods: {\n    login() {\n      this.$store.dispatch(\"user/login\", this.credentials);\n    }\n  }\n};","map":{"version":3,"mappings":";AAqDA;AAEA;EACAA;IACA;MACA;MACA;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAH;IACA;MACAI;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;AACA","names":["updated","computed","loading","data","next","error","message","credentials","username","password","methods","login"],"sourceRoot":"src/views/Login","sources":["LoginUser.vue"],"sourcesContent":["<template>\n  <v-app id=\"apps\">\n    <v-card class=\"ma-auto rounded-lg\" elevation=\"5\" width=\"720\">\n      <v-container>\n        <v-row>\n          <v-col class=\"rounded-xl rounded-r-0 accent\">\n            <h4 class=\"mt-3 ml-2 mb-16 primary--text\">UniTrace.</h4>\n            <img :src=\"require('@/assets/user_4.svg')\" width=\"320\" />\n          </v-col>\n          <v-col>\n            <v-container>\n              <h2 class=\"font-weight-bold primary--text text-center\">UniTrace</h1>\n              \n              <div class=\"mt-12\">\n                <h4 class=\"primary--text mb-6 font-weight-regular\">Login Account</h4>\n                <h5 class=\"mb-1 font-weight-regular\">Username</h5>\n                <v-text-field\n                  outlined\n                  dense\n                  class=\"rounded-lg\"\n                  v-model=\"credentials.username\"\n                ></v-text-field>\n\n                <h5 class=\"mb-1 mt-n4 font-weight-regular\">Password</h5>\n                <v-text-field\n                  outlined\n                  dense\n                  type=\"password\"\n                  class=\"rounded-lg\"\n                  v-model=\"credentials.password\"\n                ></v-text-field>\n\n                <v-btn\n                  color=\"primary\"\n                  class=\"rounded-md mt-n2\"\n                  block\n                  @click=\"login()\"\n                  :loading=\"loading\"\n                  ><h4>Login</h4></v-btn\n                >\n                <v-btn class=\"rounded-md mt-2\" block text\n                 to=\"/UserRegister\" ><h5 class=\"font-weight-regular\">Create Account</h5></v-btn\n                >\n              </div>\n            </v-container>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-card>\n  </v-app>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n\nexport default {\n  updated() {\n    if (this.next) {\n      this.$router.push(\"/user/home\");\n      this.$store.dispatch(\"user/reset\");\n    }\n  },\n  computed: {\n    ...mapState({\n      loading: (state) => state.user.credentials.loading,\n      data: (state) => state.user.credentials.data,\n      next: (state) => state.user.credentials.next,\n      error: (state) => state.user.credentials.error,\n      message: (state) => state.user.credentials.message,\n    }),\n  },\n  data() {\n    return {\n      credentials: {\n        username: \"\",\n        password: \"\",\n      },\n    };\n  },\n  methods: {\n    login() {\n      this.$store.dispatch(\"user/login\", this.credentials);\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@700&display=swap\");\n#apps {\n  background-color: #141e61;\n  font-family: \"Poppins\", sans-serif;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}