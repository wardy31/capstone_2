{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from 'vuex';\nimport * as faceapi from 'face-api.js';\nexport default {\n  mounted() {\n    const run = async () => {\n      await faceapi.nets.ssdMobilenetv1.loadFromUri('/weights');\n      await faceapi.nets.faceLandmark68Net.loadFromUri('/weights');\n      await faceapi.nets.faceRecognitionNet.loadFromUri('/weights');\n      await faceapi.nets.tinyFaceDetector.loadFromUri('/weights');\n      console.log(faceapi.nets);\n      this.faceLoading = false;\n    };\n    run();\n  },\n  computed: {\n    ...mapState({\n      loading: state => state.register.submit.loading,\n      error: state => state.register.submit.error,\n      message: state => state.register.submit.message\n    })\n  },\n  data() {\n    return {\n      faceLoading: true,\n      snackBar1: false,\n      snackBar2: false,\n      loading_1: false,\n      loading_2: false,\n      error_1: false,\n      error_2: false,\n      clinic: {\n        first_name: \"\",\n        middle_name: \"\",\n        last_name: \"\",\n        address: \"\",\n        deparment: \"\",\n        gender: \"\",\n        contact_number: \"\",\n        username: \"\",\n        password: \"\",\n        password_confirmation: \"\",\n        email: \"\",\n        vaccination_status: \"\",\n        classification_id: \"\",\n        upload_1: \"\",\n        upload_2: \"\"\n      }\n    };\n  },\n  methods: {\n    async submit() {\n      const fd = new FormData();\n      fd.append('first_name', this.clinic.first_name);\n      fd.append('middle_name', this.clinic.middle_name);\n      fd.append('last_name', this.clinic.last_name);\n      fd.append('vaccination_status', this.clinic.vaccination_status);\n      fd.append('gender', this.clinic.gender);\n      fd.append('address', this.clinic.address);\n      fd.append('email', this.clinic.email);\n      fd.append('department', this.clinic.department);\n      fd.append('contact_number', this.clinic.contact_number);\n      fd.append('classification_id', this.clinic.classification_id);\n      fd.append('username', this.clinic.username);\n      fd.append('password', this.clinic.password);\n      fd.append('password_confirmation', this.clinic.password_confirmation);\n      fd.append('upload_1', this.clinic.upload_1);\n      fd.append('upload_2', this.clinic.upload_2);\n      const res = await this.$store.dispatch('register/createUser', fd);\n      if (res) {\n        this.clinic.first_name = \"\";\n        this.clinic.middle_name = \"\";\n        this.clinic.last_name = \"\";\n        this.clinic.vaccination_status = \"\";\n        this.clinic.gender = \"\";\n        this.clinic.address = \"\";\n        this.clinic.email = \"\";\n        this.clinic.department = \"\";\n        this.clinic.contact_number = \"\";\n        this.clinic.classification_id = \"\";\n        this.clinic.username = \"\";\n        this.clinic.password = \"\";\n        this.clinic.password_confirmation = \"\";\n        this.clinic.upload_1 = \"\";\n        this.clinic.upload_2 = \"\";\n        this.$router.push('/');\n      }\n    },\n    async handleImage(e) {\n      console.log('e', e);\n      this.loading_1 = true;\n      const image = await faceapi.bufferToImage(e);\n      const result = await faceapi.detectSingleFace(image);\n      if (!result) {\n        this.clinic.upload_1 = \"\";\n        this.snackBar1 = true;\n        this.loading_1 = false;\n      }\n      this.loading_1 = false;\n      console.log('result', result);\n    },\n    async handleImage2(e) {\n      console.log('e', e);\n      this.loading_2 = true;\n      const image = await faceapi.bufferToImage(e);\n      const result = await faceapi.detectSingleFace(image);\n      if (!result) {\n        this.clinic.upload_2 = \"\";\n        this.snackBar2 = true;\n        this.loading_2 = false;\n      }\n      this.loading_2 = false;\n      console.log('result', result);\n    }\n  }\n};","map":{"version":3,"mappings":";AA0GA;AACA;AAEA;EACAA;IACA;MACA;MACA;MACA;MACA;MACAC;MACA;IACA;IAEAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACA;MACA;MAEAC;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MAEA;MAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;MACA;IAEA;IACA;MACA/B;MAEA;MACA;MACA;MAEA;QACA;QACA;QACA;MACA;MAEA;MACAA;IACA;IACA;MACAA;MAEA;MACA;MACA;MAEA;QACA;QACA;QACA;MACA;MAEA;MACAA;IACA;EAEA;AACA","names":["mounted","console","run","computed","loading","error","message","data","faceLoading","snackBar1","snackBar2","loading_1","loading_2","error_1","error_2","clinic","first_name","middle_name","last_name","address","deparment","gender","contact_number","username","password","password_confirmation","email","vaccination_status","classification_id","upload_1","upload_2","methods","fd"],"sourceRoot":"src/views","sources":["UserRegister.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-main class=\"primary\">\n      <v-container v-if=\"faceLoading\">\n        <v-card width=\"800\" class=\"rounded-lg elevation-6 accent mx-auto my-auto\">\n          <v-card-title class=\"primary--text\">\n            <h3>Create Account</h3>\n          </v-card-title>\n\n          <h5 class=\"mx-4 mb-2 secondary--text\">* User Registration.</h5>\n          <div class=\"text-center mt-16\">\n            <h2 class=\"mt-16 mb-8\">Loading Please Wait ....</h2>\n            <v-progress-circular :size=\"$vuetify.breakpoint.mobile ? 60 : 80\" :width=\"10\" color=\"primary\"\n              indeterminate></v-progress-circular>\n          </div>\n        </v-card>\n      </v-container>\n      <v-container v-else>\n        <v-card class=\"rounded-lg elevation-6 accent mx-auto my-auto\" width=\"800\">\n          <v-card-title class=\"primary--text\">\n            <h3>Create Account</h3>\n          </v-card-title>\n          <h5 class=\"mx-4 mb-2 secondary--text\">* User Registration.</h5>\n          <v-divider></v-divider>\n          <div class=\"mx-14 mt-8\">\n            <h4 class=\"mb-2\">Personal Information</h4>\n\n            <v-row dense>\n              <v-col><v-text-field label=\"First Name\" filled dense outlined :error-messages=\"message.first_name\"\n                  v-model=\"clinic.first_name\"></v-text-field></v-col>\n              <v-col><v-text-field label=\"Middle Name\" filled dense outlined :error-messages=\"message.middle_name\"\n                  v-model=\"clinic.middle_name\"></v-text-field></v-col>\n              <v-col><v-text-field label=\"Last Name\" filled dense outlined :error-messages=\"message.last_name\"\n                  v-model=\"clinic.last_name\"></v-text-field></v-col>\n            </v-row>\n            <v-row dense>\n              <v-col><v-text-field label=\"Department\" :error-messages=\"message.department\" v-model=\"clinic.department\"\n                  filled dense outlined></v-text-field></v-col>\n              <v-col> <v-select class=\"text-capitalize\"\n                  :items=\"[{ name: `student`, id: 1 }, { name: `employee`, id: 2 }, { name: `visitor`, id: 3 }]\"\n                  item-text=\"name\" item-value=\"id\" :error-messages=\"message.classification_id\"\n                  v-model=\"clinic.classification_id\" outlined dense filled label=\"Classification\" />\n              </v-col>\n              <v-col> <v-select :items=\"['Male', 'Female']\" v-model=\"clinic.gender\" outlined dense filled\n                  :error-messages=\"message.gender\" label=\"Gender\" />\n              </v-col>\n            </v-row>\n\n            <v-row dense>\n              <v-col cols=\"5\"><v-text-field label=\"Address\" filled dense outlined :error-messages=\"message.address\"\n                  v-model=\"clinic.address\"></v-text-field></v-col>\n              <v-col> <v-select :items=\"['Partially Vaccinated', 'Fully Vaccinated', 'Booster']\"\n                  v-model=\"clinic.vaccination_status\" :error-messages=\"message.vaccination_status\" outlined dense filled\n                  label=\"Vaccination Status\" />\n              </v-col>\n            </v-row>\n            <v-row dense>\n              <v-col><v-text-field label=\"Contact Number\" filled dense outlined :error-messages=\"message.contact_number\"\n                  v-model=\"clinic.contact_number\"></v-text-field></v-col>\n              <v-col><v-text-field label=\"Email\" filled dense outlined v-model=\"clinic.email\"\n                  :error-messages=\"message.email\"></v-text-field></v-col>\n            </v-row>\n\n            <h4 class=\"\">Upload Face Image</h4>\n            <h5 class=\"secondary--text mb-2\">*This is for face recognition purpose only</h5>\n            <v-row dense>\n              <v-col> <v-file-input accept=\"image/*\" :loading=\"loading_1\" @change=\"handleImage\" v-model=\"clinic.upload_1\"\n                  :prepend-icon=\"false\" prepend-inner-icon=\"image\" outlined dense filled placeholder=\"Upload Image\"\n                  :error-messages=\"message.upload_1\"></v-file-input>\n              </v-col>\n              <v-col>\n                <v-file-input accept=\"image/*\" :loading=\"loading_2\" :prepend-icon=\"false\" @change=\"handleImage2\"\n                  prepend-inner-icon=\"image\" v-model=\"clinic.upload_2\" outlined dense filled placeholder=\"Upload Image\"\n                  :error-messages=\"message.upload_2\"></v-file-input>\n              </v-col>\n            </v-row>\n\n            <h4 class=\"mb-2\">Security Information</h4>\n            <v-row dense>\n              <v-col cols=\"3\"><v-text-field label=\"Username\" filled dense outlined :error-messages=\"message.username\"\n                  v-model=\"clinic.username\"></v-text-field></v-col>\n              <v-col cols=\"4\"><v-text-field label=\"Password\" filled dense outlined type=\"password\"\n                  :error-messages=\"message.password\" v-model=\"clinic.password\"></v-text-field></v-col>\n              <v-col cols=\"4\"><v-text-field label=\"Confirm Password\" filled dense outlined type=\"password\"\n                  :error=\"message.password\" v-model=\"clinic.password_confirmation\"></v-text-field></v-col>\n            </v-row>\n            <v-snackbar color=\"error\" v-model=\"snackBar1\" bottom right>\n              <v-icon class=\"mr-2\">error</v-icon> No Face was Detected\n            </v-snackbar>\n            <v-snackbar color=\"error\" v-model=\"snackBar2\" bottom right>\n              <v-icon class=\"mr-2\">error</v-icon> No Face was Detected\n            </v-snackbar>\n          </div>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn text plain to=\"/\" class=\" text-capitalize\">Cancel</v-btn>\n            <v-btn color=\"primary\" @click=\"submit\" :loading=\"loading\" class=\"pa-5 px-4 mr-8 text-capitalize\">Create\n              Account</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n  \n<script>\nimport { mapState } from 'vuex';\nimport * as faceapi from 'face-api.js'\n\nexport default {\n  mounted() {\n    const run = async () => {\n      await faceapi.nets.ssdMobilenetv1.loadFromUri('/weights')\n      await faceapi.nets.faceLandmark68Net.loadFromUri('/weights')\n      await faceapi.nets.faceRecognitionNet.loadFromUri('/weights')\n      await faceapi.nets.tinyFaceDetector.loadFromUri('/weights')\n      console.log(faceapi.nets);\n      this.faceLoading = false\n    }\n\n    run()\n  },\n  computed: {\n    ...mapState({\n      loading: state => state.register.submit.loading,\n      error: state => state.register.submit.error,\n      message: state => state.register.submit.message\n    })\n  },\n  data() {\n    return {\n      faceLoading: true,\n      snackBar1: false,\n      snackBar2: false,\n      loading_1: false,\n      loading_2: false,\n      error_1: false,\n      error_2: false,\n      clinic: {\n        first_name: \"\",\n        middle_name: \"\",\n        last_name: \"\",\n        address: \"\",\n        deparment: \"\",\n        gender: \"\",\n        contact_number: \"\",\n        username: \"\",\n        password: \"\",\n        password_confirmation: \"\",\n        email: \"\",\n        vaccination_status: \"\",\n        classification_id: \"\",\n        upload_1: \"\",\n        upload_2: \"\"\n      }\n    }\n  },\n  methods: {\n    async submit() {\n      const fd = new FormData()\n\n      fd.append('first_name', this.clinic.first_name)\n      fd.append('middle_name', this.clinic.middle_name)\n      fd.append('last_name', this.clinic.last_name)\n      fd.append('vaccination_status', this.clinic.vaccination_status)\n      fd.append('gender', this.clinic.gender)\n      fd.append('address', this.clinic.address)\n      fd.append('email', this.clinic.email)\n      fd.append('department', this.clinic.department)\n      fd.append('contact_number', this.clinic.contact_number)\n      fd.append('classification_id', this.clinic.classification_id)\n      fd.append('username', this.clinic.username)\n      fd.append('password', this.clinic.password)\n      fd.append('password_confirmation', this.clinic.password_confirmation)\n      fd.append('upload_1', this.clinic.upload_1)\n      fd.append('upload_2', this.clinic.upload_2)\n\n      const res = await this.$store.dispatch('register/createUser', fd)\n\n      if (res) {\n        this.clinic.first_name = \"\"\n        this.clinic.middle_name = \"\"\n        this.clinic.last_name = \"\"\n        this.clinic.vaccination_status = \"\"\n        this.clinic.gender = \"\"\n        this.clinic.address = \"\"\n        this.clinic.email = \"\"\n        this.clinic.department = \"\"\n        this.clinic.contact_number = \"\"\n        this.clinic.classification_id = \"\"\n        this.clinic.username = \"\"\n        this.clinic.password = \"\"\n        this.clinic.password_confirmation = \"\"\n        this.clinic.upload_1 = \"\"\n        this.clinic.upload_2 = \"\"\n\n        this.$router.push('/')\n      }\n\n    },\n    async handleImage(e) {\n      console.log('e', e)\n\n      this.loading_1 = true\n      const image = await faceapi.bufferToImage(e)\n      const result = await faceapi.detectSingleFace(image)\n\n      if (!result) {\n        this.clinic.upload_1 = \"\"\n        this.snackBar1 = true\n        this.loading_1 = false\n      }\n\n      this.loading_1 = false\n      console.log('result', result);\n    },\n    async handleImage2(e) {\n      console.log('e', e)\n\n      this.loading_2 = true\n      const image = await faceapi.bufferToImage(e)\n      const result = await faceapi.detectSingleFace(image)\n\n      if (!result) {\n        this.clinic.upload_2 = \"\"\n        this.snackBar2 = true\n        this.loading_2 = false\n      }\n\n      this.loading_2 = false\n      console.log('result', result);\n    }\n\n  }\n};\n</script>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}