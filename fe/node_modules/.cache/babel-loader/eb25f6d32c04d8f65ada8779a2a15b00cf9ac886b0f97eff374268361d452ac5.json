{"ast":null,"code":"import { mapState } from \"vuex\";\nimport addDialog from \"./Dialog/Form/AddDialog.vue\";\nimport updateDialog from \"./Dialog/Form/UpdateDialog.vue\";\nexport default {\n  components: {\n    updateDialog,\n    addDialog\n  },\n  mounted() {\n    this.$store.dispatch(\"questions/getData\");\n  },\n  computed: {\n    ...mapState({\n      questions: state => state.questions.all.data,\n      deleteLoading: state => state.questions.delete.loading\n    })\n  },\n  data() {\n    return {\n      dialog: {\n        add: false,\n        update: false\n      },\n      updateData: null,\n      deleteDialog: false,\n      formData: null,\n      page_number: 1,\n      inputSearch: \"\",\n      snackBar: {\n        update: false,\n        store: false,\n        delete: false\n      }\n    };\n  },\n  methods: {\n    questionSplit(data) {\n      const split = data.split(\",\");\n      return split;\n    },\n    openDeleteDialog(data) {\n      this.deleteDialog = true;\n      this.formData = data;\n    },\n    closeDeleteDialog() {\n      this.deleteDialog = false;\n    },\n    async deleteForm() {\n      const res = await this.$store.dispatch(\"questions/delete\", this.formData);\n      if (res) {\n        this.deleteDialog = false;\n        this.snackBar['delete'] = true;\n      }\n    },\n    handleDialog() {\n      this.dialog[\"add\"] = true;\n    },\n    handleUpdateDialog(data) {\n      this.updateData = data;\n      this.dialog['update'] = true;\n    },\n    changeStatus(data) {\n      this.$store.dispatch(\"station/changeStatus\", data);\n    },\n    pageSwitch(data) {\n      this.page_number = data;\n      this.$store.dispatch(\"station/get\", data);\n    },\n    async handleSearch() {\n      const res = await this.$store.dispatch(\"station/search\", this.inputSearch);\n      console.log(\"res\", res);\n    }\n  }\n};","map":{"version":3,"mappings":"AAiNA;AACA;AACA;AAEA;EACAA;IAAAC;IAAAC;EAAA;EACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAN;QACAO;QACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;MAEA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACA;MACA;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACA;MACA,uCACA,kBACA,iBACA;MAEAC;IACA;EACA;AACA","names":["components","updateDialog","addDialog","mounted","computed","questions","deleteLoading","data","dialog","add","update","updateData","deleteDialog","formData","page_number","inputSearch","snackBar","store","delete","methods","questionSplit","openDeleteDialog","closeDeleteDialog","handleDialog","handleUpdateDialog","changeStatus","pageSwitch","console"],"sourceRoot":"src/views/admin","sources":["ManageForm.vue"],"sourcesContent":["<template>\n  <v-main class=\"accent\">\n    <v-container fluid>\n      <addDialog\n        :dialog=\"dialog.add\"\n        @handleDialog=\"dialog.add = false\"\n        @snackBar=\"snackBar['store'] = true\"\n      />\n      <updateDialog\n        :dialog=\"dialog['update']\"\n        :updateData = \"updateData\"\n        @handleUpdateData = \"updateData = null\"\n        @handleDialog = \"dialog['update'] = false\"\n        @snackBar=\"snackBar['update']  = true\"\n      />\n      <div class=\"ma-lg-12\">\n        <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">Manage Form</h2>\n        <h5 class=\"secondary--text\">List of Health Declaration Form</h5>\n\n        <div class=\"mt-4 pt-6 d-flex justify-end mb-6\">\n          <!-- <div class=\"d-flex adj\">\n              <v-text-field\n                class=\"mr-2\"\n                label=\"Search here\"\n                solo\n                dense\n                v-model=\"inputSearch\"\n              ></v-text-field>\n              <v-btn color=\"primary\" @click=\"handleSearch\"><v-icon>search</v-icon></v-btn>\n            </div> -->\n\n          <v-btn\n            @click=\"handleDialog\"\n            color=\"primary\"\n            class=\"px-8 py-2 font-weight-bold\"\n            ><v-icon left>add</v-icon> Question</v-btn\n          >\n        </div>\n\n        <v-card\n          v-for=\"question in questions\"\n          :key=\"question.id\"\n          class=\"mb-4 rounded-lg\"\n        >\n          <v-card-title class=\"font-weight-bold primary--text\">Question</v-card-title>\n          <v-card-text>\n            <div class=\"text-body-1 font-weight-bold black--text\">\n              {{ question.question }}\n            </div>\n            <div class=\"mt-2\">\n              <ul v-if=\"question.sub_question\">\n                <li\n                  v-for=\"(list, index) in questionSplit(question.sub_question)\"\n                  :key=\"index\"\n                >\n                  {{ list }}\n                </li>\n              </ul>\n            </div>\n          </v-card-text>\n          <v-card-actions class=\"ml-4\">\n            <v-tooltip bottom >\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-btn\n                  class=\"text-capitalize mr-2\"\n                  color=\"primary\"\n                  @click=\"handleUpdateDialog(question)\"\n                  dark\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                  ><v-icon>article</v-icon> Update Form</v-btn\n                >\n              </template>\n              <span>update form</span>\n            </v-tooltip>\n            <v-tooltip bottom>\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-btn\n                  class=\"text-capitalize\"\n                  color=\"error\"\n                  dark\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                  @click=\"openDeleteDialog(question)\"\n                  ><v-icon>delete_forever</v-icon> Delete</v-btn\n                >\n              </template>\n              <span>Delete</span>\n            </v-tooltip>\n          </v-card-actions>\n        </v-card>\n        <!-- <v-simple-table class=\"rounded-lg elevation-6\">\n          <thead>\n            <tr class=\"text-center\">\n              <th class=\"text-left black--text\">Questions</th>\n              <th class=\"text-left black--text\">Sub List</th>\n              <th class=\"text-left black--text text-center\">Status</th>\n              <th class=\"text-left black--text text-center\">Actions</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr\n              v-for=\"question in questions\"\n              :key=\"question.id\"\n              class=\"text-center text-capitalize\"\n            >\n              <td class=\"text-left text-justify py-4\">\n                {{ `${question.question}` }}\n              </td>\n              <td class=\"text-left text-justify py-4\">\n                <ul v-if=\"question.sub_question\">\n                  <li\n                    v-for=\"(list, index) in questionSplit(\n                      question.sub_question\n                    )\"\n                    :key=\"index\"\n                  >\n                    {{ list }}\n                  </li>\n                </ul>\n              </td>\n              <td class=\"\">\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      class=\"text-capitalize\"\n                      color=\"primary\"\n                      @click=\"changeStatus(question)\"\n                      dark\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      icon\n                      ><v-icon>article</v-icon></v-btn\n                    >\n                  </template>\n                  <span>Change Status</span>\n                </v-tooltip>\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      class=\"text-capitalize\"\n                      color=\"error\"\n                      dark\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      @click=\"openDeleteDialog(question)\"\n                      icon\n                      ><v-icon>delete_forever</v-icon></v-btn\n                    >\n                  </template>\n                  <span>Delete</span>\n                </v-tooltip>\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table> -->\n        <!-- <v-pagination\n          v-model=\"page_number\"\n          :length=\"page\"\n          total-visible=\"6\"\n          class=\"float-left mt-4\"\n          @input=\"pageSwitch\"\n        ></v-pagination> -->\n      </div>\n      <!-- Station Delete Dialog -->\n      <v-dialog v-model=\"deleteDialog\" width=\"auto\">\n        <v-card>\n          <v-card-title class=\"primary accent--text\"\n            >Delete Station</v-card-title\n          >\n          <v-card-text>\n            <v-container>\n              <h3 class=\"font-weight-regular mt-6 mx-8\">\n                Are you sure to Delete?\n              </h3>\n            </v-container>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"black\"\n              plain\n              text\n              class=\"text-capitalize\"\n              @click=\"closeDeleteDialog\"\n              >Cancel</v-btn\n            >\n            <v-btn color=\"error\" :loading=\"deleteLoading\" class=\"text-capitalize px-6\" @click=\"deleteForm\">Delete</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <v-snackbar v-model=\"snackBar.store\" color=\"success\" bottom right>\n        <v-icon>check</v-icon> Form Added Successfully\n      </v-snackbar>\n\n      <v-snackbar v-model=\"snackBar.update\" color=\"success\" bottom right>\n        <v-icon>check</v-icon> Form Updated Successfully\n      </v-snackbar>\n\n      <v-snackbar v-model=\"snackBar.delete\" color=\"error\" bottom right>\n        <v-icon>check</v-icon> Form Deleted Successfully\n      </v-snackbar>\n    </v-container>\n  </v-main>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport addDialog from \"./Dialog/Form/AddDialog.vue\";\nimport updateDialog from \"./Dialog/Form/UpdateDialog.vue\";\n\nexport default {\n  components: { updateDialog,addDialog },\n  mounted() {\n    this.$store.dispatch(\"questions/getData\");\n  },\n  computed: {\n    ...mapState({\n      questions: (state) => state.questions.all.data,\n      deleteLoading:(state) => state.questions.delete.loading\n    }),\n  },\n  data() {\n    return {\n      dialog: {\n        add: false,\n        update:false\n      },\n      updateData:null,\n      deleteDialog: false,\n      formData: null,\n      page_number: 1,\n      inputSearch: \"\",\n      snackBar: {\n        update: false,\n        store: false,\n        delete: false,\n      },\n    };\n  },\n  methods: {\n    questionSplit(data) {\n      const split = data.split(\",\");\n\n      return split;\n    },\n    openDeleteDialog(data) {\n      this.deleteDialog = true;\n      this.formData = data;\n    },\n    closeDeleteDialog() {\n      this.deleteDialog = false;\n    },\n    async deleteForm() {\n      const res = await this.$store.dispatch(\"questions/delete\", this.formData);\n      if (res) {\n        this.deleteDialog = false;\n        this.snackBar['delete'] = true\n      }\n    },\n    handleDialog() {\n      this.dialog[\"add\"] = true;\n    },\n    handleUpdateDialog(data){\n      this.updateData = data\n      this.dialog['update'] = true\n    },\n    changeStatus(data) {\n      this.$store.dispatch(\"station/changeStatus\", data);\n    },\n    pageSwitch(data) {\n      this.page_number = data;\n      this.$store.dispatch(\"station/get\", data);\n    },\n    async handleSearch() {\n      const res = await this.$store.dispatch(\n        \"station/search\",\n        this.inputSearch\n      );\n\n      console.log(\"res\", res);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.bg {\n  background-color: #f8f0f0;\n}\n.adj {\n  width: 280px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}