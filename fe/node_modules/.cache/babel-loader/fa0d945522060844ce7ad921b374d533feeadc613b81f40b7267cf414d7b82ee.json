{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { extendWithFaceExpressions } from '../factories/WithFaceExpressions';\nimport { ComposableTask } from './ComposableTask';\nimport { ComputeAllFaceDescriptorsTask, ComputeSingleFaceDescriptorTask } from './ComputeFaceDescriptorsTasks';\nimport { extractAllFacesAndComputeResults, extractSingleFaceAndComputeResult } from './extractFacesAndComputeResults';\nimport { nets } from './nets';\nimport { PredictAllAgeAndGenderTask, PredictAllAgeAndGenderWithFaceAlignmentTask, PredictSingleAgeAndGenderTask, PredictSingleAgeAndGenderWithFaceAlignmentTask } from './PredictAgeAndGenderTask';\nvar PredictFaceExpressionsTaskBase = /** @class */function (_super) {\n  __extends(PredictFaceExpressionsTaskBase, _super);\n  function PredictFaceExpressionsTaskBase(parentTask, input, extractedFaces) {\n    var _this = _super.call(this) || this;\n    _this.parentTask = parentTask;\n    _this.input = input;\n    _this.extractedFaces = extractedFaces;\n    return _this;\n  }\n  return PredictFaceExpressionsTaskBase;\n}(ComposableTask);\nexport { PredictFaceExpressionsTaskBase };\nvar PredictAllFaceExpressionsTask = /** @class */function (_super) {\n  __extends(PredictAllFaceExpressionsTask, _super);\n  function PredictAllFaceExpressionsTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PredictAllFaceExpressionsTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var parentResults, faceExpressionsByFace;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.parentTask];\n          case 1:\n            parentResults = _a.sent();\n            return [4 /*yield*/, extractAllFacesAndComputeResults(parentResults, this.input, function (faces) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      return [4 /*yield*/, Promise.all(faces.map(function (face) {\n                        return nets.faceExpressionNet.predictExpressions(face);\n                      }))];\n                    case 1:\n                      return [2 /*return*/, _a.sent()];\n                  }\n                });\n              });\n            }, this.extractedFaces)];\n          case 2:\n            faceExpressionsByFace = _a.sent();\n            return [2 /*return*/, parentResults.map(function (parentResult, i) {\n              return extendWithFaceExpressions(parentResult, faceExpressionsByFace[i]);\n            })];\n        }\n      });\n    });\n  };\n  PredictAllFaceExpressionsTask.prototype.withAgeAndGender = function () {\n    return new PredictAllAgeAndGenderTask(this, this.input);\n  };\n  return PredictAllFaceExpressionsTask;\n}(PredictFaceExpressionsTaskBase);\nexport { PredictAllFaceExpressionsTask };\nvar PredictSingleFaceExpressionsTask = /** @class */function (_super) {\n  __extends(PredictSingleFaceExpressionsTask, _super);\n  function PredictSingleFaceExpressionsTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PredictSingleFaceExpressionsTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var parentResult, faceExpressions;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.parentTask];\n          case 1:\n            parentResult = _a.sent();\n            if (!parentResult) {\n              return [2 /*return*/];\n            }\n\n            return [4 /*yield*/, extractSingleFaceAndComputeResult(parentResult, this.input, function (face) {\n              return nets.faceExpressionNet.predictExpressions(face);\n            }, this.extractedFaces)];\n          case 2:\n            faceExpressions = _a.sent();\n            return [2 /*return*/, extendWithFaceExpressions(parentResult, faceExpressions)];\n        }\n      });\n    });\n  };\n  PredictSingleFaceExpressionsTask.prototype.withAgeAndGender = function () {\n    return new PredictSingleAgeAndGenderTask(this, this.input);\n  };\n  return PredictSingleFaceExpressionsTask;\n}(PredictFaceExpressionsTaskBase);\nexport { PredictSingleFaceExpressionsTask };\nvar PredictAllFaceExpressionsWithFaceAlignmentTask = /** @class */function (_super) {\n  __extends(PredictAllFaceExpressionsWithFaceAlignmentTask, _super);\n  function PredictAllFaceExpressionsWithFaceAlignmentTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PredictAllFaceExpressionsWithFaceAlignmentTask.prototype.withAgeAndGender = function () {\n    return new PredictAllAgeAndGenderWithFaceAlignmentTask(this, this.input);\n  };\n  PredictAllFaceExpressionsWithFaceAlignmentTask.prototype.withFaceDescriptors = function () {\n    return new ComputeAllFaceDescriptorsTask(this, this.input);\n  };\n  return PredictAllFaceExpressionsWithFaceAlignmentTask;\n}(PredictAllFaceExpressionsTask);\nexport { PredictAllFaceExpressionsWithFaceAlignmentTask };\nvar PredictSingleFaceExpressionsWithFaceAlignmentTask = /** @class */function (_super) {\n  __extends(PredictSingleFaceExpressionsWithFaceAlignmentTask, _super);\n  function PredictSingleFaceExpressionsWithFaceAlignmentTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PredictSingleFaceExpressionsWithFaceAlignmentTask.prototype.withAgeAndGender = function () {\n    return new PredictSingleAgeAndGenderWithFaceAlignmentTask(this, this.input);\n  };\n  PredictSingleFaceExpressionsWithFaceAlignmentTask.prototype.withFaceDescriptor = function () {\n    return new ComputeSingleFaceDescriptorTask(this, this.input);\n  };\n  return PredictSingleFaceExpressionsWithFaceAlignmentTask;\n}(PredictSingleFaceExpressionsTask);\nexport { PredictSingleFaceExpressionsWithFaceAlignmentTask };","map":{"version":3,"mappings":"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","names":["extendWithFaceExpressions","ComposableTask","ComputeAllFaceDescriptorsTask","ComputeSingleFaceDescriptorTask","extractAllFacesAndComputeResults","extractSingleFaceAndComputeResult","nets","PredictAllAgeAndGenderTask","PredictAllAgeAndGenderWithFaceAlignmentTask","PredictSingleAgeAndGenderTask","PredictSingleAgeAndGenderWithFaceAlignmentTask","__extends","parentTask","input","extractedFaces","_super","_this","PredictAllFaceExpressionsTask","parentResults","_a","faces","Promise","all","map","faceExpressionNet","predictExpressions","face","faceExpressionsByFace","parentResult","i","PredictFaceExpressionsTaskBase","PredictSingleFaceExpressionsTask","faceExpressions","PredictAllFaceExpressionsWithFaceAlignmentTask","PredictSingleFaceExpressionsWithFaceAlignmentTask"],"sourceRoot":"","sources":["../../../src/globalApi/PredictFaceExpressionsTask.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}