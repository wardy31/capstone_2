[{"/home/wardy/Desktop/capstone/fe/src/main.js":"1","/home/wardy/Desktop/capstone/fe/src/plugins/vuetify.js":"2","/home/wardy/Desktop/capstone/fe/src/App.vue":"3","/home/wardy/Desktop/capstone/fe/src/router/index.js":"4","/home/wardy/Desktop/capstone/fe/src/store/index.js":"5","/home/wardy/Desktop/capstone/fe/src/views/UserRegister.vue":"6","/home/wardy/Desktop/capstone/fe/src/views/ClinicRegister.vue":"7","/home/wardy/Desktop/capstone/fe/src/views/admin/HomeView.vue":"8","/home/wardy/Desktop/capstone/fe/src/views/admin/LocationView.vue":"9","/home/wardy/Desktop/capstone/fe/src/views/admin/StudentsView.vue":"10","/home/wardy/Desktop/capstone/fe/src/views/admin/PersonnelsView.vue":"11","/home/wardy/Desktop/capstone/fe/src/views/admin/LogRecordView.vue":"12","/home/wardy/Desktop/capstone/fe/src/views/admin/UsersView.vue":"13","/home/wardy/Desktop/capstone/fe/src/views/admin/ContactTraceView.vue":"14","/home/wardy/Desktop/capstone/fe/src/views/admin/ContactTraceNew.vue":"15","/home/wardy/Desktop/capstone/fe/src/views/admin/NotificationsView.vue":"16","/home/wardy/Desktop/capstone/fe/src/views/admin/DiseaseView.vue":"17","/home/wardy/Desktop/capstone/fe/src/views/admin/ReportGeneration.vue":"18","/home/wardy/Desktop/capstone/fe/src/views/admin/StationView.vue":"19","/home/wardy/Desktop/capstone/fe/src/views/admin/FollowUps.vue":"20","/home/wardy/Desktop/capstone/fe/src/views/admin/ViewTraceContact.vue":"21","/home/wardy/Desktop/capstone/fe/src/views/admin/ManageContact/ContactUser.vue":"22","/home/wardy/Desktop/capstone/fe/src/views/admin/DeclarationForm.vue":"23","/home/wardy/Desktop/capstone/fe/src/views/admin/ManageContact/IndexView.vue":"24","/home/wardy/Desktop/capstone/fe/src/views/admin/AdminView.vue":"25","/home/wardy/Desktop/capstone/fe/src/views/admin/ManageContact/UserTraceContact.vue":"26","/home/wardy/Desktop/capstone/fe/src/views/admin/ManageContact/TraceContact.vue":"27","/home/wardy/Desktop/capstone/fe/src/views/admin/ManageForm.vue":"28","/home/wardy/Desktop/capstone/fe/src/store/modules/face.js":"29","/home/wardy/Desktop/capstone/fe/src/store/modules/user.js":"30","/home/wardy/Desktop/capstone/fe/src/store/modules/declaration.js":"31","/home/wardy/Desktop/capstone/fe/src/store/modules/followUps.js":"32","/home/wardy/Desktop/capstone/fe/src/store/modules/clinic.js":"33","/home/wardy/Desktop/capstone/fe/src/store/modules/stations.js":"34","/home/wardy/Desktop/capstone/fe/src/store/modules/register.js":"35","/home/wardy/Desktop/capstone/fe/src/store/modules/records.js":"36","/home/wardy/Desktop/capstone/fe/src/store/modules/traceContact.js":"37","/home/wardy/Desktop/capstone/fe/src/store/modules/staffs.js":"38","/home/wardy/Desktop/capstone/fe/src/store/modules/closeContact.js":"39","/home/wardy/Desktop/capstone/fe/src/store/modules/location.js":"40","/home/wardy/Desktop/capstone/fe/src/store/modules/match.js":"41","/home/wardy/Desktop/capstone/fe/src/store/modules/disease.js":"42","/home/wardy/Desktop/capstone/fe/src/store/modules/questions.js":"43","/home/wardy/Desktop/capstone/fe/src/store/modules/generates.js":"44","/home/wardy/Desktop/capstone/fe/src/store/modules/notifications.js":"45","/home/wardy/Desktop/capstone/fe/src/views/error/NotFound.vue":"46","/home/wardy/Desktop/capstone/fe/src/views/Login/LoginClinic.vue":"47","/home/wardy/Desktop/capstone/fe/src/views/Login/LoginUser.vue":"48","/home/wardy/Desktop/capstone/fe/src/views/user/UserView.vue":"49","/home/wardy/Desktop/capstone/fe/src/views/user/HomeView.vue":"50","/home/wardy/Desktop/capstone/fe/src/views/user/pages/PersonalProfile.vue":"51","/home/wardy/Desktop/capstone/fe/src/views/user/pages/FollowUps.vue":"52","/home/wardy/Desktop/capstone/fe/src/views/user/pages/LocationRecord.vue":"53","/home/wardy/Desktop/capstone/fe/src/views/admin/Profile/EditProfile.vue":"54","/home/wardy/Desktop/capstone/fe/src/views/admin/Profile/CheckProfile.vue":"55","/home/wardy/Desktop/capstone/fe/src/views/user/pages/profile/EditProfile.vue":"56","/home/wardy/Desktop/capstone/fe/src/views/user/pages/HealthDeclarationForm.vue":"57","/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Staff/UpdateRoleDialog.vue":"58","/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Staff/AddDialog.vue":"59","/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Disease/UpdateDialog.vue":"60","/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Disease/DiseaseDialog.vue":"61","/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Station/AddDialog.vue":"62","/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Form/UpdateDialog.vue":"63","/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Form/AddDialog.vue":"64","/home/wardy/Desktop/capstone/fe/src/config/axios.js":"65","/home/wardy/Desktop/capstone/fe/src/config/webSocket.js":"66","/home/wardy/Desktop/capstone/fe/src/views/user/dialogs/followUpDialog.vue":"67","/home/wardy/Desktop/capstone/fe/src/components/ClinicAppBar.vue":"68","/home/wardy/Desktop/capstone/fe/src/components/SideBar.vue":"69","/home/wardy/Desktop/capstone/fe/src/components/LoadingView.vue":"70","/home/wardy/Desktop/capstone/fe/src/views/user/BottomNavigation.vue":"71","/home/wardy/Desktop/capstone/fe/src/components/AppBar.vue":"72","/home/wardy/Desktop/capstone/fe/src/views/user/SideBar.vue":"73","/home/wardy/Desktop/capstone/fe/src/views/user/pages/profile/EditProfileDialog.vue":"74","/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Profile/EditProfile.vue":"75"},{"size":481,"mtime":1683200136918,"results":"76","hashOfConfig":"77"},{"size":493,"mtime":1669237978000,"results":"78","hashOfConfig":"77"},{"size":640,"mtime":1683558188272,"results":"79","hashOfConfig":"77"},{"size":6335,"mtime":1682862154621,"results":"80","hashOfConfig":"77"},{"size":1087,"mtime":1682281238000,"results":"81","hashOfConfig":"77"},{"size":10605,"mtime":1683128967818,"results":"82","hashOfConfig":"77"},{"size":4876,"mtime":1670013168000,"results":"83","hashOfConfig":"77"},{"size":7919,"mtime":1681175706000,"results":"84","hashOfConfig":"77"},{"size":1537,"mtime":1655032978000,"results":"85","hashOfConfig":"77"},{"size":2082,"mtime":1655079156000,"results":"86","hashOfConfig":"77"},{"size":5780,"mtime":1680346314000,"results":"87","hashOfConfig":"77"},{"size":3901,"mtime":1682350926000,"results":"88","hashOfConfig":"77"},{"size":2242,"mtime":1655120266000,"results":"89","hashOfConfig":"77"},{"size":3644,"mtime":1670218784000,"results":"90","hashOfConfig":"77"},{"size":3870,"mtime":1669330858000,"results":"91","hashOfConfig":"77"},{"size":1454,"mtime":1682358234000,"results":"92","hashOfConfig":"77"},{"size":8121,"mtime":1680972442000,"results":"93","hashOfConfig":"77"},{"size":23635,"mtime":1681378260000,"results":"94","hashOfConfig":"77"},{"size":5132,"mtime":1680344436000,"results":"95","hashOfConfig":"77"},{"size":4129,"mtime":1680352416000,"results":"96","hashOfConfig":"77"},{"size":9671,"mtime":1682504990000,"results":"97","hashOfConfig":"77"},{"size":10678,"mtime":1682505034000,"results":"98","hashOfConfig":"77"},{"size":6523,"mtime":1683160201495,"results":"99","hashOfConfig":"77"},{"size":87,"mtime":1670153566000,"results":"100","hashOfConfig":"77"},{"size":1050,"mtime":1683198304719,"results":"101","hashOfConfig":"77"},{"size":4624,"mtime":1683188746362,"results":"102","hashOfConfig":"77"},{"size":9922,"mtime":1683217188230,"results":"103","hashOfConfig":"77"},{"size":8890,"mtime":1683160243719,"results":"104","hashOfConfig":"77"},{"size":2472,"mtime":1655157566000,"results":"105","hashOfConfig":"77"},{"size":6808,"mtime":1683192866417,"results":"106","hashOfConfig":"77"},{"size":3954,"mtime":1683205321705,"results":"107","hashOfConfig":"77"},{"size":2666,"mtime":1683206683147,"results":"108","hashOfConfig":"77"},{"size":3498,"mtime":1682841223759,"results":"109","hashOfConfig":"77"},{"size":6340,"mtime":1680344742000,"results":"110","hashOfConfig":"77"},{"size":3379,"mtime":1683636723222,"results":"111","hashOfConfig":"77"},{"size":2050,"mtime":1680339488000,"results":"112","hashOfConfig":"77"},{"size":3598,"mtime":1683216952462,"results":"113","hashOfConfig":"77"},{"size":6485,"mtime":1680874214000,"results":"114","hashOfConfig":"77"},{"size":7146,"mtime":1682271982000,"results":"115","hashOfConfig":"77"},{"size":839,"mtime":1670666710000,"results":"116","hashOfConfig":"77"},{"size":2153,"mtime":1672394170000,"results":"117","hashOfConfig":"77"},{"size":5332,"mtime":1680973714000,"results":"118","hashOfConfig":"77"},{"size":3054,"mtime":1681052430000,"results":"119","hashOfConfig":"77"},{"size":5114,"mtime":1681198226000,"results":"120","hashOfConfig":"77"},{"size":1608,"mtime":1683204517240,"results":"121","hashOfConfig":"77"},{"size":319,"mtime":1683182474470,"results":"122","hashOfConfig":"77"},{"size":3185,"mtime":1683015869637,"results":"123","hashOfConfig":"77"},{"size":2661,"mtime":1683014113875,"results":"124","hashOfConfig":"77"},{"size":1206,"mtime":1682961236793,"results":"125","hashOfConfig":"77"},{"size":6600,"mtime":1683220558379,"results":"126","hashOfConfig":"77"},{"size":41,"mtime":1669513306000,"results":"127","hashOfConfig":"77"},{"size":0,"mtime":1669852310000,"results":"128","hashOfConfig":"77"},{"size":1760,"mtime":1683120757522,"results":"129","hashOfConfig":"77"},{"size":5315,"mtime":1682505750000,"results":"130","hashOfConfig":"77"},{"size":8298,"mtime":1683193306242,"results":"131","hashOfConfig":"77"},{"size":6270,"mtime":1683128923914,"results":"132","hashOfConfig":"77"},{"size":8297,"mtime":1683205068395,"results":"133","hashOfConfig":"77"},{"size":1545,"mtime":1670780160000,"results":"134","hashOfConfig":"77"},{"size":3629,"mtime":1680873798000,"results":"135","hashOfConfig":"77"},{"size":2155,"mtime":1680971850000,"results":"136","hashOfConfig":"77"},{"size":1963,"mtime":1680970842000,"results":"137","hashOfConfig":"77"},{"size":2793,"mtime":1680472724000,"results":"138","hashOfConfig":"77"},{"size":3947,"mtime":1681075282000,"results":"139","hashOfConfig":"77"},{"size":3206,"mtime":1681002978000,"results":"140","hashOfConfig":"77"},{"size":597,"mtime":1683217302860,"results":"141","hashOfConfig":"77"},{"size":351,"mtime":1683635541439,"results":"142","hashOfConfig":"77"},{"size":2767,"mtime":1683217378552,"results":"143","hashOfConfig":"77"},{"size":3706,"mtime":1683129141958,"results":"144","hashOfConfig":"77"},{"size":3605,"mtime":1682505436000,"results":"145","hashOfConfig":"77"},{"size":426,"mtime":1682957692120,"results":"146","hashOfConfig":"77"},{"size":645,"mtime":1682959638552,"results":"147","hashOfConfig":"77"},{"size":3931,"mtime":1683129145888,"results":"148","hashOfConfig":"77"},{"size":1475,"mtime":1683011411037,"results":"149","hashOfConfig":"77"},{"size":3640,"mtime":1683120344342,"results":"150","hashOfConfig":"77"},{"size":5218,"mtime":1680875126000,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xk7ana",{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341"},"/home/wardy/Desktop/capstone/fe/src/main.js",[],"/home/wardy/Desktop/capstone/fe/src/plugins/vuetify.js",[],"/home/wardy/Desktop/capstone/fe/src/App.vue",["342","343","344","345"],"<template>\n  <router-view />\n</template>\n\n<script>\nimport { socket } from \"@/config/webSocket\";\nexport default {\n  mounted() {\n    socket.on(\"clinic-notify\", (arg) => {\n      console.log(\"onFunction\", arg);\n      this.$store.dispatch(\"notifications/getNotifications\");\n    });\n\n    socket.on(\"connect\", () => {\n      console.log(\"isConnected\", socket.connected); // x8WIv7-mJelg7on_ALbx\n    });\n\n    console.log(process.env.VUE_APP_API)\n    console.log('HOST',process.env.NODE_ENV)\n  },\n};\n</script>\n<style>\n@import url(\"https://fonts.googleapis.com/css2?family=Poppins&display=swap\");\n\n* {\n  font-family: \"Poppins\", sans-serif;\n}\n</style>\n","/home/wardy/Desktop/capstone/fe/src/router/index.js",[],"/home/wardy/Desktop/capstone/fe/src/store/index.js",[],"/home/wardy/Desktop/capstone/fe/src/views/UserRegister.vue",["346","347","348","349","350"],"<template>\n  <v-app>\n    <v-main class=\"primary\">\n      <v-container v-if=\"faceLoading\">\n        <v-card width=\"800\" class=\"rounded-lg elevation-6 accent mx-auto my-auto\">\n          <v-card-title class=\"primary--text\">\n            <h3>Create Account</h3>\n          </v-card-title>\n\n          <h5 class=\"mx-4 mb-2 secondary--text\">* User Registration.</h5>\n          <div class=\"text-center mt-16  pb-16\">\n            <h2 class=\"mt-16 mb-8\">Loading Please Wait ....</h2>\n            <v-progress-circular :size=\"$vuetify.breakpoint.mobile ? 60 : 70\" :width=\"10\" color=\"primary\"\n              indeterminate></v-progress-circular>\n          </div>\n        </v-card>\n      </v-container>\n\n      <v-container v-else>\n        <v-card class=\"rounded-lg elevation-6 accent mx-auto my-auto\" width=\"800\">\n          <v-card-title class=\"primary--text\">\n            <h3>Create Account</h3>\n          </v-card-title>\n          <h5 class=\"mx-4 mb-2 secondary--text\">* User Registration.</h5>\n          <v-divider></v-divider>\n          <div class=\"mx-4 mx-lg-12 mt-6\">\n            <h4 class=\"mb-2\">Personal Information</h4>\n\n            <v-row dense>\n              <v-col cols=\"12\" lg=\"4\"><v-text-field label=\"First Name\" hide-details=\"auto\" filled dense outlined\n                  :error-messages=\"message.first_name\" v-model=\"clinic.first_name\"></v-text-field></v-col>\n              <v-col cols=\"12\" lg=\"4\"><v-text-field label=\"Middle Name\" hide-details=\"auto\" filled dense outlined\n                  :error-messages=\"message.middle_name\" v-model=\"clinic.middle_name\"></v-text-field></v-col>\n              <v-col cols=\"12\" lg=\"4\"><v-text-field label=\"Last Name\" hide-details=\"auto\" filled dense outlined\n                  :error-messages=\"message.last_name\" v-model=\"clinic.last_name\"></v-text-field></v-col>\n            </v-row>\n            <v-row dense>\n              <v-col cols=\"12\" lg=\"6\"><v-text-field label=\"Department\" hide-details=\"auto\"\n                  :error-messages=\"message.department\" v-model=\"clinic.department\" filled dense\n                  outlined></v-text-field></v-col>\n              <v-col cols=\"12\" lg=\"3\"> <v-select class=\"text-capitalize\"\n                  :items=\"[{ name: `student`, id: 1 }, { name: `employee`, id: 2 }, { name: `visitor`, id: 3 }]\"\n                  item-text=\"name\" item-value=\"id\" hide-details=\"auto\" :error-messages=\"message.classification_id\"\n                  v-model=\"clinic.classification_id\" outlined dense filled label=\"Classification\" />\n              </v-col>\n              <v-col cols=\"12\" lg=\"3\"> <v-select :items=\"['Male', 'Female']\" v-model=\"clinic.gender\" outlined dense filled\n                  hide-details=\"auto\" :error-messages=\"message.gender\" label=\"Gender\" />\n              </v-col>\n            </v-row>\n\n            <v-row dense>\n              <v-col cols=\"12\" lg=\"5\"><v-text-field label=\"Address\" filled dense outlined hide-details=\"auto\"\n                  :error-messages=\"message.address\" v-model=\"clinic.address\"></v-text-field></v-col>\n              <v-col cols=\"12\" lg=\"7\"> <v-select :items=\"['Partially Vaccinated', 'Fully Vaccinated', 'Booster']\"\n                  v-model=\"clinic.vaccination_status\" hide-details=\"auto\" :error-messages=\"message.vaccination_status\"\n                  outlined dense filled label=\"Vaccination Status\" />\n              </v-col>\n            </v-row>\n            <v-row dense>\n              <v-col cols=\"12\" lg=\"6\"><v-text-field type=\"number\" label=\"Contact Number\" filled dense outlined\n                  hide-details=\"auto\" :error-messages=\"message.contact_number\"\n                  v-model=\"clinic.contact_number\"></v-text-field></v-col>\n              <v-col cols=\"12\" lg=\"6\"><v-text-field label=\"Email\" filled dense outlined v-model=\"clinic.email\"\n                  hide-details=\"auto\" :error-messages=\"message.email\"></v-text-field></v-col>\n            </v-row>\n\n            <h4 class=\"mt-6\">Upload Face Image</h4>\n            <h5 class=\"secondary--text mb-2\">*This is for face recognition</h5>\n            <v-row dense>\n              <v-col> <v-file-input accept=\"image/*\" :loading=\"loading_1\" @change=\"handleImage\" v-model=\"clinic.upload_1\"\n                  :prepend-icon=\"false\" prepend-inner-icon=\"image\" outlined dense filled placeholder=\"Upload 1\"\n                  hide-details=\"auto\" :error-messages=\"message.upload_1\"></v-file-input>\n              </v-col>\n              <v-col>\n                <v-file-input accept=\"image/*\" :loading=\"loading_2\" :prepend-icon=\"false\" @change=\"handleImage2\"\n                  prepend-inner-icon=\"image\" v-model=\"clinic.upload_2\" outlined dense filled placeholder=\"Upload 2\"\n                  hide-details=\"auto\" :error-messages=\"message.upload_2\"></v-file-input>\n              </v-col>\n            </v-row>\n\n            <h4 class=\"mt-6 mb-2\">Security Information</h4>\n            <v-row dense>\n              <v-col cols=\"12\" lg=\"6\"><v-text-field label=\"Username\" filled dense outlined prepend-inner-icon=\"person\"\n                  :error-messages=\"message.username\" hide-details=\"auto\" v-model=\"clinic.username\"></v-text-field></v-col>\n            </v-row>\n\n            <v-row dense>\n              <v-col cols=\"12\" lg=\"6\"><v-text-field label=\"Password\" filled dense outlined type=\"password\"\n                  prepend-inner-icon=\"vpn_key\" hide-details=\"auto\" :error-messages=\"message.password\"\n                  v-model=\"clinic.password\"></v-text-field></v-col>\n              <v-col cols=\"12\" lg=\"6\"><v-text-field label=\"Confirm Password\" filled dense outlined type=\"password\"\n                  prepend-inner-icon=\"vpn_key\" hide-details=\"auto\" :error=\"message.password\"\n                  v-model=\"clinic.password_confirmation\"></v-text-field></v-col>\n            </v-row>\n            <v-snackbar color=\"error\" v-model=\"snackBar1\" bottom right>\n              <v-icon class=\"mr-2\">error</v-icon> No Face was Detected\n            </v-snackbar>\n            <v-snackbar color=\"error\" v-model=\"snackBar2\" bottom right>\n              <v-icon class=\"mr-2\">error</v-icon> No Face was Detected\n            </v-snackbar>\n\n            <div class=\"mt-6 pb-2\" v-if=\"$vuetify.breakpoint.mobile\">\n              <v-btn color=\"primary\" @click=\"submit\" :loading=\"loading\" :block=\"$vuetify.breakpoint.mobile\"\n                class=\"pa-5 px-4 mr-8 mb-1 text-capitalize\">Create\n                Account</v-btn>\n\n              <v-btn text plain to=\"/\" :block=\"$vuetify.breakpoint.mobile\" class=\"text-capitalize\">Cancel</v-btn>\n            </div>\n            <v-card-actions class=\"mt-6\" v-else>\n              <v-spacer></v-spacer>\n              <v-btn text plain to=\"/\" :block=\"$vuetify.breakpoint.mobile\" class=\"text-capitalize\">Cancel</v-btn>\n\n              <v-btn color=\"primary\" @click=\"submit\" :loading=\"loading\" :block=\"$vuetify.breakpoint.mobile\"\n                class=\"pa-5 px-4 text-capitalize\">Create\n                Account</v-btn>\n\n            </v-card-actions>\n          </div>\n        </v-card>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n  \n<script>\nimport { mapState } from 'vuex';\nimport * as faceapi from 'face-api.js'\n\nexport default {\n  mounted() {\n    const run = async () => {\n      await faceapi.nets.ssdMobilenetv1.loadFromUri('/weights')\n      await faceapi.nets.faceRecognitionNet.loadFromUri('/weights')\n      await faceapi.nets.tinyFaceDetector.loadFromUri('/weights')\n      console.log(faceapi.nets);\n      this.faceLoading = false\n    }\n\n    run()\n  },\n  computed: {\n    ...mapState({\n      loading: state => state.register.submit.loading,\n      error: state => state.register.submit.error,\n      message: state => state.register.submit.message\n    })\n  },\n  data() {\n    return {\n      faceLoading: true,\n      snackBar1: false,\n      snackBar2: false,\n      loading_1: false,\n      loading_2: false,\n      error_1: false,\n      error_2: false,\n      clinic: {\n        first_name: \"\",\n        middle_name: \"\",\n        last_name: \"\",\n        address: \"\",\n        deparment: \"\",\n        gender: \"\",\n        contact_number: \"\",\n        username: \"\",\n        password: \"\",\n        password_confirmation: \"\",\n        email: \"\",\n        vaccination_status: \"\",\n        classification_id: \"\",\n        upload_1: null,\n        upload_2: null\n      }\n    }\n  },\n  methods: {\n    async submit() {\n      const fd = new FormData()\n\n      fd.append('first_name', this.clinic.first_name)\n      fd.append('middle_name', this.clinic.middle_name)\n      fd.append('last_name', this.clinic.last_name)\n      fd.append('vaccination_status', this.clinic.vaccination_status)\n      fd.append('gender', this.clinic.gender)\n      fd.append('address', this.clinic.address)\n      fd.append('email', this.clinic.email)\n      fd.append('department', this.clinic.department)\n      fd.append('contact_number', this.clinic.contact_number)\n      fd.append('classification_id', this.clinic.classification_id)\n      fd.append('username', this.clinic.username)\n      fd.append('password', this.clinic.password)\n      fd.append('password_confirmation', this.clinic.password_confirmation)\n      fd.append('upload_1', this.clinic.upload_1)\n      fd.append('upload_2', this.clinic.upload_2)\n\n      const res = await this.$store.dispatch('register/createUser', fd)\n\n      if (res) {\n        this.clinic.first_name = \"\"\n        this.clinic.middle_name = \"\"\n        this.clinic.last_name = \"\"\n        this.clinic.vaccination_status = \"\"\n        this.clinic.gender = \"\"\n        this.clinic.address = \"\"\n        this.clinic.email = \"\"\n        this.clinic.department = \"\"\n        this.clinic.contact_number = \"\"\n        this.clinic.classification_id = \"\"\n        this.clinic.username = \"\"\n        this.clinic.password = \"\"\n        this.clinic.password_confirmation = \"\"\n        this.clinic.upload_1 = \"\"\n        this.clinic.upload_2 = \"\"\n\n        this.$router.push('/')\n      }\n\n    },\n    async handleImage(e) {\n      console.log('e', e)\n\n      this.loading_1 = true\n      const image = await faceapi.bufferToImage(e)\n      const result = await faceapi.detectSingleFace(image)\n\n      if (!result) {\n        this.clinic.upload_1 = \"\"\n        this.snackBar1 = true\n        this.loading_1 = false\n      }\n\n      this.loading_1 = false\n      console.log('result', result);\n    },\n    async handleImage2(e) {\n      console.log('e', e)\n\n      this.loading_2 = true\n      const image = await faceapi.bufferToImage(e)\n      const result = await faceapi.detectSingleFace(image)\n\n      if (!result) {\n        this.clinic.upload_2 = \"\"\n        this.snackBar2 = true\n        this.loading_2 = false\n      }\n\n      this.loading_2 = false\n      console.log('result', result);\n    }\n\n  }\n};\n</script>\n  ","/home/wardy/Desktop/capstone/fe/src/views/ClinicRegister.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/HomeView.vue",["351"],"<template>\n  <v-main class=\"accent\">\n    <v-container fluid>\n      <div class=\"mx-16\">\n        <v-container>\n          <div>\n            <div class=\"d-flex align-center\">\n              <div>\n                <h2 class=\"secondary--text\">Welcome,</h2>\n                <h2 class=\"primary--text text-capitalize\">\n                  {{\n                    `${user.first_name} ${user.middle_name} ${user.last_name}`\n                  }}\n                </h2>\n                <v-chip\n                  label\n                  color=\"primary\"\n                  class=\"font-weight-bold mt-2 text-capitalize\"\n                  ><div>{{ user.role.name }}</div></v-chip\n                >\n              </div>\n              <img :src=\"require('@/assets/undraw/dashboard.png')\" />\n            </div>\n          </div>\n          <v-row justify=\"start\" align=\"stretch\" class=\"mt-8\">\n            <v-col cols=\"4\">\n              <v-card class=\"rounded-lg\">\n                <v-card-title class=\"font-weight-bold primary--text\"\n                  >Clinic Staff</v-card-title\n                >\n                <v-card-text>\n                  <v-row>\n                    <v-col>\n                      <div class=\"d-flex align-center justify-center\">\n                        <h1 class=\"primary--text mr-4\">{{ count.clinic }}</h1>\n                        <v-icon size=\"32\">person</v-icon>\n                      </div>\n                    </v-col>\n                  </v-row>\n                </v-card-text>\n              </v-card>\n            </v-col>\n            <v-col cols=\"4\">\n              <v-card class=\"rounded-lg\">\n                <v-card-title class=\"font-weight-bold primary--text\"\n                  >Stations</v-card-title\n                >\n                <v-card-text>\n                  <v-row>\n                    <v-col>\n                      <div class=\"d-flex justify-center align-center\">\n                        <h1 class=\"primary--text mr-4\">\n                          {{ count.station }}\n                        </h1>\n                        <v-icon size=\"32\">person_pin</v-icon>\n                      </div>\n                    </v-col>\n                  </v-row>\n                </v-card-text>\n              </v-card>\n            </v-col>\n            <v-col cols=\"4\">\n              <v-card class=\"rounded-lg\">\n                <v-card-title class=\"font-weight-bold primary--text\"\n                  >Active Patients</v-card-title\n                >\n                <v-card-text>\n                  <v-row>\n                    <v-col>\n                      <div class=\"d-flex align-center justify-center\">\n                        <h1 class=\"primary--text mr-4\">\n                          {{ count.active_patient }}\n                        </h1>\n                        <v-icon size=\"32\">fact_check</v-icon>\n                      </div>\n                    </v-col>\n                  </v-row>\n                </v-card-text>\n              </v-card>\n            </v-col>\n          </v-row>\n\n          <v-row class=\"mt-8\">\n            <v-col>\n              <div class=\"mb-3\">\n                <h3 class=\"font-weight-bold\">\n                  Monthly Summary of Classified Contacts\n                </h3>\n              </div>\n              <v-simple-table ref=\"cont\" class=\"contents\">\n                <template v-slot:default>\n                  <thead>\n                    <tr>\n                      <th class=\"text-left\">Patient Name</th>\n                      <th class=\"text-center\">Number of Contacts</th>\n                      <th class=\"text-center\">Check Contacts</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr v-for=\"item in count.month_contacts\" :key=\"item.id\">\n                      <td\n                        class=\"text-capitalize font-weight-thin primary--text text-body1\"\n                      >\n                        {{\n                          `${item.user_account[\"first_name\"]} ${item.user_account[\"last_name\"]}`\n                        }}\n                      </td>\n                      <td class=\"text-center font-weight-bold\">\n                        {{ item.contacts.length }}\n                      </td>\n                      <td class=\"text-center font-weight-bold\">\n                        <v-btn\n                          color=\"primary\"\n                          icon\n                          @click=\"\n                            $router.push(\n                              `/admin/manage/viewtrace/${item.user_account.id}/${item.id}`\n                            )\n                          \"\n                          ><v-icon>groups</v-icon></v-btn\n                        >\n                      </td>\n                    </tr>\n                  </tbody>\n                </template>\n              </v-simple-table>\n            </v-col>\n            <v-col>\n              <div class=\"mb-3\">\n                <h3 class=\"font-weight-bold\">Daily User's Follow Up</h3>\n              </div>\n              <v-simple-table ref=\"cont\" class=\"contents\">\n                <template v-slot:default>\n                  <thead>\n                    <tr>\n                      <th class=\"text-left\">Name</th>\n                      <th class=\"text-left\">Response</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr v-for=\"item in count.followUp\" :key=\"item.id\">\n                      <td\n                        class=\"text-capitalize font-weight-bold primary--text\"\n                      >\n                        {{ item.users.first_name + \" \" + item.users.last_name }}\n                      </td>\n                      <td>{{ item.follow_up_status }}</td>\n                    </tr>\n                  </tbody>\n                </template>\n              </v-simple-table>\n            </v-col>\n          </v-row>\n        </v-container>\n      </div>\n    </v-container>\n  </v-main>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport jspdf from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nexport default {\n  name: \"HomeView\",\n  mounted() {\n    this.$store.dispatch(\"staff/getCounts\");\n    this.$store.dispatch(\"staff/getApproval\");\n  },\n  computed: {\n    ...mapState({\n      list: (state) => state.staff.all.data,\n      count: (state) => state.staff.counts.data,\n      user: (state) => state.clinic.credentials.data,\n    }),\n  },\n  data() {\n    return {\n      desserts: [\n        {\n          name: \"Frozen Yogurt\",\n          calories: 159,\n        },\n        {\n          name: \"Ice cream sandwich\",\n          calories: 237,\n        },\n        {\n          name: \"Eclair\",\n          calories: 262,\n        },\n        {\n          name: \"Cupcake\",\n          calories: 305,\n        },\n        {\n          name: \"Gingerbread\",\n          calories: 356,\n        },\n        {\n          name: \"Jelly bean\",\n          calories: 375,\n        },\n        {\n          name: \"Lollipop\",\n          calories: 392,\n        },\n        {\n          name: \"Honeycomb\",\n          calories: 408,\n        },\n        {\n          name: \"Donut\",\n          calories: 452,\n        },\n        {\n          name: \"KitKat\",\n          calories: 518,\n        },\n      ],\n    };\n  },\n  methods: {\n    approve(data) {\n      this.$store.dispatch(\"staff/approval\", { data: data, status: true });\n    },\n    disapprove(data) {\n      this.$store.dispatch(\"staff/approval\", { data: data, status: false });\n    },\n    handleButton() {\n      const pdf = new jspdf();\n      const msg = \"hahah\";\n      console.log(pdf.getFontList());\n      pdf.setFontSize(18).text(`${msg}`, 4, 8);\n      autoTable(pdf, {\n        headStyles: { fillColor: \"red\" },\n        columns: [\n          { header: \"Name\", dataKey: \"name\" },\n          { header: \"Calories (kg)\", dataKey: \"calories\" },\n        ],\n        body: this.desserts,\n      });\n      pdf.save(\"generate.pdf\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.bg {\n  background-color: #f8f0f0;\n}\n</style>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/LocationView.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/StudentsView.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/PersonnelsView.vue",["352","353"],"<template>\n  <v-main class=\"accent\">\n    <v-container fluid>\n      <addDialog />\n      <div v-if=\"roleData\">\n        <UpdateRoleDialogVue :role=\"roleData\" @reset=\"reset\" />\n      </div>\n      <div class=\"ma-lg-12\">\n        <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">Clinic Staffs</h2>\n        <h5 class=\"secondary--text\">List of all Clinics</h5>\n\n        <div class=\"mt-12 pt-6 d-flex justify-space-between\">\n          <div class=\"d-flex adj\">\n            <v-text-field\n              v-model=\"inputSearch\"\n              class=\"mr-2\"\n              label=\"Search here\"\n              solo\n              dense\n            ></v-text-field>\n            <v-btn color=\"primary\" @click=\"handleSearch\"\n              ><v-icon>search</v-icon></v-btn\n            >\n          </div>\n\n          <v-btn\n            @click=\"handleDialog\"\n            color=\"primary\"\n            class=\"px-8 py-5 font-weight-bold\"\n            ><v-icon left>add</v-icon> Staff</v-btn\n          >\n        </div>\n\n        <v-simple-table class=\"rounded-lg elevation-6\">\n          <thead>\n            <tr class=\"text-center\">\n              <th class=\"text-left black--text text-center\">Name</th>\n              <th class=\"text-left black--text text-center\">Username</th>\n              <th class=\"text-left black--text text-center\">Role</th>\n              <th class=\"text-left black--text text-center\">Actions</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr\n              v-for=\"clinic in user\"\n              :key=\"clinic.id\"\n              class=\"text-center text-capitalize\"\n            >\n              <td>\n                {{\n                  `${clinic.first_name} ${clinic.middle_name} ${clinic.last_name}`\n                }}\n              </td>\n              <td>{{ clinic.username }}</td>\n              <td>{{ clinic.role.name }}</td>\n              <td>\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      color=\"primary\"\n                      @click=\"handleRole(clinic)\"\n                      dark\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      icon\n                      ><v-icon>admin_panel_settings</v-icon></v-btn\n                    >\n                  </template>\n                  <span>Change Role</span>\n                </v-tooltip>\n\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      color=\"error\"\n                      dark\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      @click=\"openDeleteDialog(clinic)\"\n                      icon\n                      ><v-icon>delete_forever</v-icon></v-btn\n                    >\n                  </template>\n                  <span>Delete</span>\n                </v-tooltip>\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table>\n        <v-pagination\n          v-model=\"page_number\"\n          :length=\"page\"\n          total-visible=\"6\"\n          class=\"float-left mt-4\"\n          @input=\"pageSwitch\"\n        ></v-pagination>\n      </div>\n      <!-- Personnel Delete Dialog -->\n      <v-dialog v-model=\"deleteDialog\" width=\"auto\">\n        <v-card>\n          <v-card-title class=\"primary accent--text\"\n            >Delete Personnel</v-card-title\n          >\n          <v-card-text>\n            <v-container>\n              <h2 class=\"font-weight-regular mt-4\">Are you sure to Delete?</h2>\n            </v-container>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"black\"\n              plain\n              text\n              class=\"text-capitalize\"\n              @click=\"closeDeleteDialog\"\n              >Cancel</v-btn\n            >\n            <v-btn\n              color=\"error\"\n              class=\"text-capitalize px-6\"\n              @click=\"deleteStaff\"\n              >Delete</v-btn\n            >\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-container>\n  </v-main>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport UpdateRoleDialogVue from \"./Dialog/Staff/UpdateRoleDialog.vue\";\nimport addDialog from \"./Dialog/Staff/AddDialog.vue\";\nexport default {\n  components: { addDialog, UpdateRoleDialogVue },\n  updated() {\n    if (!this.dialog) {\n      this.reset();\n    }\n  },\n  mounted() {\n    this.$store.dispatch(\"staff/staffs\");\n    this.reset();\n  },\n  computed: {\n    ...mapState({\n      user: (state) => state.staff.staffs.data,\n      page: (state) => state.staff.staffs.page,\n      dialog: (state) => state.staff.role.dialog,\n    }),\n  },\n  data() {\n    return {\n      roleData: null,\n      deleteDialog: false,\n      personnelData: null,\n      page_number: 1,\n      inputSearch: \"\",\n    };\n  },\n  methods: {\n    openDeleteDialog(data) {\n      this.deleteDialog = true;\n      this.personnelData = data;\n    },\n    closeDeleteDialog() {\n      this.deleteDialog = false;\n    },\n    deleteStaff() {\n      this.$store.dispatch(\"staff/delete\", this.personnelData);\n      this.deleteDialog = false;\n    },\n    handleDialog() {\n      console.log(\"wdd\");\n      this.$store.state.staff.submit.dialog = true;\n    },\n    handleRole(data) {\n      console.log(\"data\", data);\n      this.roleData = data;\n      this.$store.state.staff.role.dialog = true;\n    },\n    reset() {\n      this.roleData = null;\n    },\n    pageSwitch(data) {\n      this.page_number = data;\n      this.$store.dispatch(\"staff/staffs\", data);\n    },\n    handleSearch() {\n      this.$store.dispatch(\"staff/search\", this.inputSearch);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.bg {\n  background-color: #f8f0f0;\n}\n.adj {\n  width: 280px;\n}\n</style>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/LogRecordView.vue",["354"],"  <template>\n  <v-app>\n    <v-main class=\"accent\">\n      \n      <div class=\"ma-12\">\n      <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">Log Records</h2>\n      <h5 class=\"secondary--text\"> List of all student, personnels or visitors <br> location records</h5>\n\n      <div class=\"adj mt-8 d-flex\">\n          <v-select\n          outlined dense filled\n          label=\"Location\"\n          :items=\"stations\"\n          :item-value=\"(item) => item.id\"\n          :item-text=\"(item) => item.location.name\"\n          @change=\"handleValue\"\n          ></v-select>\n          <!-- <v-text-field  class=\"mr-2\" label=\"Search here\" solo  dense></v-text-field>\n          <v-btn color=\"primary\"><v-icon>search</v-icon></v-btn> -->\n      </div>\n        <v-simple-table class=\"rounded-lg elevation-6\">\n          <thead>\n            <tr class=\"text-center\">\n              <th class=\"text-left black--text\">\n                Name\n              </th>\n\n              <th class=\"text-left black--text text-center\">\n                Location Visited\n              </th>\n\n\n              <!-- <th class=\"text-left black--text text-center\">\n                Time Log\n              </th> -->\n\n              <!-- <th class=\"text-left black--text text-center\">\n                Time-In\n              </th> -->\n\n              <!-- <th class=\"text-left black--text text-center\">\n                Time-Out\n              </th> -->\n\n              <th class=\"text-left black--text text-center\">\n                Date\n              </th>\n\n              <!-- <th class=\"text-left black--text text-center\"> -->\n                <!-- Actions -->\n              <!-- </th>        -->\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr v-for=\"record in records\" :key=\"record.id\" class=\"text-center text-capitalize\">\n              <td class=\"text-left\">{{`${record.user_account.first_name} ${record.user_account.last_name}`}}</td>\n              <td>{{record.location.name}}</td>\n              <!-- <td>{{record.time_in}}</td> -->\n              <td>{{record.created_at | date}}</td>\n              <!-- <td>\n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on, attrs }\">\n                      <v-btn color=\"primary\" dark v-bind=\"attrs\" v-on=\"on\" icon><v-icon>visibility</v-icon></v-btn>\n                    </template>\n                      <span>View</span>\n                  </v-tooltip>\n\n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on, attrs }\">\n                      <v-btn color=\"error\" dark v-bind=\"attrs\" v-on=\"on\" icon><v-icon>delete_forever</v-icon></v-btn>\n                    </template>\n                      <span>Delete</span>\n                  </v-tooltip>\n              </td> -->\n            </tr>\n          </tbody>\n        </v-simple-table>\n            <v-pagination v-model=\"page_number\" :length=\"page\" total-visible=\"6\" class=\"float-left mt-4\" @input=\"pageSwitch\"></v-pagination>\n      </div>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport moment from 'moment'\nexport default {\n  data(){\n    return{\n      page_number:1\n    }\n  },\n  filters:{\n    date(val){\n      return moment(val).format(`MMM. DD, YYYY`).toString()\n    } \n  },\n  mounted(){\n    this.$store.dispatch('record/allRecords')\n    this.$store.dispatch('station/get')\n  },\n  computed:{\n    ...mapState({\n      records: state => state.record.clinic.data,\n      page: state => state.record.clinic.page,\n      \n      stations: state => state.station.all.data,\n    })\n  },\n  methods:{\n    pageSwitch(data){\n      this.page_number = data\n      this.$store.dispatch('record/allRecords',data)\n    },\n    handleValue(e){\n      this.page_number = 1\n      this.$store.dispatch('record/perStation',e)\n      console.log('val',e);\n    }\n  }\n}\n</script>\n\n\n<style scoped>\n.bg{\n  background-color: #f8f0f0;\n}\n.adj{\n  width: 280px;\n}\n\n</style>","/home/wardy/Desktop/capstone/fe/src/views/admin/UsersView.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/ContactTraceView.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/ContactTraceNew.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/NotificationsView.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/DiseaseView.vue",["355","356"],"<template>\n  <v-main class=\"accent\">\n    <v-container fluid>\n      <addDialog\n        :dialog=\"openDialog\"\n        @handleDialog=\"openDialog = false\"\n        @snackBar=\"snackbar.added = true\"\n      />\n      <updateDiseaseDialog\n        :updateData =\"updateData\"\n        :dialog=\"updateDialog\"\n        @handleDialog=\"updateDialog = false\"\n        @snackBar=\"snackbar.updatedName = true\"\n        @handleUpdateData=\"updateData = null\"\n      />\n      <div class=\"ma-lg-12\">\n        <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">\n          Diseases Classification\n        </h2>\n        <h5 class=\"secondary--text\">List of all Diseases</h5>\n\n        <div class=\"mt-12 pt-6 d-flex justify-space-between\">\n          <div class=\"d-flex adj\">\n            <v-text-field\n              class=\"mr-2\"\n              label=\"Search here\"\n              solo\n              dense\n              v-model=\"inputSearch\"\n            ></v-text-field>\n            <v-btn color=\"primary\" @click=\"handleSearch\"\n              ><v-icon>search</v-icon></v-btn\n            >\n          </div>\n\n          <v-btn\n            @click=\"handleDialog\"\n            color=\"primary\"\n            class=\"px-8 py-5 font-weight-bold\"\n            ><v-icon left>add</v-icon> Disease</v-btn\n          >\n        </div>\n\n        <v-simple-table class=\"rounded-lg elevation-6\">\n          <thead>\n            <tr class=\"text-center\">\n              <th class=\"text-left black--text text-center\">Name</th>\n              <th class=\"text-left black--text text-center\">Status</th>\n              <th class=\"text-left black--text text-center\">Actions</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr\n              v-for=\"disease in diseases\"\n              :key=\"disease.id\"\n              class=\"text-center text-capitalize\"\n            >\n              <td class=\"font-weight-bold\">\n                {{ `${disease.name}` }}\n              </td>\n              <td\n                v-if=\"disease.is_active\"\n                class=\"font-weight-bold success--text\"\n              >\n                Active\n              </td>\n              <td v-else class=\"font-weight-bold error--text\">Not Active</td>\n              <td>\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      class=\"text-capitalize\"\n                      color=\"primary\"\n                      @click=\"handleUpdateDialog(disease)\"\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      icon\n                      ><v-icon>edit</v-icon></v-btn\n                    >\n                  </template>\n                  <span>Update</span>\n                </v-tooltip>\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      class=\"text-capitalize\"\n                      :disabled=\"disease.is_active ? true : false\"\n                      color=\"primary\"\n                      @click=\"changeStatus(disease)\"\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      icon\n                      ><v-icon>cached</v-icon></v-btn\n                    >\n                  </template>\n                  <span>Change Status</span>\n                </v-tooltip>\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      class=\"text-capitalize\"\n                      color=\"error\"\n                      :disabled=\"disease.is_active ? true : false\"\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      @click=\"openDeleteDialog(disease)\"\n                      icon\n                      ><v-icon>delete_forever</v-icon></v-btn\n                    >\n                  </template>\n                  <span>Delete</span>\n                </v-tooltip>\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table>\n        <!-- <v-pagination v-model=\"page_number\" :length=\"page\" total-visible=\"6\" class=\"float-left mt-4\" @input=\"pageSwitch\"></v-pagination> -->\n      </div>\n      <!-- Station Delete Dialog -->\n      <v-dialog v-model=\"deleteDialog\" width=\"380\">\n        <v-card>\n          <v-card-title class=\"primary accent--text\"\n            >Delete Disease</v-card-title\n          >\n          <v-card-text>\n              <h3 class=\"font-weight-regular mt-6 mx-8\">\n                Deleting this data will also be deleted the record of this data. \n                are you sure to delete?\n              </h3>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"black\"\n              plain\n              text\n              class=\"text-capitalize\"\n              @click=\"closeDeleteDialog\"\n              >Cancel</v-btn\n            >\n            <v-btn\n              color=\"error\"\n              :loading=\"loadingDelete\"\n              class=\"text-capitalize px-6\"\n              @click=\"deleteStation\"\n              >Delete</v-btn\n            >\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <v-snackbar\n        v-model=\"snackbar.added\"\n        :timeout=\"2000\"\n        color=\"success\"\n        bottom\n        right\n      >\n        <v-icon>check</v-icon> Added Successfully.\n      </v-snackbar>\n\n      <v-snackbar\n        v-model=\"snackbar.delete\"\n        :timeout=\"2000\"\n        color=\"error\"\n        bottom\n        right\n      >\n        <v-icon>check</v-icon> Deleted Successfully.\n      </v-snackbar>\n\n      <v-snackbar\n        v-model=\"snackbar['updatedStatus']\"\n        :timeout=\"2000\"\n        color=\"success\"\n        bottom\n        right\n      >\n        <v-icon>check</v-icon> Active Status Updated Successfully.\n      </v-snackbar>\n\n      <v-snackbar\n        v-model=\"snackbar['updatedName']\"\n        :timeout=\"2000\"\n        color=\"success\"\n        bottom\n        right\n      >\n        <v-icon>check</v-icon> Active Status Updated Successfully.\n      </v-snackbar>\n    </v-container>\n  </v-main>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport addDialog from \"./Dialog/Disease/DiseaseDialog.vue\";\nimport updateDiseaseDialog from \"./Dialog/Disease/UpdateDialog.vue\";\nexport default {\n  components: { addDialog,updateDiseaseDialog },\n  mounted() {\n    this.$store.dispatch(\"disease/getData\");\n  },\n  computed: {\n    ...mapState({\n      diseases: (state) => state.disease.all.data,\n      loadingDelete: (state) => state.disease.delete.loading,\n      // page: (state) => state.station.all.page,\n    }),\n  },\n  data() {\n    return {\n      openDialog: false,\n      updateDialog:false,\n      deleteDialog: false,\n      stationData: null,\n      page_number: 1,\n      inputSearch: \"\",\n      updateData:null,\n      snackbar: {\n        delete: false,\n        added: false,\n        updatedName: false,\n        updatedStatus: false,\n      },\n    };\n  },\n  methods: {\n    openDeleteDialog(data) {\n      this.deleteDialog = true;\n      this.stationData = data;\n    },\n    closeDeleteDialog() {\n      this.deleteDialog = false;\n    },\n    async deleteStation() {\n      const res = await this.$store.dispatch(\n        \"disease/delete\",\n        this.stationData\n      );\n      if (res) {\n        this.deleteDialog = false;\n        this.snackbar[\"delete\"] = true;\n      }\n    },\n    handleUpdateDialog(data){\n        this.updateDialog = true\n        this.updateData = data\n        console.log(data);\n    },\n    handleDialog() {\n      this.openDialog = true;\n    },\n    async changeStatus(data) {\n      const res = await this.$store.dispatch(\"disease/status\", data);\n      if (res) {\n        this.snackbar[\"updatedStatus\"] = true;\n      }\n    },\n    pageSwitch(data) {\n      this.page_number = data;\n      this.$store.dispatch(\"station/get\", data);\n    },\n    async handleSearch() {\n      const res = await this.$store.dispatch(\n        \"disease/search\",\n        this.inputSearch\n      );\n\n      console.log(\"res\", res);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.bg {\n  background-color: #f8f0f0;\n}\n.adj {\n  width: 280px;\n}\n</style>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/ReportGeneration.vue",["357","358","359","360","361","362","363"],"<template>\n  <v-app>\n    <v-main class=\"accent\">\n      <div class=\"ma-16\">\n        <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">\n          Generate Reports\n        </h2>\n        <h5 class=\"secondary--text\">\n          generating reports to downloaded pdf file\n        </h5>\n\n        <v-list class=\"mt-12\" nav>\n          <v-list-group :value=\"false\" no-action>\n            <template v-slot:activator>\n              <v-list-item-title>\n                <div\n                  class=\"font-weight-bold d-flex align-center justify-space-between\"\n                >\n                  <h4>Patient with Close Contacts</h4>\n                </div></v-list-item-title\n              >\n            </template>\n            <v-card flat width=\"auto\">\n              <div class=\"py-4 pl-n6 d-flex justify-space-between\">\n                <div class=\"d-flex justify-start width-div\">\n                  <v-menu\n                    v-model=\"menu\"\n                    :close-on-content-click=\"false\"\n                    :nudge-right=\"40\"\n                    transition=\"scale-transition\"\n                    offset-y\n                    min-width=\"auto\"\n                  >\n                    <template v-slot:activator=\"{ on, attrs }\">\n                      <v-text-field\n                        outlined\n                        dense\n                        filled\n                        v-model=\"date\"\n                        label=\"Pick Date\"\n                        prepend-icon=\"mdi-calendar\"\n                        readonly\n                        v-bind=\"attrs\"\n                        v-on=\"on\"\n                        class=\"ml-n4 mr-3\"\n                      ></v-text-field>\n                    </template>\n                    <v-date-picker\n                      v-model=\"date\"\n                      @input=\"handleDate\"\n                    ></v-date-picker>\n                  </v-menu>\n\n                  <v-select\n                    v-model=\"disease_id\"\n                    :items=\"diseases\"\n                    item-text=\"name\"\n                    item-value=\"id\"\n                    dense\n                    label=\"Disease Type\"\n                    outlined\n                    filled\n                    @input=\"handleSelect\"\n                  ></v-select>\n                </div>\n                <v-btn\n                  color=\"primary\"\n                  outlined\n                  class=\"text-capitalize font-weight-bold pt-5 pb-5\"\n                  @click=\"downloadPatient\"\n                  ><v-icon class=\"pr-3\">cloud_download</v-icon> Download</v-btn\n                >\n              </div>\n            </v-card>\n            <v-simple-table class=\"rounded-lg mb-6\">\n              <thead>\n                <tr class=\"text-center\">\n                  <th class=\"text-left black--text\">Patient Name</th>\n\n                  <th class=\"text-left black--text\">Disease Type</th>\n\n                  <th class=\"text-center black--text\">No. of Contacts</th>\n\n                  <th class=\"text-left black--text text-center\">Created At</th>\n\n                  <th class=\"text-left black--text text-center\">\n                    Check Contacts\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                <tr\n                  class=\"text-center\"\n                  v-for=\"contact in contacts\"\n                  :key=\"contact.id\"\n                >\n                  <td\n                    class=\"text-capitalize text-left font-weight-bold primary--text\"\n                  >\n                    {{\n                      `${contact.user_account.first_name} ${contact.user_account?.middle_name} ${contact.user_account?.last_name}`\n                    }}\n                    <div class=\"secondary--text font-weight-thin\">\n                      {{ contact.user_account.classification[\"name\"] }}\n                    </div>\n                  </td>\n                  <td class=\"text-left\">{{ contact[\"disease\"][\"name\"] }}</td>\n                  <td class=\"text-center\">{{ contact[\"contacts\"].length }}</td>\n                  <td>{{ contact.created_at | filterDate }}</td>\n                  <td>\n                    <v-btn\n                      color=\"primary\"\n                      icon\n                      @click=\"\n                        $router.push(\n                          `/admin/manage/viewtrace/${contact.user_account.id}/${contact.id}`\n                        )\n                      \"\n                      ><v-icon>groups</v-icon></v-btn\n                    >\n                  </td>\n                </tr>\n              </tbody>\n            </v-simple-table>\n          </v-list-group>\n\n          <v-list-group :value=\"false\" no-action>\n            <template v-slot:activator>\n              <v-list-item-title>\n                <div\n                  class=\"font-weight-bold d-flex align-center justify-space-between\"\n                >\n                  <h4>Classified Close Contacts</h4>\n                </div></v-list-item-title\n              >\n            </template>\n            <v-card flat width=\"auto\">\n              <div class=\"py-4 pl-n6 d-flex justify-space-between\">\n                <div class=\"d-flex justify-start width-div\">\n                  <v-menu\n                    v-model=\"closeContact.menu\"\n                    :close-on-content-click=\"false\"\n                    :nudge-right=\"40\"\n                    transition=\"scale-transition\"\n                    offset-y\n                    min-width=\"auto\"\n                  >\n                    <template v-slot:activator=\"{ on, attrs }\">\n                      <v-text-field\n                        outlined\n                        dense\n                        filled\n                        v-model=\"closeContact.date\"\n                        label=\"Pick Date\"\n                        prepend-icon=\"mdi-calendar\"\n                        readonly\n                        v-bind=\"attrs\"\n                        v-on=\"on\"\n                        class=\"ml-n4 mr-3\"\n                      ></v-text-field>\n                    </template>\n                    <v-date-picker\n                      v-model=\"closeContact.date\"\n                      @input=\"handleCloseContactDate\"\n                    ></v-date-picker>\n                  </v-menu>\n\n                  <v-select\n                    v-model=\"closeContact.disease_id\"\n                    :items=\"diseases\"\n                    item-text=\"name\"\n                    item-value=\"id\"\n                    dense\n                    label=\"Disease Type\"\n                    outlined\n                    filled\n                    @input=\"handleCloseContactSelect\"\n                  ></v-select>\n                </div>\n                <v-btn\n                  color=\"primary\"\n                  outlined\n                  class=\"text-capitalize font-weight-bold pt-5 pb-5\"\n                  @click=\"downloadCloseContacts\"\n                  ><v-icon class=\"pr-3\">cloud_download</v-icon> Download</v-btn\n                >\n              </div>\n            </v-card>\n            <v-simple-table class=\"rounded-lg mb-6\">\n              <thead>\n                <tr class=\"text-center\">\n                  <th class=\"text-left black--text\">Name</th>\n\n                  <th class=\"text-left black--text\">Contact with</th>\n\n                  <th class=\"text-left black--text\">Disease Type</th>\n\n                  <th class=\"text-left black--text text-center\">Created At</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                <tr\n                  class=\"text-center\"\n                  v-for=\"tagged in taggeds\"\n                  :key=\"tagged.id\"\n                >\n                  <td\n                    class=\"text-capitalize text-left font-weight-bold primary--text\"\n                  >\n                    {{\n                      `${tagged.user_account.first_name} ${tagged.user_account?.middle_name} ${tagged.user_account?.last_name}`\n                    }}\n                    <div class=\"secondary--text font-weight-thin\">\n                      {{ tagged.user_account.classification[\"name\"] }}\n                    </div>\n                  </td>\n                  <td class=\"text-left text-capitalize font-weight-bold\">\n                    {{\n                      `${tagged[\"contact_with\"]?.user_patient?.user_account?.first_name} ${tagged[\"contact_with\"]?.user_patient?.user_account?.middle_name}  ${tagged[\"contact_with\"]?.user_patient?.user_account?.last_name}`\n                    }}\n                    <div class=\"secondary--text font-weight-thin\">\n                      {{\n                        tagged[\"contact_with\"]?.user_patient?.user_account\n                          ?.classification?.name\n                      }}\n                    </div>\n                  </td>\n                  <td class=\"text-left\">{{ tagged.disease[\"name\"] }}</td>\n                  <td class=\"text-center\">\n                    {{ tagged.created_at | filterDate }}\n                  </td>\n                </tr>\n              </tbody>\n            </v-simple-table>\n          </v-list-group>\n\n          <!-- Follow Up Recoreds -->\n          <v-list-group :value=\"false\" no-action>\n            <template v-slot:activator>\n              <v-list-item-title>\n                <div\n                  class=\"font-weight-bold d-flex align-center justify-space-between\"\n                >\n                  <h4>Health Declaration Reponses</h4>\n                </div></v-list-item-title\n              >\n            </template>\n            <v-card flat>\n              <div class=\"py-4 pl-n6 d-flex justify-space-between\">\n                <div class=\"d-flex justify-start width-div\">\n                  <v-menu\n                    v-model=\"hdr['menu']\"\n                    :close-on-content-click=\"false\"\n                    :nudge-right=\"40\"\n                    transition=\"scale-transition\"\n                    offset-y\n                    min-width=\"auto\"\n                  >\n                    <template v-slot:activator=\"{ on, attrs }\">\n                      <v-text-field\n                        outlined\n                        dense\n                        filled\n                        v-model=\"hdr['date']\"\n                        label=\"Pick Date\"\n                        prepend-icon=\"mdi-calendar\"\n                        readonly\n                        v-bind=\"attrs\"\n                        v-on=\"on\"\n                        class=\"ml-n4 mr-3\"\n                      ></v-text-field>\n                    </template>\n                    <v-date-picker\n                      v-model=\"hdr['date']\"\n                      @input=\"handleHdrDate\"\n                    ></v-date-picker>\n                  </v-menu>\n                </div>\n                <v-btn\n                  color=\"primary\"\n                  outlined\n                  class=\"text-capitalize font-weight-bold pt-5 pb-5\"\n                  @click=\"downloadHDR\"\n                  ><v-icon class=\"pr-3\">cloud_download</v-icon> Download</v-btn\n                >\n              </div>\n            </v-card>\n            <v-simple-table class=\"rounded-lg mb-6\">\n              <thead>\n                <tr class=\"text-center\">\n                  <th class=\"text-left black--text\">Name</th>\n\n                  <th class=\"text-left black--text text-center\">Date</th>\n\n                  <th class=\"text-left black--text text-center\">Time</th>\n\n                  <th class=\"text-left black--text text-center\">\n                    Check Response\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                <tr\n                  class=\"text-center\"\n                  v-for=\"record in records\"\n                  :key=\"record.id\"\n                >\n                  <td\n                    class=\"text-left font-weight-bold primary--text text-capitalize\"\n                  >\n                    {{\n                      `${record.user_account[\"first_name\"]} ${record.user_account?.middle_name} ${record.user_account?.last_name}`\n                    }}\n                    <div class=\"font-weight-thin secondary--text\">\n                      {{ record[\"user_account\"][\"classification\"][\"name\"] }}\n                    </div>\n                  </td>\n                  <td>{{ record.created_at | filterDate }}</td>\n                  <td>{{ record.created_at | filterTime }}</td>\n                  <td>\n                    <v-btn color=\"primary\" icon\n                    @click=\"handleFormDialog(record.answers)\"\n                      ><v-icon>description</v-icon></v-btn\n                    >\n                  </td>\n                </tr>\n              </tbody>\n            </v-simple-table>\n          </v-list-group>\n        </v-list>\n      </div>\n    </v-main>\n    <!-- Form Dialog -->\n    <v-dialog v-model=\"form_dialog\" @click:outside=\"form_dialog = false\" width=\"540\">\n      <v-card v-for=\"(response,index) in form_answers\" :key=\"response.id\" tile>\n        <v-card-title primary-title class=\"text-justify\">\n          <h6>{{ `${index + 1}. ${response.question.question}` }}</h6>\n        </v-card-title>\n\n        <v-card-text>\n          <ul v-if=\"response.question.sub_question\" class=\"mt-n4\">\n            <li v-for=\"(q,index) in handleQuestion(response.question.sub_question)\" :key=\"index\">\n              <h4>{{q}}</h4>          \n            </li>\n          </ul>\n\n          <div class=\"mt-4\">\n            <v-text-field outlined readonly label=\"Answer\" :value=\"response.answer == 1 ? `True` : `False`\"></v-text-field>\n          </div>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n  </v-app>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport moment from \"moment\";\nimport jspdf from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nexport default {\n  mounted() {\n    this.$store.dispatch(\"generates/getPatient\");\n    this.$store.dispatch(\"disease/getData\");\n    this.$store.dispatch(\"generates/submittedResponse\");\n    this.$store.dispatch(\"generates/getTaggeds\");\n  },\n  filters: {\n    filterDate(val) {\n      return moment(val).format(\"MMM. DD, YYYY\").toString();\n    },\n    filterTime(val) {\n      return moment(val).format(\"hh:mm a\").toString();\n    },\n  },\n  computed: {\n    ...mapState({\n      diseases: (state) => state.disease.all.data,\n      contacts: (state) => state.generates.all.data,\n      records: (state) => state.generates.submit.data,\n      taggeds: (state) => state.generates.taggeds.data,\n    }),\n  },\n  data() {\n    return {\n      form_answers:[],\n      form_dialog:false,\n      disease_id: null,\n      date: \"\",\n      closeContact: {\n        disease_id: null,\n        date: \"\",\n        menu: false,\n      },\n      hdr: {\n        date: \"\",\n        menu: false,\n      },\n      page: 1,\n      menu: false,\n    };\n  },\n  methods: {\n    handleQuestion(data){\n      console.log(data.split(\",\"));\n      if(data.trim()){\n        const arr = data.split(\",\")\n        return arr\n      }\n      return []\n    },\n    handleFormDialog(data){\n      this.form_answers = data\n      this.form_dialog =  true\n    },\n    handleDate(data) {\n      console.log(data);\n      this.$store.dispatch(\"generates/getDatePatient\", { date: data });\n      this.menu = false;\n    },\n    handleCloseContactDate(data) {\n      console.log(data);\n      this.$store.dispatch(\"generates/getDateTaggeds\", { date: data });\n      this.closeContact.menu = false;\n    },\n    handleHdrDate(data) {\n      console.log(data);\n      this.$store.dispatch(\"generates/dateResponse\", { date: data });\n      this.hdr[\"menu\"] = false;\n    },\n    handleCloseContactSelect(data) {\n      console.log(\"cc\", data);\n      if (this.closeContact[\"date\"]) {\n        this.$store.dispatch(\"generates/getDateTaggeds\", {\n          date: this.closeContact.date,\n          disease_id: data,\n        });\n        return;\n      }\n      this.$store.dispatch(\"generates/getDateTaggeds\", { disease_id: data });\n    },\n    handleSelect(data) {\n      console.log(data);\n      if (this.date) {\n        this.$store.dispatch(\"generates/getDatePatient\", {\n          date: this.date,\n          disease_id: data,\n        });\n        return;\n      }\n      this.$store.dispatch(\"generates/getDatePatient\", { disease_id: data });\n    },\n    // Generete Pdf Buttons\n    downloadPatient() {\n      const pdf = new jspdf();\n      const msg = \"Generated Reports\";\n      const content = \"Patient with Close Contacts\";\n\n      pdf.setFontSize(16);\n      pdf.setFont(\"helvetica\");\n      pdf.text(15, 15, msg);\n\n      pdf.setFontSize(16);\n      pdf.setFont(\"helvetica\");\n      pdf.text(15, 22, content);\n\n      // let crement = 0\n\n      for (const i of this.contacts) {\n        // crement +=1\n        // pdf.setFontSize(11);\n        // pdf.setFont(\"courier\");\n        // pdf.text(15 , 38 + crement, `${i.user_account.first_name.toUpperCase()} ${i.user_account?.middle_name ? i.user_account?.middle_name.toUpperCase() : \" \"} ${i.user_account?.last_name.toUpperCase()}`);\n\n        // pdf.setFontSize(11);\n        // pdf.setFont(\"courier\");\n        // pdf.text(15 , 40 + crement, `Created At: ${moment(i.created_at).format(\"MMM. DD, YYYY\").toString()}`);\n        // pdf.text(120, 40 + crement, `Disease Type : ${i.disease.name}`);\n\n        const newMap = i.contacts.map((m) => {\n          console.log(\"enter\", m);\n          return {\n            patient: `${m.user_patient.user_account?.first_name.toUpperCase()} ${m.user_patient.user_account?.middle_name.toUpperCase()} ${m.user_patient.user_account?.last_name.toUpperCase()} \\n ${\n              m.user_patient.user_account.classification?.name\n            }`,\n            name: `${m.user_tagged.user_account.first_name.toUpperCase()} ${\n              m.user_tagged.user_account?.middle_name\n                ? m.user_tagged.user_account.middle_name.toUpperCase()\n                : \" \"\n            } ${m.user_tagged.user_account.last_name.toUpperCase()} \\n ${\n              m.user_tagged.user_account.classification.name\n            }`,\n            disease_type: m.user_tagged.disease.name,\n            created_at: moment(m.user_tagged.created_at)\n              .format(\"MMM. DD, YYYY\")\n              .toString(),\n          };\n        });\n\n        autoTable(pdf, {\n          headStyles: {\n            fillColor: \"#141E61\",\n            font: \"courier\",\n            fontStyle: \"bold\",\n          },\n          columnStyles: {\n            name: { font: \"courier\", valign: \"middle\" },\n            disease_type: { font: \"courier\" },\n            created_at: { font: \"courier\" },\n          },\n          margin: {\n            top: 45,\n          },\n          columns: [\n            { header: \"Patient Name\", dataKey: \"patient\" },\n            { header: \"Close Contacted\", dataKey: \"name\" },\n            { header: \"Disease Type\", dataKey: \"disease_type\" },\n            { header: \"Created At\", dataKey: \"created_at\" },\n          ],\n          body: newMap,\n        });\n      }\n\n      if (this.date.trim() == \"\" && this.disease_id) {\n        const find = this.diseases.find((f) => f.id == this.disease_id);\n        pdf.save(`${find.name}-patient-with-close-contacts.pdf`);\n      } else if (this.date && !this.disease_id) {\n        pdf.save(`${this.date}-patient-with-close-contacts.pdf`);\n      } else if (this.date && this.disease_id) {\n        const find = this.diseases.find((f) => f.id == this.disease_id);\n        pdf.save(`${this.date}-${find.name}-patient-with-close-contacts.pdf`);\n      } else {\n        pdf.save(`all-patient-with-close-contacts.pdf`);\n      }\n    },\n\n    downloadCloseContacts() {\n      const newMap = this.taggeds.map((m) => {\n        return {\n          name: `${m.user_account.first_name.toUpperCase()} ${\n            m.user_account?.middle_name\n              ? m.user_account.middle_name.toUpperCase()\n              : \" \"\n          } ${m.user_account.last_name.toUpperCase()} \\t ${\n            m.user_account.classification.name\n          }`,\n          contact_with: `${m.contact_with?.user_patient?.user_account.first_name.toUpperCase()} ${\n            m.contact_with?.user_patient?.user_account?.middle_name\n              ? m.contact_with?.user_patient?.user_account.middle_name.toUpperCase()\n              : \" \"\n          } ${m.contact_with?.user_patient?.user_account.last_name.toUpperCase()} \\t ${\n            m.user_account.classification.name\n          }`,\n          disease_type: m.disease.name,\n          created_at: moment(m.created_at).format(\"MMM. DD, YYYY\").toString(),\n        };\n      });\n\n      const pdf = new jspdf();\n      const msg = \"Generated Reports\";\n      const content = \"Classified Close Contacts\";\n\n      pdf.setFontSize(16);\n      pdf.setFont(\"helvetica\");\n      pdf.text(15, 15, msg);\n\n      pdf.setFontSize(16);\n      pdf.setFont(\"helvetica\");\n      pdf.text(15, 22, content);\n\n      autoTable(pdf, {\n        headStyles: { fillColor: \"#141E61\" },\n        margin: {\n          top: 45,\n        },\n        columns: [\n          { header: \"Name\", dataKey: \"name\" },\n          { header: \"Contact With\", dataKey: \"contact_with\" },\n          { header: \"Disease Type\", dataKey: \"disease_type\" },\n          { header: \"Created At\", dataKey: \"created_at\" },\n        ],\n        body: newMap,\n      });\n\n      if (this.closeContact.date.trim() == \"\" && this.closeContact.disease_id) {\n        const find = this.diseases.find(\n          (f) => f.id == this.closeContact.disease_id\n        );\n        pdf.save(`${find.name}-classified-close-contacts.pdf`);\n      } else if (this.closeContact.date && !this.closeContact.disease_id) {\n        pdf.save(`${this.closeContact.date}-classified-close-contacts.pdf`);\n      } else if (this.closeContact[\"date\"] && this.closeContact.disease_id) {\n        const find = this.diseases.find(\n          (f) => f.id == this.closeContact.disease_id\n        );\n        pdf.save(\n          `${this.closeContact[\"date\"]}-${find.name}-classified-close-contacts.pdf`\n        );\n      } else {\n        pdf.save(`all-classified-close-contacts.pdf`);\n      }\n    },\n    downloadHDR() {\n      const newMap = this.records.map((m) => {\n        let num = 0;\n        const obj = {};\n\n        for (const key of m.answers) {\n          num += 1;\n          obj[`Question No. ${num}`] = key.answer ? \"True\" : \"False\";\n        }\n        obj[\"time\"] = moment(m.created_at).format(\"hh:mm a\").toString();\n        obj[\"date\"] = moment(m.created_at).format(\"MMM. DD, YYYY\").toString();\n        obj[\"name\"] = `${m.user_account.first_name.toUpperCase()} ${\n          m.user_account?.middle_name\n            ? m.user_account.middle_name.toUpperCase()\n            : \" \"\n        } ${m.user_account.last_name.toUpperCase()}`;\n        return obj;\n      });\n\n      let numColumns = -1;\n      const columns = [];\n\n      if (newMap.length) {\n        for (const key of Object.keys(newMap[0]).reverse()) {\n          numColumns += 1;\n          columns[numColumns] = {\n            header: key.toString().toUpperCase(),\n            dataKey: key,\n          };\n        }\n      }\n\n      const pdf = new jspdf();\n      const msg = \"Generated Reports\";\n      const content = \"Health Declaration Responses\";\n\n      pdf.setFontSize(16);\n      pdf.setFont(\"helvetica\");\n      pdf.text(15, 15, msg);\n\n      pdf.setFontSize(16);\n      pdf.setFont(\"helvetica\");\n      pdf.text(15, 22, content);\n\n      autoTable(pdf, {\n        headStyles: { fillColor: \"#141E61\" },\n        margin: {\n          top: 45,\n        },\n        columns: columns,\n        body: newMap.reverse(),\n      });\n\n      if (this.hdr.date.trim() == \"\") {\n        pdf.save(\"All-HDR.pdf\");\n        return;\n      }\n\n      pdf.save(`${this.hdr.date}-HD.pdf`);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.bg {\n  background-color: #f8f0f0;\n}\n.adj {\n  width: 280px;\n}\n.width-div {\n  width: 460px;\n}\n</style>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/StationView.vue",["364"],"<template>\n  <v-main class=\"accent\">\n    <v-container fluid>\n      <addDialog />\n      <div class=\"ma-lg-12\">\n        <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">\n          Stations Account\n        </h2>\n        <h5 class=\"secondary--text\">List of all Stations Account</h5>\n\n        <div class=\"mt-12 pt-6 d-flex justify-space-between\">\n          <div class=\"d-flex adj\">\n            <v-text-field\n              class=\"mr-2\"\n              label=\"Search here\"\n              solo\n              dense\n              v-model=\"inputSearch\"\n            ></v-text-field>\n            <v-btn color=\"primary\" @click=\"handleSearch\"><v-icon>search</v-icon></v-btn>\n          </div>\n\n          <v-btn\n            @click=\"handleDialog\"\n            color=\"primary\"\n            class=\"px-8 py-5 font-weight-bold\"\n            ><v-icon left>add</v-icon> Station</v-btn\n          >\n        </div>\n\n        <v-simple-table class=\"rounded-lg elevation-6\">\n          <thead>\n            <tr class=\"text-center\">\n              <th class=\"text-left black--text text-center\">Username</th>\n              <th class=\"text-left black--text text-center\">Location</th>\n              <th class=\"text-left black--text text-center\">Status</th>\n              <th class=\"text-left black--text text-center\">Actions</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr\n              v-for=\"station in user\"\n              :key=\"station.id\"\n              class=\"text-center text-capitalize\"\n            >\n              <td>\n                {{ `${station.username}` }}\n              </td>\n              <td>{{ station.location.name }}</td>\n              <td\n                v-if=\"station.is_active\"\n                class=\"font-weight-bold primary--text\"\n              >\n                Active\n              </td>\n              <td v-else class=\"font-weight-bold error--text\">Not Active</td>\n              <td>\n                <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on, attrs }\">\n                      <v-btn   class=\"text-capitalize\" color=\"primary\" @click=\"changeStatus(station)\" dark v-bind=\"attrs\" v-on=\"on\" icon ><v-icon>cached</v-icon></v-btn>\n                    </template>\n                      <span>Change Status</span>\n                  </v-tooltip>\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      class=\"text-capitalize\"\n                      color=\"error\"\n                      dark\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      @click=\"openDeleteDialog(station)\"\n                      icon\n                      ><v-icon>delete_forever</v-icon></v-btn\n                    >\n                  </template>\n                  <span>Delete</span>\n                </v-tooltip>\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table>\n        <v-pagination v-model=\"page_number\" :length=\"page\" total-visible=\"6\" class=\"float-left mt-4\" @input=\"pageSwitch\"></v-pagination>\n      </div>\n    <!-- Station Delete Dialog -->\n    <v-dialog v-model=\"deleteDialog\" width=\"auto\" >\n        <v-card>\n          <v-card-title class=\"primary accent--text\">Delete Station</v-card-title>\n          <v-card-text>\n            <v-container>\n              <h3 class=\"font-weight-regular mt-6 mx-8\">Are you sure to Delete?</h3>\n            </v-container>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"black\" plain text class=\"text-capitalize\" @click=\"closeDeleteDialog\">Cancel</v-btn>\n            <v-btn color=\"error\" class=\"text-capitalize px-6\" @click=\"deleteStation\">Delete</v-btn>\n          </v-card-actions>\n        </v-card>\n    </v-dialog>\n    </v-container>\n  </v-main>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport addDialog from \"./Dialog/Station/AddDialog.vue\";\nexport default {\n  components: { addDialog },\n  mounted() {\n    this.$store.dispatch(\"station/get\");\n  },\n  computed: {\n    ...mapState({\n      user: (state) => state.station.all.data,\n      page: (state) => state.station.all.page,\n    }),\n  },\n  data(){\n    return{\n      deleteDialog:false,\n      stationData:null,\n      page_number:1,\n      inputSearch:\"\"\n    }\n  },\n  methods: {\n    openDeleteDialog(data){\n      this.deleteDialog = true\n      this.stationData = data\n    },\n    closeDeleteDialog(){\n      this.deleteDialog = false\n    },\n    deleteStation() {\n      this.$store.dispatch(\"station/delete\", this.stationData);\n      this.deleteDialog = false\n    },\n    handleDialog() {\n      this.$store.state.station.submit.dialog = true;\n    },\n    changeStatus(data){\n      this.$store.dispatch(\"station/changeStatus\",data);\n    },\n    pageSwitch(data){\n      this.page_number = data\n      this.$store.dispatch(\"station/get\",data);\n    },\n    async handleSearch(){\n      const res = await this.$store.dispatch(\"station/search\",this.inputSearch);      \n\n      console.log('res',res);\n    }\n  },\n};\n</script>\n\n<style scoped>\n.bg {\n  background-color: #f8f0f0;\n}\n.adj {\n  width: 280px;\n}\n</style>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/FollowUps.vue",["365"],"<template>\n  <v-container>\n    <div class=\"ma-12\">\n      <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">Follow Ups</h2>\n      <h5 class=\"secondary--text\">\n        List of all student, personnels or visitors\n        respondents.\n      </h5>\n\n      <v-card class=\"rounded-lg mt-8\" width=\"290\">\n        <v-card-title class=\"font-weight-bold primary--text\"\n          >Today's Respondent</v-card-title\n        >\n        <v-card-text>\n          <v-row>\n            <v-col>\n              <div class=\"d-flex my-4\">\n                <h2 class=\"secondary--text mr-4\"><b class=\"primary--text mr-2\">{{followData.tcount}}</b> out of <b  class=\"primary--text ml-2 font-weight-bold\">{{followData.acontact}}</b></h2>\n                <v-icon>person</v-icon>\n              </div>\n            </v-col>\n          </v-row>\n        </v-card-text>\n      </v-card>\n<!-- \n      <div class=\"adj mt-16 pt-6 d-flex\">\n        <v-text-field\n          class=\"mr-2\"\n          label=\"Search here\"\n          solo\n          dense\n        ></v-text-field>\n        <v-btn color=\"primary\"><v-icon>search</v-icon></v-btn>\n      </div> -->\n\n      <v-simple-table class=\"rounded-lg elevation-6 mt-8\">\n        <thead>\n          <tr class=\"text-center\">\n            <th class=\"text-left black--text\">Name</th>\n\n            <th class=\"text-left black--text\">Submitted Response</th>\n\n            <th class=\"text-left black--text text-center\">Date</th>\n\n            <!-- <th class=\"text-left black--text text-center\">\n                  Time-In\n                </th> -->\n\n            <!-- <th class=\"text-left black--text text-center\">\n                  Time-Out\n                </th> -->\n\n            <!-- <th class=\"text-left black--text text-center\">Date</th> -->\n\n            <!-- <th class=\"text-left black--text text-center\"> -->\n            <!-- Actions -->\n            <!-- </th>        -->\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr\n            v-for=\"follow in followData.data.data\"\n            :key=\"follow.id\"\n            class=\"text-center text-capitalize\"\n          >\n            <td class=\"text-left\">\n              {{\n                `${follow.users.first_name} ${follow.users.last_name}`\n              }}\n            </td>\n            <td class=\"text-left\">{{ follow.follow_up_status }}</td>\n            <td>{{ follow.created_at | date }}</td>\n            <!-- <td>\n                    <v-tooltip bottom>\n                      <template v-slot:activator=\"{ on, attrs }\">\n                        <v-btn color=\"primary\" dark v-bind=\"attrs\" v-on=\"on\" icon><v-icon>visibility</v-icon></v-btn>\n                      </template>\n                        <span>View</span>\n                    </v-tooltip>\n  \n                    <v-tooltip bottom>\n                      <template v-slot:activator=\"{ on, attrs }\">\n                        <v-btn color=\"error\" dark v-bind=\"attrs\" v-on=\"on\" icon><v-icon>delete_forever</v-icon></v-btn>\n                    </template>\n                    <span>Delete</span>\n                </v-tooltip>\n            </td> -->\n          </tr>\n        </tbody>\n      </v-simple-table>\n      <v-pagination\n        v-model=\"page_number\"\n        :length=\"page\"\n        class=\"float-left mt-4\"\n        @input=\"pageSwitch\"\n      ></v-pagination>\n    </div>\n  </v-container>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport moment from \"moment\";\nexport default {\n  data() {\n    return {\n      page_number: 1,\n    };\n  },\n  filters: {\n    date(val) {\n      return moment(val).format(`MMM. DD, YYYY`).toString();\n    },\n  },\n  mounted() {\n    this.$store.dispatch(\"record/allRecords\");\n    this.$store.dispatch('followUps/allFollowUp')\n  },\n  computed: {\n    ...mapState({\n      records: (state) => state.record.clinic.data,\n      page: (state) => state.followUps.all.page,\n      followData: state => state.followUps.all.data\n    }),\n  },\n  methods: {\n    pageSwitch(data) {\n      this.page_number = data;\n      this.$store.dispatch('followUps/allFollowUp',data)\n      console.log('pag',data);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.bg {\n  background-color: #f8f0f0;\n}\n.adj {\n  width: 280px;\n}\n</style>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/ViewTraceContact.vue",["366","367"],"<template>\n  <v-container>\n    <div class=\"ma-16\">\n      <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">\n        View Close Contacts\n      </h2>\n      <h5 class=\"secondary--text\">List of user close contacts</h5>\n\n      <div class=\"d-flex align-center mt-12\">\n        <v-btn color=\"primary\" @click=\"changeBtn()\" rounded small\n          ><v-icon left>arrow_back</v-icon>\n          <h4>return</h4></v-btn\n        >\n        <h2 class=\"ml-4 text-capitalize\">\n          {{ `${user.first_name} ${user.middle_name} ${user.last_name}` }}\n        </h2>\n      </div>\n\n      <!-- <div class=\"d-flex align-stretch mt-12\">\n            <v-select label=\"Time Frame\" outlined  filled dense></v-select>\n            <v-select label=\"Location\" outlined  filled dense class=\"ml-2\"></v-select>\n            <v-btn color=\"primary\" class=\"ml-2 py-5\" medium text><v-icon left>filter_list</v-icon> <h4>Filter</h4></v-btn>\n        </div> -->\n\n      <v-card class=\"rounded-lg elevation-6 mt-6\">\n        <v-simple-table>\n          <thead>\n            <tr class=\"text-center\">\n              <th class=\"text-left black--text \">\n                <h3>Name</h3>\n              </th>\n\n              <!-- <th class=\"text-left black--text \">\n                <h3>Role</h3>\n              </th> -->\n\n              <th class=\"text-left black--text \">\n                <h3>Active Disease</h3>\n              </th>\n\n              <th class=\"text-center black--text \">\n                <h3>Days Left</h3>\n              </th>\n              <th class=\"text-center black--text \">\n                <h3>Date Created</h3>\n              </th>\n              <th class=\"text-left black--text text-center\">\n                <h3>Action</h3>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr\n              class=\"text-center text-capitalize\"\n              v-for=\"contact in contacts\"\n              :key=\"contact.id\"\n            >\n            <td class=\"text-left primary--text font-weight-bold\">\n              {{\n                `${contact.user_account.first_name} ${contact.user_account.middle_name} ${contact.user_account.last_name} `\n              }}\n              <div class=\"secondary--text font-weight-thin\">\n                {{ contact.user_account.classification.name }}\n              </div>\n            </td>\n              <!-- <td class=\"text-left\">\n                {{ contact.user_account.classification.name }}\n              </td> -->\n\n              <td class=\"text-left text-capitalize\">\n                {{ contact.disease.name }}\n              </td>\n\n              <td>{{ contact.days_left }} {{(contact.days_left == 1 || contact.days_left == 0)  ? \"day\" : \"days\" }} left</td>\n\n              <td class=\"text-center\">\n                {{\n                  contact.created_at | dateFormat\n                }}\n              </td>\n              <td>\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      color=\"primary\"\n                      @click=\"handleDuration(contact)\"\n                      dark\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      icon\n                      large\n                      ><v-icon>timer</v-icon></v-btn\n                    >\n                  </template>\n                  <span>Edit Duration</span>\n                </v-tooltip>\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      color=\"error\"\n                      @click=\"handleDelete(contact)\"\n                      dark\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      icon\n                      large\n                      ><v-icon>delete_forever</v-icon></v-btn\n                    >\n                  </template>\n                  <span>Remove User</span>\n                </v-tooltip>\n              </td>\n              <!-- <td>2:00 pm</td>\n              <td>4:00 pm</td> -->\n              <!-- <td><v-chip color=\"primary\"><v-icon left>hdr_weak</v-icon> Good</v-chip></td> -->\n              <!-- <td>\n                <v-menu offset-y bottom transition=\"slide-y-transition\" rounded=\"lg\">\n                 <template v-slot:activator=\"{ on, attrs }\">\n                <v-btn color=\"primary\" dark v-bind=\"attrs\" v-on=\"on\" icon large>\n                    <v-icon>menu_open</v-icon>\n                  </v-btn>\n                </template>\n                <v-list>\n                    <v-list-item to=\"/admin/checkprofile\">\n                        <v-list-item-icon class=\"mr-4\"><v-icon  color=\"primary\">account_circle</v-icon></v-list-item-icon>\n                        <v-list-item-title class=\"font-weight-bold\"><h5>Check Profile</h5></v-list-item-title>\n                    </v-list-item>\n                    <v-divider></v-divider>\n                    <v-list-item>\n                        <v-list-item-icon class=\"mr-4\"><v-icon  color=\"primary\">connect_without_contact</v-icon></v-list-item-icon>\n                        <v-list-item-title class=\"font-weight-bold\"><h5>Mark as close contact</h5></v-list-item-title>\n                    </v-list-item> -->\n              <!-- <v-list-item>\n                        <v-list-item-icon class=\"mr-4\"><v-icon  color=\"primary\">6_ft_apart</v-icon></v-list-item-icon>\n                        <v-list-item-title class=\"font-weight-bold\"><h5>Mark as possible close contact</h5></v-list-item-title>\n                    </v-list-item> -->\n              <!-- </v-list>\n                </v-menu> -->\n              <!-- </td> -->\n            </tr>\n          </tbody>\n        </v-simple-table>\n      </v-card>\n      <!-- <v-pagination\n        v-model=\"page\"\n        :length=\"4\"\n        class=\"float-right mt-4\"\n        @input=\"pageSwitch\"\n      ></v-pagination> -->\n\n      <!-- Update Duration Dialog -->\n      <v-dialog\n        v-model=\"durationDialog\"\n        width=\"auto\"\n        @click:outside=\"closeDialog\"\n      >\n        <v-card>\n          <v-card-title class=\"primary accent--text font-weight-bold\"\n            >Edit Duration</v-card-title\n          >\n          <v-card-text class=\"mt-8\">\n            <v-text-field\n              name=\"duration\"\n              label=\" Set Duration (Day)\"\n              v-model=\"duration\"\n              id=\"id\"\n              outlined\n              filled\n            ></v-text-field>\n          </v-card-text>\n          <v-divider></v-divider>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"black\"\n              class=\"text-capitalize\"\n              text\n              plain\n              @click=\"closeDialog\"\n              >cancel</v-btn\n            >\n            <v-btn color=\"primary\" class=\"text-capitalize\" :loading=\"updateLoading\" @click=\"handleDurationSubmit\">Update</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <!-- Delete user -->\n      <v-dialog\n        v-model=\"deleteDialog\"\n        width=\"auto\"\n        @click:outside=\"closeDialog\"\n      >\n        <v-card>\n          <v-card-title class=\"primary accent--text font-weight-bold\"\n            >Remove User</v-card-title\n          >\n          <v-card-text class=\"py-6\">\n            <div class=\"pr-12 text-h6\">Are you sure to remove?</div>\n          </v-card-text>\n          <v-divider></v-divider>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"black\"\n              class=\"text-capitalize\"\n              text\n              plain\n              @click=\"closeDialog\"\n              >cancel</v-btn\n            >\n            <v-btn color=\"error\" class=\"text-capitalize\" :loading=\"deleteLoading\" @click=\"handleDeleteSubmit()\">Remove</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n  </v-container>\n</template>\n\n<script>\nimport moment from 'moment';\nimport { mapState } from \"vuex\";\nexport default {\n  mounted() {\n    this.$store.dispatch(\"user/checkProfile\", this.$route.params.id);\n    this.$store.dispatch(\n      \"closeContact/getContacts\",\n      this.$route.params.patientId\n    );\n  },\n  filters:{\n    dateFormat(val){\n      return moment(val).format('MMM. DD, YYYY').toString()\n    }\n  },\n  computed: {\n    ...mapState({\n      user: (state) => state.user.checkProfile.data,\n      contacts: (state) => state.closeContact.all.data,\n      durationDialog: (state) => state.closeContact.update.dialog,\n      deleteDialog: (state) => state.closeContact.delete.dialog,\n      deleteLoading: state => state.closeContact.delete.loading,\n      updateLoading: state => state.closeContact.update.loading\n    }),\n  },\n  data() {\n    return {\n      page: 1,\n      duration: \"\",\n      deleteId:'',\n      updateId:''\n    };\n  },\n  methods: {\n    changeBtn() {\n      this.$router.go(-1);\n    },\n    handleDuration(data) {\n      console.log(data);\n      this.duration = data.days_left;\n      this.updateId = data.id\n      this.$store.state.closeContact.update.dialog = true;\n    },\n    handleDelete(data) {\n      console.log('handle', data.id);\n      this.deleteId = data.id\n      this.$store.state.closeContact.delete.dialog = true;\n    },\n    closeDialog() {\n      this.$store.state.closeContact.update.dialog = false;\n      this.$store.state.closeContact.delete.dialog = false;\n    },\n    handleDurationSubmit() {\n      this.$store.dispatch('closeContact/updateTaggedDuration',{id:this.updateId,duration:this.duration,paramId:this.$route.params.patientId})\n    },\n    handleDeleteSubmit() {\n      this.$store.dispatch('closeContact/deleteTagged',{deleteId:this.deleteId,paramId:this.$route.params.patientId})\n    },\n  },\n};\n</script>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/ManageContact/ContactUser.vue",["368","369"],"<template>\n  <v-container>\n    <div class=\"ma-12\">\n      <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">\n        Manage Close Contacts {{ changeBtn ? \"\" : \"/ View\" }}\n      </h2>\n      <h5 class=\"secondary--text\">\n        Managing who has been in contact of the user\n      </h5>\n      <v-card class=\"rounded-lg mt-8\" width=\"290\">\n        <v-card-title class=\"font-weight-bold primary--text\"\n          >Total Active Patient</v-card-title\n        >\n        <v-card-text>\n          <v-row>\n            <v-col>\n              <div class=\"d-flex align-center justify-center\">\n                <h1 class=\"primary--text mr-4\">{{ allContacts }}</h1>\n                <v-icon size=\"30\">person</v-icon>\n              </div>\n            </v-col>\n          </v-row>\n        </v-card-text>\n      </v-card>\n      <div class=\"adj mt-4 pt-6 d-flex mb-n3\">\n        <v-text-field\n          class=\"mr-2\"\n          label=\"Search here\"\n          solo\n          outlined\n          dense\n          v-model=\"inputSearch\"\n        ></v-text-field>\n        <v-btn color=\"primary\" class=\"py-5\" @click=\"handleSearch\"\n          ><v-icon>search</v-icon></v-btn\n        >\n      </div>\n      <v-simple-table class=\"rounded-lg elevation-6\">\n        <thead>\n          <tr class=\"text-center\">\n            <th class=\"text-left black--text\">\n              <h3>Name</h3>\n            </th>\n\n            <!-- <th class=\"text-left black--text \">\n              <h3>Role</h3>\n            </th> -->\n\n            <th class=\"text-left black--text\">\n              <h3>Active Disease</h3>\n            </th>\n\n            <th class=\"text-left black--text text-center\">\n              <h3>Days left</h3>\n            </th>\n\n            <th class=\"text-left black--text text-center\">\n              <h3>No. of Contacts</h3>\n            </th>\n\n            <th class=\"text-left black--text text-center\">\n              <h3>Date Created</h3>\n            </th>\n\n            <th class=\"text-left black--text text-center\">\n              <h3>Action</h3>\n            </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr\n            class=\"text-center text-capitalize\"\n            v-for=\"contact in contacts\"\n            :key=\"contact.id\"\n          >\n            <td class=\"text-left primary--text font-weight-bold\">\n              {{\n                `${contact.user_account.first_name} ${contact.user_account.middle_name} ${contact.user_account.last_name} `\n              }}\n              <div class=\"secondary--text font-weight-thin\">\n                {{ contact.user_account.classification.name }}\n              </div>\n            </td>\n            <!-- <td class=\"text-left\">{{ contact.user_account.classification.name }}</td> -->\n            <td class=\"text-left\">{{ contact.disease.name }}</td>\n            <td>\n              {{ contact.days_left }}\n              {{ (contact.days_left == 1 || contact.days_left == 0) ? \"day\" : \"days\" }} left\n            </td>\n            <td>\n              {{\n                contact.contacts.length\n                  ? contact.contacts.length\n                  : \"No Contacts\"\n              }}\n            </td>\n            <td>\n              {{ contact.created_at | dateFormat }}\n            </td>\n            <td>\n              <v-menu\n                offset-y\n                bottom\n                transition=\"slide-y-transition\"\n                rounded=\"lg\"\n              >\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    color=\"primary\"\n                    dark\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                    icon\n                    large\n                  >\n                    <v-icon>menu_open</v-icon>\n                  </v-btn>\n                </template>\n                <v-list>\n                  <v-list-item\n                    :to=\"`/admin/checkprofile/${contact.user_account.id}`\"\n                  >\n                    <v-list-item-icon class=\"mr-4\"\n                      ><v-icon color=\"primary\"\n                        >account_circle</v-icon\n                      ></v-list-item-icon\n                    >\n                    <v-list-item-title class=\"font-weight-bold\"\n                      ><h5>Check Profile</h5></v-list-item-title\n                    >\n                  </v-list-item>\n                  <v-divider></v-divider>\n                  <v-list-item @click=\"handleDuration(contact)\">\n                    <v-list-item-icon class=\"mr-4\"\n                      ><v-icon color=\"primary\">timer</v-icon></v-list-item-icon\n                    >\n                    <v-list-item-title class=\"font-weight-bold\"\n                      ><h5>Edit Duration</h5></v-list-item-title\n                    >\n                  </v-list-item>\n                  <v-divider></v-divider>\n                  <v-list-item\n                    :to=\"`/admin/manage/viewtrace/${contact.user_account.id}/${contact.id}`\"\n                  >\n                    <v-list-item-icon class=\"mr-4\"\n                      ><v-icon color=\"primary\"\n                        >reduce_capacity</v-icon\n                      ></v-list-item-icon\n                    >\n                    <v-list-item-title class=\"font-weight-bold\"\n                      ><h5>View Contacts</h5></v-list-item-title\n                    >\n                  </v-list-item>\n                  <v-divider></v-divider>\n                  <v-list-item @click=\"handleDeleteDialog(contact)\">\n                    <v-list-item-icon class=\"mr-4\"\n                      ><v-icon color=\"error\">delete</v-icon></v-list-item-icon\n                    >\n                    <v-list-item-title class=\"font-weight-bold\"\n                      ><h5>Delete Patient</h5></v-list-item-title\n                    >\n                  </v-list-item>\n                </v-list>\n              </v-menu>\n            </td>\n          </tr>\n        </tbody>\n      </v-simple-table>\n\n      <!-- Edit Duration -->\n      <v-dialog\n        v-model=\"durationDialog\"\n        width=\"auto\"\n        @click:outside=\"closeDialog\"\n      >\n        <v-card>\n          <v-card-title class=\"primary accent--text font-weight-bold\"\n            >Edit Duration</v-card-title\n          >\n          <v-card-text class=\"mt-8\">\n            <v-text-field\n              name=\"duration\"\n              label=\" Set Duration (Day)\"\n              v-model=\"duration\"\n              id=\"id\"\n              outlined\n              filled\n            ></v-text-field>\n          </v-card-text>\n          <v-divider></v-divider>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"black\"\n              class=\"text-capitalize\"\n              text\n              plain\n              @click=\"closeDialog\"\n              >cancel</v-btn\n            >\n            <v-btn\n              color=\"primary\"\n              class=\"text-capitalize\"\n              :loading=\"updateLoading\"\n              @click=\"handleDurationSubmit\"\n              >Update</v-btn\n            >\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <!-- Delete -->\n      <v-dialog\n        v-model=\"deleteDialog\"\n        width=\"auto\"\n        @click:outside=\"closeDialog\"\n      >\n        <v-card>\n          <v-card-title class=\"primary accent--text font-weight-bold\"\n            >Delete Patient</v-card-title\n          >\n          <v-card-text class=\"mt-8\">\n            <div>\n              <h3>Are you sure to delete this user ?</h3>\n            </div>\n          </v-card-text>\n          <v-divider></v-divider>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"black\"\n              class=\"text-capitalize\"\n              text\n              plain\n              @click=\"closeDialog\"\n              >cancel</v-btn\n            >\n            <v-btn\n              color=\"error\"\n              class=\"text-capitalize\"\n              :loading=\"deleteLoading\"\n              @click=\"handleSubmitDelete\"\n              >delete</v-btn\n            >\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <v-snackbar\n        v-model=\"deleteSnackBar\"\n        bottom\n        right\n        color=\"error\"\n      >\n        <v-icon>check</v-icon>\n        Patient Deleted Successfully\n      </v-snackbar>\n      <v-pagination\n        v-model=\"page_number\"\n        :length=\"page\"\n        class=\"float-right mt-4\"\n        @input=\"pageSwitch\"\n      ></v-pagination>\n    </div>\n  </v-container>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport { mapState } from \"vuex\";\nexport default {\n  mounted() {\n    this.$store.dispatch(\"closeContact/getPatient\");\n  },\n  filters: {\n    dateFormat(val) {\n      return moment(val).format(\"MMM. DD, YYYY\").toString();\n    },\n  },\n  computed: {\n    ...mapState({\n      contacts: (state) => state.closeContact.all.data,\n      allContacts: (state) => state.closeContact.all.allContacts,\n      page: (state) => state.closeContact.all.page,\n      updateLoading: (state) => state.closeContact.update.loading,\n      durationDialog: (state) => state.closeContact.update.dialog,\n      deleteLoading: (state) => state.closeContact.delete.loading,\n    }),\n  },\n  data() {\n    return {\n      deleteDialog: false,\n      deleteId: false,\n      deleteSnackBar: false,\n      page_number: 1,\n      docState: \"saved\",\n      changeBtn: true,\n      title: \"\",\n      duration: \"\",\n      updateId: null,\n      inputSearch: \"\",\n    };\n  },\n  methods: {\n    switchs() {\n      this.changeBtn = !this.changeBtn;\n    },\n    handleDuration(data) {\n      console.log(data);\n      this.duration = data.days_left;\n      this.updateId = data.id;\n      this.$store.state.closeContact.update.dialog = true;\n    },\n    closeDialog() {\n      this.$store.state.closeContact.update.dialog = false;\n      this.deleteDialog = false;\n      console.log(\"closed\");\n    },\n    handleDurationSubmit() {\n      this.$store.dispatch(\"closeContact/updatePatientDuration\", {\n        id: this.updateId,\n        duration: this.duration,\n      });\n    },\n    pageSwitch(data) {\n      this.$store.dispatch(\"closeContact/getPatient\", data);\n    },\n    handleSearch() {\n      this.$store.dispatch(\"closeContact/searchPatient\", this.inputSearch);\n    },\n    handleDeleteDialog(data) {\n      this.deleteId = data.id;\n      this.deleteDialog = true;\n    },\n    async handleSubmitDelete() {\n      const res = await this.$store.dispatch(\"closeContact/deletePatient\", {\n        deleteId: this.deleteId,\n      });\n\n      if (res) {\n        this.deleteSnackBar = true;\n        this.deleteId = null;\n        this.deleteDialog = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.bg {\n  background-color: #f8f0f0;\n}\n.adj {\n  width: 280px;\n}\n</style>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/DeclarationForm.vue",["370"],"<template>\n  <v-app class=\"bg\">\n    <v-main class=\"bg\">\n      <div class=\"ma-12\">\n        <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">\n          Health Declaration Records\n        </h2>\n        <h5 class=\"secondary--text\">user's health declaration responses</h5>\n\n        <v-row justify=\"start\" class=\"mt-8\">\n          <v-col cols=\"4\">\n            <v-card class=\"rounded-lg\">\n              <v-card-title class=\"font-weight-bold primary--text\"\n                >Today Responses</v-card-title\n              >\n              <v-card-text>\n                <v-row>\n                  <v-col>\n                    <div class=\"d-flex justify-center py-6\">\n                      <h1 class=\"teal--text\">{{today}}</h1>\n                    </div>\n                  </v-col>\n                </v-row>\n              </v-card-text>\n            </v-card>\n          </v-col>\n          <v-col cols=\"4\">\n            <v-card class=\"rounded-lg\">\n              <v-card-title class=\"font-weight-bold primary--text\"\n                >Total Responses</v-card-title\n              >\n              <v-card-text>\n                <v-row>\n                  <v-col>\n                    <div class=\"d-flex justify-center py-6\">\n                      <h1 class=\"secondary--text mr-4\">{{total}}</h1>\n                    </div>\n                  </v-col>\n                </v-row>\n              </v-card-text>\n            </v-card>\n          </v-col>\n        </v-row>\n\n        <div class=\"adj mt-12 mb-n3 d-flex\">\n          <v-text-field\n            class=\"mr-2\"\n            label=\"Search here\"\n            solo\n            dense\n            v-model=\"inputSearch\"\n          ></v-text-field>\n          <v-btn color=\"primary\" @click=\"handleSearch\"><v-icon>search</v-icon></v-btn>\n        </div>\n\n        <v-simple-table class=\"rounded-lg elevation-6\">\n          <thead>\n            <tr>\n              <th class=\"text-left black--text\">Name</th>\n\n              <th class=\"text-left black--text text-center\">Time Submitted</th>\n\n              <th class=\"text-left black--text text-center\">Date Submitted</th>\n\n              <th class=\"text-left black--text text-center\">Actions</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr\n              class=\"text-center\"\n              v-for=\"response in responses\"\n              :key=\"response.id\"\n            >\n            <td class=\"text-left font-weight-bold primary--text text-capitalize\">\n              {{\n                `${response.user_account.first_name} ${response.user_account.middle_name} ${response.user_account.last_name}`\n              }}\n              <div class=\"secondary--text font-weight-thin\">\n                {{ response.user_account.classification.name }}\n              </div>\n            </td>\n              <td>{{ response.created_at | filterTime }}</td>\n              <td>{{ response.created_at | filterDate }}</td>\n              <td>\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      color=\"primary\"\n                      dark\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      icon\n                      @click=\"handleResponse(response.answers)\"\n                      ><v-icon>description</v-icon></v-btn\n                    >\n                  </template>\n                  <span>Check Form</span>\n                </v-tooltip>\n                <!-- \n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on, attrs }\">\n                      <v-btn color=\"error\" dark v-bind=\"attrs\" v-on=\"on\" icon><v-icon>delete_forever</v-icon></v-btn>\n                    </template>\n                      <span>Delete</span>\n                  </v-tooltip> -->\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table>\n        <v-pagination\n          v-model=\"page_number\"\n          :length=\"page\"\n          class=\"float-left mt-4\"\n          @input=\"pageSwitch\"\n        ></v-pagination>\n      </div>\n    </v-main>\n    <v-dialog v-model=\"checkDialog\" width=\"540\">\n      <v-app-bar color=\"primary\" >\n        <v-app-bar-title class=\"white--text\">\n          <h5>Response</h5>\n        </v-app-bar-title>\n      </v-app-bar>\n      <v-card v-for=\"(response,index) in responseData\" :key=\"response.id\" tile>\n        <v-card-title primary-title class=\"text-justify\">\n          <h6>{{ `${index + 1}. ${response.question.question}` }}</h6>\n        </v-card-title>\n\n        <v-card-text>\n          <ul v-if=\"response.question.sub_question\" class=\"mt-n4\">\n            <li v-for=\"(q,index) in handleQuestion(response.question.sub_question)\" :key=\"index\">\n              <h4>{{q}}</h4>          \n            </li>\n          </ul>\n\n          <div class=\"mt-4\">\n            <!-- <h4 class=\"primary--text\">Answer: {{response.answer == 1 ? \"True\" : \"False\"   }}</h4> -->\n            <v-text-field outlined readonly label=\"Answer\" :value=\"response.answer == 1 ? `Yes` : `No`\"></v-text-field>\n          </div>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n  </v-app>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport moment from \"moment\";\nexport default {\n  mounted() {\n    this.$store.dispatch(\"declaration/getSubmitted\");\n  },\n  filters: {\n    filterDate(val) {\n      return moment(val).format(\"MMM DD, YYYY\").toString();\n    },\n    filterTime(val) {\n      return moment(val).format(\"h:mm a\").toString();\n    },\n    subQ(val){\n      return val\n    }\n  },\n  computed: {\n    ...mapState({\n      responses: (state) => state.declaration.responses.data,\n      page: (state) => state.declaration.responses.page,\n      today: (state) => state.declaration.responses.today,\n      total: (state) => state.declaration.responses.total,\n    }),\n  },\n  data() {\n    return {\n      page_number: null,\n      checkDialog: false,\n      responseData: null,\n      inputSearch:\"\"\n    };\n  },\n  methods: {\n    pageSwitch(data) {\n      this.page_number = data;\n      this.$store.dispatch(\"declaration/getSubmitted\", data);\n    },\n    handleResponse(data) {\n      this.checkDialog = true;\n      this.responseData = data;\n    },\n    handleQuestion(data){\n      console.log(data.split(\",\"));\n      if(data.trim()){\n        const arr = data.split(\",\")\n        return arr\n      }\n      return []\n    },\n    handleSearch(){ \n      this.$store.dispatch(\"declaration/responseSearch\", this.inputSearch);\n    }\n  },\n};\n</script>\n\n<style scoped>\n.bg {\n  background-color: whitesmoke;\n}\n.adj {\n  width: 280px;\n}\n</style>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/ManageContact/IndexView.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/AdminView.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/ManageContact/UserTraceContact.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/ManageContact/TraceContact.vue",["371","372","373"],"<template>\n  <v-container>\n    <div class=\"ma-12\">\n      <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">Trace Contacts</h2>\n      <h5 class=\"secondary--text\">Trace User's Contacts</h5>\n\n      <div class=\"d-flex align-center mt-6\">\n        <v-btn color=\"primary\" @click=\"changeBtn()\" rounded small\n          ><v-icon left>arrow_back</v-icon>\n          <h4>return</h4></v-btn\n        >\n        <h2 class=\"ml-4 text-capitalize\">\n          {{ `${user.first_name} ${user.middle_name} ${user.last_name}` }}\n        </h2>\n      </div>\n\n      <div class=\"d-flex align-stretch mt-6\">\n        <v-menu\n          v-model=\"menu\"\n          :close-on-content-click=\"false\"\n          :nudge-right=\"40\"\n          transition=\"scale-transition\"\n          offset-y\n          min-width=\"auto\"\n        >\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-text-field\n              v-model=\"filterSubmit.date\"\n              label=\"Date Started\"\n              prepend-inner-icon=\"event\"\n              outlined\n              filled\n              dense\n              readonly\n              v-bind=\"attrs\"\n              v-on=\"on\"\n            ></v-text-field>\n          </template>\n          <v-date-picker\n            v-model=\"filterSubmit.date\"\n            @input=\"handleDate\"\n          ></v-date-picker>\n        </v-menu>\n        <!-- <v-select label=\"Time Frame\" outlined filled dense></v-select> -->\n        <v-select\n          label=\"Location\"\n          v-model=\"filterSubmit.location\"\n          prepend-inner-icon=\"location_on\"\n          :loading=\"locationLoading\"\n          :disabled=\"locationLoading\"\n          :items=\"location\"\n          item-text=\"name\"\n          item-value=\"id\"\n          outlined\n          filled\n          dense\n          class=\"ml-2\"\n        ></v-select>\n        <v-btn\n          color=\"primary\"\n          class=\"ml-2 py-5\"\n          medium\n          text\n          :loading=\"visitedLoading\"\n          @click=\"handleFilter\"\n          ><v-icon left>filter_list</v-icon>\n          <h4>Filter</h4></v-btn\n        >\n      </div>\n\n      <!-- <div class=\"adj mt-4 pt-6 d-flex mb-n3\">\n        <v-text-field\n          class=\"mr-2\"\n          label=\"Search here\"\n          solo\n          outlined\n          dense\n        ></v-text-field>\n        <v-btn color=\"primary\" class=\"py-5\"><v-icon>search</v-icon></v-btn>\n      </div> -->\n      <div class=\"d-flex justify-end\">\n        <v-btn\n          color=\"primary\"\n          :loading=\"contactLoading\"\n          class=\"text-capitalize mb-2\"\n          :class=\"[validate() ? `d-none` : ``]\"\n          @click=\"submitSelected\"\n          >Submit Selected As Contact</v-btn\n        >\n      </div>\n      <v-simple-table class=\"rounded-lg elevation-6\">\n        <thead>\n          <tr class=\"text-left\">\n            <th>\n              <v-checkbox\n                v-model=\"checkBox.checkAll\"\n                @click=\"handleCheck\"\n              ></v-checkbox>\n            </th>\n            <th class=\"black--text\">\n              <h3>Name</h3>\n            </th>\n\n            <th class=\"text-center black--text\">\n              <h3>Location Visited</h3>\n            </th>\n\n            <th class=\"text-center black--text\">\n              <h3>Time In</h3>\n            </th>\n\n            <th class=\"text-center black--text\">\n              <h3>Date</h3>\n            </th>\n            <!-- <th class=\"text-center black--text\">\n              <h3>Time Out</h3>\n            </th>\n\n            <th class=\"text-center black--text text-center\">\n              <h3>Total Time</h3>\n            </th>\n             -->\n\n            <th class=\"text-center black--text\">\n              <h3>Action</h3>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr\n            class=\"text-center text-capitalize\"\n            v-for=\"(visited, index) in visiteds\"\n            :key=\"visited.id\"\n            :class=\"\n              visited.user_account.user_tagged.length ||\n              visited.user_account.user_patient.length\n                ? `d-none`\n                : 'white'\n            \"\n          >\n            <td class=\"text-center\">\n              <v-checkbox\n                v-model=\"checkBox.checkBoxes[index]\"\n                :value=\"visited.user_account.id\"\n              ></v-checkbox>\n            </td>\n            <td class=\"text-left font-weight-bold primary--text\">\n              {{\n                `${visited.user_account.first_name} ${visited.user_account.middle_name} ${visited.user_account.last_name}`\n              }}\n              <div class=\"secondary--text font-weight-thin\">\n                {{ visited.user_account.classification.name }}\n              </div>\n            </td>\n            <td>{{ visited.location.name }}</td>\n            <td>{{ visited.created_at | filterTime }}</td>\n            <td>{{ visited.created_at | filterDate }}</td>\n            <td>\n              <v-menu\n                offset-y\n                bottom\n                transition=\"slide-y-transition\"\n                rounded=\"lg\"\n              >\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    color=\"primary\"\n                    dark\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                    icon\n                    large\n                  >\n                    <v-icon>menu_open</v-icon>\n                  </v-btn>\n                </template>\n                <v-list>\n                  <v-list-item\n                    :to=\"`/admin/checkprofile/${visited.user_account.id}`\"\n                  >\n                    <v-list-item-icon class=\"mr-4\"\n                      ><v-icon color=\"primary\"\n                        >account_circle</v-icon\n                      ></v-list-item-icon\n                    >\n                    <v-list-item-title class=\"font-weight-bold\"\n                      ><h5>Check Profile</h5></v-list-item-title\n                    >\n                  </v-list-item>\n                  <v-divider></v-divider>\n                  <v-list-item @click=\"markContact(visited)\">\n                    <v-list-item-icon class=\"mr-4\"\n                      ><v-icon color=\"primary\"\n                        >reduce_capacity</v-icon\n                      ></v-list-item-icon\n                    >\n                    <v-list-item-title class=\"font-weight-bold\"\n                      ><h5>Mark As Close Contact</h5></v-list-item-title\n                    >\n                  </v-list-item>\n                </v-list>\n              </v-menu>\n            </td>\n          </tr>\n        </tbody>\n      </v-simple-table>\n      <!-- <v-pagination\n        v-model=\"page\"\n        :length=\"4\"\n        class=\"float-right mt-4\"\n        @input=\"pageSwitch\"\n      ></v-pagination> -->\n      <v-snackbar\n        v-model=\"snackBar\"\n        timeout=\"2000\"\n        color=\"success\"\n        bottom\n        right\n      >\n        <v-icon class=\"pr-2\">check</v-icon>\n        successfully classified as close contact.\n      </v-snackbar>\n    </div>\n  </v-container>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport moment from \"moment\";\nexport default {\n  mounted() {\n    this.$store.dispatch(\"user/checkProfile\", this.$route.params.id);\n    this.$store.dispatch(\n      \"traceContact/getVisitedLocation\",\n      this.$route.params.id\n    );\n    this.$store.dispatch(\"location/get\");\n  },\n  filters: {\n    filterDate(val) {\n      return moment(val).format(\"MMM. DD,YYYY\").toString();\n    },\n    filterTime(val) {\n      return moment(val).format(\"h:m:ss a\").toString();\n    },\n  },\n  computed: {\n    ...mapState({\n      user: (state) => state.user.checkProfile.data,\n      visiteds: (state) => state.traceContact.all.data,\n      contactLoading: (state) => state.traceContact.selected.loading,\n      visitedLoading: (state) => state.traceContact.all.loading,\n      location: (state) => state.location.all.data,\n      locationLoading: (state) => state.location.all.loading,\n    }),\n  },\n  data() {\n    return {\n      checkBox: {\n        checkAll: false,\n        checkBoxes: [],\n      },\n      docState: \"saved\",\n      snackBar: false,\n      title: \"\",\n      page: 1,\n      menu: false,\n      filterSubmit: {\n        location: \"\",\n        date: \"\",\n        id: this.$route.params.id,\n      },\n    };\n  },\n  methods: {\n    validate() {\n      const filtered = this.checkBox.checkBoxes.filter((f) => {\n        return f != null;\n      });\n\n      return filtered.length ? false : true;\n    },\n    async submitSelected() {\n      const filtered = this.checkBox.checkBoxes.filter((f) => {\n        return f != null;\n      });\n\n      const res = await this.$store.dispatch(\n        \"traceContact/submitCheckSelected\",\n        {\n          id: this.$route.params.id,\n          data: {\n            selected: filtered,\n          },\n        }\n      );\n\n      if (res) {\n        this.checkBox.checkBoxes = [];\n        this.handleFilter();\n        this.snackBar = true;\n      }\n    },\n    handleCheck() {\n      console.log(\"hehe\", this.checkBox.checkAll);\n      this.checkBox.checkBoxes = [];\n\n      if (this.checkBox.checkAll) {\n        for (const select of this.visiteds) {\n          this.checkBox.checkBoxes.push(select.user_account.id);\n        }\n      }\n    },\n    handleSubmitCheck() {},\n    changeBtn() {\n      this.$router.go(-1);\n    },\n    handleFilter() {\n      this.$store.dispatch(\n        \"traceContact/filterVisitedRecord\",\n        this.filterSubmit\n      );\n    },\n    handleDate(data) {\n      console.log(data);\n      this.filterSubmit.location = \"\";\n      this.menu = false;\n    },\n    async markContact(user) {\n      const submit = {\n        tag: user.user_account_id,\n        patient: this.$route.params.id,\n        filter: this.filterSubmit,\n      };\n      const res = await this.$store.dispatch(\n        \"traceContact/submitContact\",\n        submit\n      );\n      if (res) {\n        this.handleFilter();\n        this.snackBar = true;\n      }\n      console.log(submit);\n    },\n  },\n};\n</script>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/ManageForm.vue",["374"],"<template>\n  <v-main class=\"accent\">\n    <v-container fluid>\n      <addDialog\n        :dialog=\"dialog.add\"\n        @handleDialog=\"dialog.add = false\"\n        @snackBar=\"snackBar['store'] = true\"\n      />\n      <updateDialog\n        :dialog=\"dialog['update']\"\n        :updateData = \"updateData\"\n        @handleUpdateData = \"updateData = null\"\n        @handleDialog = \"dialog['update'] = false\"\n        @snackBar=\"snackBar['update']  = true\"\n      />\n      <div class=\"ma-lg-12\">\n        <h2 class=\"primary--text font-weight-bold mt-12 mb-1\">Manage Form</h2>\n        <h5 class=\"secondary--text\">List of Health Declaration Form</h5>\n\n        <div class=\"mt-4 pt-6 d-flex justify-end mb-6\">\n          <!-- <div class=\"d-flex adj\">\n              <v-text-field\n                class=\"mr-2\"\n                label=\"Search here\"\n                solo\n                dense\n                v-model=\"inputSearch\"\n              ></v-text-field>\n              <v-btn color=\"primary\" @click=\"handleSearch\"><v-icon>search</v-icon></v-btn>\n            </div> -->\n\n          <v-btn\n            @click=\"handleDialog\"\n            color=\"primary\"\n            class=\"px-8 py-2 font-weight-bold\"\n            ><v-icon left>add</v-icon> Question</v-btn\n          >\n        </div>\n\n        <v-card\n          v-for=\"question in questions\"\n          :key=\"question.id\"\n          class=\"mb-4 rounded-lg\"\n        >\n          <v-card-title class=\"font-weight-bold primary--text\">Question</v-card-title>\n          <v-card-text>\n            <div class=\"text-body-1 font-weight-bold black--text\">\n              {{ question.question }}\n            </div>\n            <div class=\"mt-2\">\n              <ul v-if=\"question.sub_question\">\n                <li\n                  v-for=\"(list, index) in questionSplit(question.sub_question)\"\n                  :key=\"index\"\n                >\n                  {{ list }}\n                </li>\n              </ul>\n            </div>\n          </v-card-text>\n          <v-card-actions class=\"ml-4\">\n            <v-tooltip bottom >\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-btn\n                  class=\"text-capitalize mr-2\"\n                  color=\"primary\"\n                  @click=\"handleUpdateDialog(question)\"\n                  dark\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                  ><v-icon>article</v-icon> Update Form</v-btn\n                >\n              </template>\n              <span>update form</span>\n            </v-tooltip>\n            <v-tooltip bottom>\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-btn\n                  class=\"text-capitalize\"\n                  color=\"error\"\n                  dark\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                  @click=\"openDeleteDialog(question)\"\n                  ><v-icon>delete_forever</v-icon> Delete</v-btn\n                >\n              </template>\n              <span>Delete</span>\n            </v-tooltip>\n          </v-card-actions>\n        </v-card>\n        <!-- <v-simple-table class=\"rounded-lg elevation-6\">\n          <thead>\n            <tr class=\"text-center\">\n              <th class=\"text-left black--text\">Questions</th>\n              <th class=\"text-left black--text\">Sub List</th>\n              <th class=\"text-left black--text text-center\">Status</th>\n              <th class=\"text-left black--text text-center\">Actions</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr\n              v-for=\"question in questions\"\n              :key=\"question.id\"\n              class=\"text-center text-capitalize\"\n            >\n              <td class=\"text-left text-justify py-4\">\n                {{ `${question.question}` }}\n              </td>\n              <td class=\"text-left text-justify py-4\">\n                <ul v-if=\"question.sub_question\">\n                  <li\n                    v-for=\"(list, index) in questionSplit(\n                      question.sub_question\n                    )\"\n                    :key=\"index\"\n                  >\n                    {{ list }}\n                  </li>\n                </ul>\n              </td>\n              <td class=\"\">\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      class=\"text-capitalize\"\n                      color=\"primary\"\n                      @click=\"changeStatus(question)\"\n                      dark\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      icon\n                      ><v-icon>article</v-icon></v-btn\n                    >\n                  </template>\n                  <span>Change Status</span>\n                </v-tooltip>\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      class=\"text-capitalize\"\n                      color=\"error\"\n                      dark\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                      @click=\"openDeleteDialog(question)\"\n                      icon\n                      ><v-icon>delete_forever</v-icon></v-btn\n                    >\n                  </template>\n                  <span>Delete</span>\n                </v-tooltip>\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table> -->\n        <!-- <v-pagination\n          v-model=\"page_number\"\n          :length=\"page\"\n          total-visible=\"6\"\n          class=\"float-left mt-4\"\n          @input=\"pageSwitch\"\n        ></v-pagination> -->\n      </div>\n      <!-- Station Delete Dialog -->\n      <v-dialog v-model=\"deleteDialog\" width=\"auto\">\n        <v-card>\n          <v-card-title class=\"primary accent--text\"\n            >Delete Station</v-card-title\n          >\n          <v-card-text>\n            <v-container>\n              <h3 class=\"font-weight-regular mt-6 mx-8\">\n                Are you sure to Delete?\n              </h3>\n            </v-container>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"black\"\n              plain\n              text\n              class=\"text-capitalize\"\n              @click=\"closeDeleteDialog\"\n              >Cancel</v-btn\n            >\n            <v-btn color=\"error\" :loading=\"deleteLoading\" class=\"text-capitalize px-6\" @click=\"deleteForm\">Delete</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <v-snackbar v-model=\"snackBar.store\" color=\"success\" bottom right>\n        <v-icon>check</v-icon> Form Added Successfully\n      </v-snackbar>\n\n      <v-snackbar v-model=\"snackBar.update\" color=\"success\" bottom right>\n        <v-icon>check</v-icon> Form Updated Successfully\n      </v-snackbar>\n\n      <v-snackbar v-model=\"snackBar.delete\" color=\"error\" bottom right>\n        <v-icon>check</v-icon> Form Deleted Successfully\n      </v-snackbar>\n    </v-container>\n  </v-main>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport addDialog from \"./Dialog/Form/AddDialog.vue\";\nimport updateDialog from \"./Dialog/Form/UpdateDialog.vue\";\n\nexport default {\n  components: { updateDialog,addDialog },\n  mounted() {\n    this.$store.dispatch(\"questions/getData\");\n  },\n  computed: {\n    ...mapState({\n      questions: (state) => state.questions.all.data,\n      deleteLoading:(state) => state.questions.delete.loading\n    }),\n  },\n  data() {\n    return {\n      dialog: {\n        add: false,\n        update:false\n      },\n      updateData:null,\n      deleteDialog: false,\n      formData: null,\n      page_number: 1,\n      inputSearch: \"\",\n      snackBar: {\n        update: false,\n        store: false,\n        delete: false,\n      },\n    };\n  },\n  methods: {\n    questionSplit(data) {\n      const split = data.split(\",\");\n\n      return split;\n    },\n    openDeleteDialog(data) {\n      this.deleteDialog = true;\n      this.formData = data;\n    },\n    closeDeleteDialog() {\n      this.deleteDialog = false;\n    },\n    async deleteForm() {\n      const res = await this.$store.dispatch(\"questions/delete\", this.formData);\n      if (res) {\n        this.deleteDialog = false;\n        this.snackBar['delete'] = true\n      }\n    },\n    handleDialog() {\n      this.dialog[\"add\"] = true;\n    },\n    handleUpdateDialog(data){\n      this.updateData = data\n      this.dialog['update'] = true\n    },\n    changeStatus(data) {\n      this.$store.dispatch(\"station/changeStatus\", data);\n    },\n    pageSwitch(data) {\n      this.page_number = data;\n      this.$store.dispatch(\"station/get\", data);\n    },\n    async handleSearch() {\n      const res = await this.$store.dispatch(\n        \"station/search\",\n        this.inputSearch\n      );\n\n      console.log(\"res\", res);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.bg {\n  background-color: #f8f0f0;\n}\n.adj {\n  width: 280px;\n}\n</style>\n","/home/wardy/Desktop/capstone/fe/src/store/modules/face.js",["375","376","377","378"],"import * as faceapi from 'face-api.js'\n\nexport default {\n    namespaced: true,\n    state: () => ({\n        loading: false,\n        loaded: false\n    }),\n    mutations: {\n        loading(state){\n            state.loading = true\n        },\n        load(state){\n            state.loading = false\n            state.loaded = true\n        }\n    },\n    actions: {\n        async load({commit, state}){\n            if (!state.loading && !state.loaded) {\n                commit('loading')\n                return Promise.all([\n                    faceapi.nets.tinyFaceDetector.loadFromUri('/models'),\n                    faceapi.nets.faceRecognitionNet.loadFromUri('/models'),\n                    faceapi.nets.faceLandmark68Net.loadFromUri('/models'),\n                    faceapi.nets.ssdMobilenetv1.loadFromUri('/models'),\n                    faceapi.nets.faceExpressionNet.loadFromUri('/models')\n                ])\n                .then(() => {\n                    commit('load')\n                    console.log(\"Loaded\")\n                    console.log(faceapi.nets)\n                })\n            }\n    \n        },\n        async run(){\n           const videoEl = document.getElementById('inputVideo')\n           \n            navigator.getUserMedia(\n                { video: {} },\n                stream => videoEl.srcObject = stream,\n                err => console.error(err)\n            ) \n            \n            videoEl.addEventListener('play', async () => {\n                //const canvas = faceapi.createCanvasFromMedia(videoEl)\n                const canvas = document.getElementById('canvas')\n                const displaySize = {width: videoEl.width, height: videoEl.height}\n                faceapi.matchDimensions(canvas,displaySize)\n                setInterval(async () => {\n                    const detections = await faceapi.detectAllFaces(videoEl, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions()\n                    console.log(detections)\n\n                    const resizedDetections = faceapi.resizeResults(detections,displaySize)\n                    canvas.getContext('2d').clearRect(0,0,canvas.width,canvas.height)\n                    faceapi.draw.drawDetections(canvas, resizedDetections)\n                    faceapi.draw.drawFaceLandmarks(canvas, resizedDetections)\n                     faceapi.draw.drawFaceExpressions(canvas, resizedDetections)\n                },100)\n            })\n\n        }\n    },\n    getters: {\n\n    }\n}","/home/wardy/Desktop/capstone/fe/src/store/modules/user.js",["379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395"],"import axios from \"@/config/axios\";\n\nexport default {\n  namespaced: true,\n  state: () => ({\n    all: {\n      data: [],\n      loading: false,\n      error: \"\",\n      page: 1,\n    },\n    store: {\n      loading: false,\n      error: \"\",\n    },\n    credentials: {\n      data: \"null\",\n      loading: false,\n      next: false,\n      error: false,\n      message: \"\",\n    },\n    updateProfile: {\n      loading: false,\n      error: false,\n      success: false,\n      message: \"\",\n      dialog: false,\n    },\n    checkProfile: {\n      data: null,\n      loading: false,\n    },\n    password: {\n      loading: false,\n      error: false,\n      success: false,\n      message: \"\",\n    },\n    details:{\n      data:null\n    }\n  }),\n  mutations: {\n    user(state, data) {\n      state.credentials.data = data;\n    },\n    profile(state, data) {\n      state.checkProfile.data = data;\n    },\n    next(state, data) {\n      state.credentials.next = data;\n    },\n    setData(state, data) {\n      state[data.type].data = data.data;\n    },\n    setPage(state, data) {\n      state[data.type].page = data.page\n    },\n    setLoading(state, data) {\n      state[data.type].loading = data.loading;\n    },\n    loading(state, loading) {\n      state.credentials.loading = loading;\n    },\n    error(state, error) {\n      state.credentials.error = error.error;\n      state.credentials.message = error.message;\n    },\n    password(state, error) {\n      state.password.error = error.error;\n      state.password.message = error.message;\n    },\n  },\n  actions: {\n    async getAllUser({ commit }, param) {\n      commit(\"setLoading\", { type: \"all\", loading: true });\n      try {\n        const { data } = await axios.get(`clinic/get-users?page=${param}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n        await commit(\"setLoading\", { type: \"all\", loading: false });\n        await commit(\"setData\", { type: \"all\", data: data.data.data });\n        await commit(\"setPage\", { type: \"all\", page: data.data.last_page });\n        console.log(data.data);\n      } catch (error) {\n        commit(\"setLoading\", { type: \"all\", loading: true });\n        console.log(error);\n      }\n    },\n    async userSearch({ commit, dispatch }, param) {\n      commit(\"setLoading\", { type: \"all\", loading: true });\n      if (!param.trim()) {\n        dispatch('getAllUser')\n        return false\n      }\n      try {\n        const { data } = await axios.get(`clinic/user-search/${param}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n        await commit(\"setLoading\", { type: \"all\", loading: false });\n        await commit(\"setData\", { type: \"all\", data: data.data });\n        console.log(data.data);\n      } catch (error) {\n        commit(\"setLoading\", { type: \"all\", loading: true });\n        console.log(error);\n      }\n    },\n    async checkProfile({ commit }, payload) {\n      // commit(\"loading\", true);\n      try {\n        const { data } = await axios.get(`user/check-profile/${payload}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n        console.log(\"checkProfile\", data);\n        commit(\"profile\", data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getUser({ commit }) {\n      commit(\"loading\", true);\n      axios\n        .get(\"user\", {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          commit(\"loading\", false);\n          commit(\"user\", res.data.data);\n          console.log(res.data.data);\n        })\n        .catch(() => {\n          commit(\"loading\", false);\n        });\n    },\n    async updateProfile({ commit, state }, payload) {\n      state.updateProfile.loading = true;\n      state.updateProfile.error = false;\n      state.updateProfile.success = false;\n      axios\n        .put(`user/update/${payload.id}`, payload, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          commit(\"user\", res.data.data);\n          state.updateProfile.loading = false;\n          state.updateProfile.dialog = false;\n          state.updateProfile.success = true;\n          state.updateProfile.message =\n            \"Personal Information Updated Successfully.\";\n        })\n        .catch((err) => {\n          state.updateProfile.dialog = false;\n          state.updateProfile.loading = false;\n          state.updateProfile.error = true;\n          state.updateProfile.message = err.response.data.message;\n          console.log(err.response.data);\n        });\n    },\n    async changePassword({ commit, state }, payload) {\n      console.log(commit);\n      console.log(payload);\n      state.password.loading = true;\n      commit(\"password\", {\n        error: false,\n        message: \"\"\n      });\n      state.password.success = false;\n      axios\n        .put(\"user/update-password\", payload, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          state.password.loading = false;\n          state.password.success = true;\n          state.password.message = res.data.message;\n          console.log(res.data);\n        })\n        .catch((err) => {\n          commit(\"password\", {\n            error: true,\n            message: err.response.data.errors,\n          });\n          state.password.loading = false;\n          console.log(err.response.data);\n        });\n    },\n    async login({ commit }, payload) {\n      commit(\"loading\", true);\n      await axios\n        .post(\"login-user\", payload)\n        .then((res) => {\n          localStorage.setItem(\"token\", res.data.token);\n          commit(\"user\", res.data.data);\n          commit(\"next\", true);\n          commit(\"loading\", false);\n          console.log(res.data);\n        })\n        .catch((err) => {\n          console.log(err.response.data);\n          commit(\"loading\", false);\n          commit(\"error\", { error: true, message: err.response.data.errors });\n        });\n    },\n    async logout({ commit }) {\n      axios\n        .post(\"logout\", {})\n        .then((res) => {\n          commit(\"user\", null);\n          localStorage.removeItem(\"token\");\n          console.log(res.data);\n        })\n        .catch((err) => {\n          console.log(err.response.data);\n        });\n    },\n    async reset({ commit }) {\n      commit(\"next\", false);\n    },\n    async userDetails({commit},id){\n      try {\n          const {data} = await axios.get(`user-details/${id}`,{\n            headers:{\n              Authorization : `Bearer ${localStorage.getItem('token')}`\n            }\n          })\n          \n          commit('setData',{type:\"details\",data:data})\n      } catch (error) {\n          console.log(error);\n      }\n    }\n  },\n  getters: {},\n};\n","/home/wardy/Desktop/capstone/fe/src/store/modules/declaration.js",["396","397","398","399","400","401"],"import axios from \"@/config/axios\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n  namespaced: true,\n  state: () => ({\n    all: {\n      data: [],\n      loading: false,\n      error: false,\n    },\n    responses: {\n      data: [],\n      loading: false,\n      page: 1,\n      total: null,\n      today: null,\n    },\n    submit: {\n      loading: false,\n      error: false,\n      message: \"\",\n    },\n    existForm: {\n      data: [],\n      exist: false,\n    },\n  }),\n  mutations: {\n    setData(state, payload) {\n      state[payload.type].data = payload.data;\n    },\n    setLoading(state, payload) {\n      state[payload.type].loading = payload.loading;\n    },\n    setPage(state, payload) {\n      state[payload.type].page = payload.page;\n    },\n    setError(state, payload) {\n      state[payload.type].error = payload.error;\n      state[payload.type].message = payload.message;\n    },\n    setTotal(state, payload) {\n      state[payload.type].total = payload.total;\n    },\n    setToday(state, payload) {\n      state[payload.type].today = payload.today;\n    },\n  },\n  actions: {\n    async getQuestions({ commit }) {\n      commit(\"setLoading\", { type: \"all\", loading: true });\n      axios\n        .get(\"get-form\", {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          commit(\"setData\", { type: \"all\", data: res.data.data });\n          commit(\"setLoading\", { type: \"all\", loading: false });\n          console.log(\"forms\", res.data);\n        });\n    },\n    async submitForm({ commit, dispatch }, payload) {\n      commit(\"setLoading\", { type: \"submit\", loading: true });\n\n      try {\n        const res = await axios.post(\n          \"submit-form\",\n          { answers: payload },\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        );\n        commit(\"setLoading\", { type: \"submit\", loading: false });\n        Swal.fire({\n          title: \"Success\",\n          text: \"Successfully Submitted\",\n          icon: \"success\",\n          confirmButtonText: \"close\",\n          timer: 2000,\n        });\n\n        dispatch(\"getQuestions\");\n        dispatch(\"checkExist\");\n        console.log(res.data);\n        return true\n      } catch (err) {\n        commit(\"setLoading\", { type: \"submit\", loading: false });\n        console.log(err.response);\n\n        return false\n      }\n    },\n    async checkExist({ commit, state }) {\n      axios\n        .get(\"check-user-response\", {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          commit(\"setData\", { type: \"existForm\", data: res.data.data });\n          // commit('setLoading',{type:'all',loading:false})\n          state.existForm.exist = res.data.exists;\n          console.log(\"exist\", res.data);\n        });\n    },\n    async getSubmitted({ commit }, param) {\n      axios\n        .get(`get-response?page=${param}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          commit(\"setData\", { type: \"responses\", data: res.data.data.data });\n          commit(\"setPage\", {\n            type: \"responses\",\n            page: res.data.data.last_page,\n          });\n          commit(\"setTotal\", { type: \"responses\", total: res.data.total });\n          commit(\"setToday\", { type: \"responses\", today: res.data.today });\n\n          console.log(\"exidast\", res.data);\n        });\n    },\n    async responseSearch({ commit, dispatch }, param) {\n      if (!param.trim()) {\n        dispatch(\"getSubmitted\");\n      }\n      axios\n        .get(`clinic/response-search/${param}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          commit(\"setData\", { type: \"responses\", data: res.data.data });\n          console.log(\"exidast\", res.data);\n        });\n    },\n  },\n};\n","/home/wardy/Desktop/capstone/fe/src/store/modules/followUps.js",["402","403","404","405","406","407","408"],"import axios from \"@/config/axios\";\nimport Swal from \"sweetalert2\";\nexport default {\n  namespaced: true,\n  state: () => ({\n    all: {\n      data: {},\n      error: false,\n      message: \"\",\n      dialog: false,\n      loading: false,\n      page: 1,\n    },\n    check: {\n      data: null,\n      health: null,\n      loading: false,\n    },\n  }),\n  mutations: {\n    setDialog(state, data) {\n      state.all.dialog = data;\n    },\n    setLoading(state, data) {\n      state.all.loading = data;\n    },\n    setError(state, data) {\n      state.all.error = data.error;\n      state.all.message = data.message;\n    },\n    setData(state, data) {\n      state[data.type].data = data.data;\n    },\n    setPage(state, data) {\n      state[data.type].page = data.page;\n    },\n  },\n  actions: {\n    async followUp({ commit, dispatch }, payload) {\n      commit(\"setLoading\", true);\n\n      try {\n        const res = await axios.post(\"submit-follow-up\", payload, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n        commit(\"setLoading\", false);\n        commit(\"setDialog\", false);\n        dispatch(\"checkFollowUp\");\n        Swal.fire({\n          title: \"Success\",\n          text: \"Successfully Submitted\",\n          icon: \"success\",\n          confirmButtonText: \"close\",\n          timer: 2000,\n        });\n        console.log(res.data);\n\n        return true;\n      } catch (err) {\n        commit(\"setError\", {\n          error: true,\n          message: err.response.data.message,\n        });\n        commit(\"setLoading\", false);\n        console.log(err.response.data);\n\n        return false;\n      }\n    },\n    async checkFollowUp({ commit, state }) {\n      axios\n        .get(\"check-followup\", {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          commit(\"setData\", { type: \"check\", data: res.data });\n          state.check.health = res.data.healthDeclaration;\n          console.log(\" check followUps \", res.data);\n          console.log(res.data);\n        })\n        .catch((err) => {\n          console.log(err.response.data);\n        });\n    },\n    async allFollowUp({ commit }, params) {\n      axios\n        .get(`clinic/all-follow-ups?page=${params}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          commit(\"setData\", { type: \"all\", data: res.data });\n          commit(\"setPage\", { type: \"all\", page: res.data.data.last_page });\n          console.log(\"alllfollowUps\", res.data);\n        })\n        .catch((err) => {\n          console.log(err.response.data);\n        });\n    },\n  },\n};\n","/home/wardy/Desktop/capstone/fe/src/store/modules/clinic.js",["409","410","411","412","413","414","415","416"],"import axios from \"@/config/axios\";\n\nexport default {\n  namespaced: true,\n  state: () => ({\n    credentials: {\n      data: null,\n      loading: false,\n      error: false,\n      next: false,\n      success:false,\n      message: \"\",\n      back:false\n    },\n    role:[]\n  }),\n  mutations: {\n    setData(state, payload) {\n      state[payload.type].data = payload.data;\n    },\n    next(state, data) {\n      state.credentials.next = data;\n    },\n    setBack(state,data){\n      state.credentials.back = data\n    },\n    setLoading(state, payload) {\n      state[payload.type].loading = payload.loading;\n    },\n    setError(state, payload) {\n      state[payload.type].error = payload.error;\n      state[payload.type].message = payload.message;\n    },\n    setRole(state,payload){\n      state.role = payload\n    },\n    setSuccess(state,payload){\n      state.credentials.success = payload\n    }\n  },\n  actions: {\n    async changePassword ({commit},params){\n      commit('setError',{type:\"credentials\",error:null})\n      commit('setSuccess',false)\n      axios.post(`clinic/change-password/${params.id}`,params.forms,{headers:{\n        \"Authorization\" : `Bearer ${localStorage.getItem('token')}`\n      }}).then(res =>{\n          commit('setSuccess',true)\n          console.log(res);\n          console.log(commit);\n      }).catch(err =>{\n        console.log(err.response);\n        commit('setError',{type:\"credentials\",error:err.response.data.errors})\n      })\n    },\n    async getRole({commit}){\n      axios.get('clinic/role',{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}}).then(res =>{\n        commit(\"setRole\",res.data.data)\n        console.log('role',res.data.data);\n      })\n    },\n    async getUser({ commit }) {\n      commit(\"setLoading\", {type:\"credentials\",loading:true});\n      axios.get(\"user-clinic\",{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}}).then((res) => {\n        commit(\"setData\", { type: \"credentials\", data: res.data.data });\n        commit(\"setLoading\", {type:\"credentials\",loading:false});\n        console.log(res.data.data);\n      }).catch(() =>{\n        commit(\"setLoading\", {type:\"credentials\",loading:false});\n        localStorage.removeItem('token')\n      });\n    },\n    async loadUser({ commit }) {\n      axios.get(\"user-clinic\",{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}}).then((res) => {\n        commit(\"setData\", { type: \"credentials\", data: res.data.data });\n        console.log(res.data.data);\n      }).catch(() =>{\n        localStorage.removeItem('token')\n      });\n    },\n    async login({ commit }, payload) {\n      commit(\"setLoading\", { type: \"credentials\", loading: true });\n      commit(\"setError\", { type: \"credentials\", error: false, message: \" \" });\n      axios\n        .post(\"login-clinic\", payload)\n        .then((res) => {\n          commit(\"setData\", { type: \"credentials\", data: res.data.data });\n          localStorage.setItem(\"token\", res.data.token);\n          commit(\"next\", true);\n          commit(\"setLoading\", { type: \"credentials\", loading: false });\n          console.log(res.data);\n        })\n        .catch((err) => {\n          commit(\"setLoading\", { type: \"credentials\", loading: false });\n          commit(\"setError\", {\n            type: \"credentials\",\n            error: true,\n            message: err.response.data.errors,\n          });\n          console.log(err.response.data);\n        });\n    },\n    async reset({ commit }) {\n      commit(\"next\", false);\n    },\n  },\n};\n","/home/wardy/Desktop/capstone/fe/src/store/modules/stations.js",["417","418","419","420","421","422","423","424","425","426"],"import axios from \"@/config/axios\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n    namespaced: true,\n    state:() =>({\n        all:{\n            data:[],\n            loading:false,\n            page:1,\n        },\n        userRecord:{\n            data:[],\n            loading:false\n        },\n        submit:{\n            dialog:false,\n            error:false,\n            message:\"\",\n            loading:false\n        },\n        delete:{\n            loading:false\n        },\n        status:{\n            loading:false\n        },\n        credentials:{\n            error:false,\n            message:\"\",\n            loading:false,\n            next:false,\n            user:[]\n        }\n    }),\n    mutations:{\n        setData(state,payload){\n            state.all.data = payload\n        },\n        setLoading(state,payload){\n            state[payload.type].loading = payload.loading\n        },\n        setDialog(state,payload){\n            state.submit.dialog = payload\n        },\n        setError(state,payload){\n            state[payload.type].error = payload.error\n            state[payload.type].message = payload.message\n        },\n        setNext(state,payload){\n            state.credentials.next= payload\n        },\n        setUser(state,payload){\n            state.credentials.user = payload\n        },\n        setPage(state,payload){\n            state[payload.type].page = payload.page\n        }\n    },\n    actions:{\n        async login({commit},payload){\n            commit(\"setLoading\",{type:'credentials',loading:true})\n            axios.post('login-station',payload,{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}})\n            .then(res =>{\n                localStorage.setItem(\"token\", res.data.token);\n                commit(\"setLoading\",{type:'credentials',loading:false})\n                commit(\"setNext\",true)                \n                console.log(res);\n            }).catch(err =>{\n                console.log(err.response.data.message);\n                commit(\"setLoading\",{type:'credentials',loading:false})\n                commit(\"setError\",{type:'credentials',error:true,message:err.response.data.message})\n            })\n        },\n        async userStation({commit}){\n            commit(\"setLoading\",{type:'credentials',loading:true})\n            axios.get('user-station',{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}}) \n            .then(res =>{\n                commit('setUser',res.data.data);\n                commit(\"setLoading\",{type:'credentials',loading:false})\n                console.log('station user',res.data.data);\n            }) \n        },\n        async search({commit,dispatch},params){\n            if(!params.trim()){ \n                dispatch('get')\n                return true\n            }\n            axios.get(`clinic/station-search/${params}`,{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}}) \n            .then(res =>{\n                commit('setData',res.data.data);\n                console.log('station',res.data.data);\n            }) \n            return true\n        },\n        async get({commit},params){\n            axios.get(`clinic/get-station?page=${params}`,{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}}) \n            .then(res =>{\n                commit('setData',res.data.data.data);\n                commit('setPage',{type:\"all\",page:res.data.data.last_page})\n                console.log('station',res.data.data.last_page);\n            }) \n        },\n        async submit({commit,dispatch},payload){\n            commit(\"setLoading\",{type:'submit',loading:true})\n            commit(\"setError\",{type:\"submit\",error:false,message:\"\"})\n            axios.post('clinic/register-station',payload,{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}})\n            .then(res =>{\n                dispatch(\"get\")\n                commit(\"setLoading\",{type:'submit',loading:false})\n                commit(\"setDialog\",false)\n                Swal.fire({\n                    title: \"Success\",\n                    text: \"Successfully Created Station\",\n                    icon: \"success\",\n                    confirmButtonText: \"close\",\n                    showCloseButton: true,\n                    html: `The Username & Password is <b>${res.data.data.username}`,\n                  });\n                console.log(res.data)\n            }).catch(err =>{\n                commit(\"setError\",{type:\"submit\",error:true,message:err.response.data.message})\n                commit(\"setLoading\",{type:'submit',loading:false})\n                console.log(err.response.data);\n            })\n        },\n        async delete({commit,dispatch,state},payload){\n            commit(\"setLoading\",{type:\"delete\",loading:true})\n            axios.delete(`clinic/delete-station/${payload.location_id}`,{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}})\n            .then(res =>{\n                dispatch(\"get\",state.all.page)\n                commit(\"setLoading\",{type:\"delete\",loading:true})\n                Swal.fire({\n                    title: \"Success\",\n                    text: \"Successfully Deleted Station\",\n                    icon: \"success\",\n                    confirmButtonText: \"close\",\n                    showCloseButton: true,\n                    timer:2000,\n                    html: `Successfully Deleted Station <br> <b>${payload.username}</b>`,\n                  });\n                console.log(res.data)\n            })\n        },\n        async changeStatus({commit,dispatch},payload){\n            console.log('wew');\n            commit('setLoading',{type:'status',loading:true})\n            axios.put(`clinic/update-status/${payload.id}`,{is_active:payload.is_active},{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}})\n            .then(res =>{\n                dispatch(\"get\")\n                Swal.fire({\n                    title: \"Success\",\n                    text: \"Successfully Change Status\",\n                    icon: \"success\",\n                    confirmButtonText: \"close\",\n                    showCloseButton: true,\n                    timer:2000,\n                    html: `Successfully Change Status`,\n                  });\n\n                console.log('change status',res.data.data)\n            })\n        }\n    }\n\n}","/home/wardy/Desktop/capstone/fe/src/store/modules/register.js",["427","428","429","430","431"],"/home/wardy/Desktop/capstone/fe/src/store/modules/records.js",["432","433","434","435","436","437"],"import axios from \"@/config/axios\";\n\nexport default {\n  namespaced: true,\n  state: () => ({\n    user: {\n      data: [],\n      loading: false,\n      error: false,\n      message: \"\",\n    },\n    clinic: {\n      data: [],\n      loading: false,\n      page: 1,\n      error: false,\n      message: \"\",\n    },\n  }),\n  mutations: {\n    setData(state, payload) {\n      state[payload.type].data = payload.data;\n    },\n    setLoading(state, payload) {\n      state[payload.type].loading = payload.loading;\n    },\n    setPage(state, payload) {\n      state[payload.type].page = payload.page;\n    },\n  },\n  actions: {\n    async allRecords({ commit }, params) {\n      try {\n        const { data } = await axios.get(\n          `clinic/visited-log-record?page=${params}`,\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        );\n        await commit(\"setData\", { type: \"clinic\", data: data.data.data });\n        await commit(\"setPage\", { type: \"clinic\", page: data.data.last_page });\n\n        console.log(\"record\", params);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async useRecords({ commit }) {\n      try {\n        const { data } = await axios.get(\"user/visited-log-record\", {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n        await commit(\"setData\", { type: \"user\", data: data.data });\n        console.log(\"record\", data.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async perStation({ commit },params) {\n      try {\n        const { data } = await axios.get(`clinic/visited-log-record/${params}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n        await commit(\"setData\", { type: \"clinic\", data: data.data.data });\n        await commit(\"setPage\", { type: \"clinic\", page: data.data.last_page });\n\n        console.log('data',data.data.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n};\n","/home/wardy/Desktop/capstone/fe/src/store/modules/traceContact.js",["438","439","440","441","442","443","444"],"import axios from \"@/config/axios\";\n// import { all } from \"core-js/fn/promise\";\n// import Swal from 'sweetalert2'\nexport default {\n  namespaced: true,\n  state: () => ({\n    all: {\n      data: [],\n      error: false,\n      message: \"\",\n      dialog: false,\n      loading: false,\n    },\n    selected: {\n      loading: false,\n    },\n  }),\n  mutations: {\n    setData(state, data) {\n      state[data.type].data = data.data;\n    },\n    setDialog(state, data) {\n      state.all.dialog = data;\n    },\n    setLoading(state, data) {\n      state.all.loading = data;\n    },\n    setError(state, data) {\n      state.all.error = data.error;\n      state.all.message = data.message;\n    },\n  },\n  actions: {\n    async submitCheckSelected({ state }, param) {\n      state.selected.loading = true;\n      try {\n        await axios.post(\n          `clinic/store-contact-selected/${param.id}`,\n          param.data,\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        );\n        state.selected.loading = false;\n        return true;\n      } catch (error) {\n        console.log(error);\n        state.selected.loading = false;\n        return false;\n      }\n    },\n    async getVisitedLocation({ commit }, payload) {\n      commit(\"setLoading\", true);\n      axios\n        .get(`clinic/get-visited-location/${payload}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          const { data } = res.data;\n          commit(\"setLoading\", false);\n          commit(\"setData\", { type: \"all\", data: data });\n          // Swal.fire({\n          //     title: 'Success',\n          //     text: 'Successfully Submitted',\n          //     icon: 'success',\n          //     confirmButtonText: 'close',\n          //     timer: 2000\n          //   })\n          console.log(data);\n        })\n        .catch((err) => {\n          commit(\"setError\", {\n            error: true,\n            message: err.response.data.message,\n          });\n          commit(\"setLoading\", false);\n          console.log(err.response.data);\n        });\n    },\n    async filterVisitedRecord({ commit }, payload) {\n      commit(\"setLoading\", true);\n      axios\n        .post(`clinic/get-filter-visited-location/${payload.id}`, payload, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          const { data } = res.data;\n          commit(\"setLoading\", false);\n          commit(\"setData\", { type: \"all\", data: data });\n          // Swal.fire({\n          //     title: 'Success',\n          //     text: 'Successfully Submitted',\n          //     icon: 'success',\n          //     confirmButtonText: 'close',\n          //     timer: 2000\n          //   })\n          console.log(data);\n        })\n        .catch((err) => {\n          commit(\"setError\", {\n            error: true,\n            message: err.response.data.message,\n          });\n          commit(\"setLoading\", false);\n          console.log(err.response.data);\n        });\n    },\n    async submitContact({ commit, dispatch }, payload) {\n      commit(\"setLoading\", false);\n\n      try {\n        const res = await axios.post(\"clinic/store-contact\", payload, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n\n        dispatch(\"filterVisitedRecord\", payload.filter);\n        console.log(\"submitted\", res.data);\n        return true\n      } catch (err) {\n        console.log(err.response.data);\n        return false\n      }\n    },\n  },\n};\n","/home/wardy/Desktop/capstone/fe/src/store/modules/staffs.js",["445","446","447","448","449","450","451","452","453","454","455"],"import axios from \"@/config/axios\";\nimport Swal from \"sweetalert2\";\nexport default {\n  namespaced: true,\n  state: () => ({\n    all: {\n      data: [],\n      loading: false,\n    },\n    counts: {\n      data: null,\n      loading: false,\n    },\n    staffs: {\n      data: [],\n      error: false,\n      message: \"\",\n      page: 1,\n    },\n    submit: {\n      loading: false,\n      error: false,\n      message: \"\",\n      dialog: false,\n    },\n    role: {\n      loading: false,\n      dialog: false,\n    },\n    update: {\n      error: false,\n      loading: false,\n    },\n  }),\n  mutations: {\n    setData(state, payload) {\n      state[payload.type].data = payload.data;\n    },\n    setLoading(state, payload) {\n      state[payload.type].loading = payload.loading;\n    },\n    setDialog(state, payload) {\n      state[payload.type].dialog = payload.dialog;\n    },\n    setPage(state, payload) {\n      state[payload.type].page = payload.page;\n    },\n    setError(state, payload) {\n      state[payload.type].error = payload.error;\n      state[payload.type].message = payload.message;\n    },\n  },\n  actions: {\n    async editProfile({ commit }, payload) {\n      commit(\"setLoading\", { type: \"update\", loading: true });\n      commit(\"setError\", { type: \"update\", error:false });\n      try {\n        const { data } = await axios.post(\n          `clinic/edit-personal/${payload.id}`,\n          payload,\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        );\n        commit(\"setLoading\", { type: \"update\", loading: false });\n        console.log(data.message);\n        return true;\n      } catch (error) {\n        commit(\"setLoading\", { type: \"update\", loading: false });\n        const err = error.response.data.errors;\n        console.log(err);\n        commit(\"setError\", { type: \"update\", error: err });\n        return false;\n      }\n    },\n    async createClinic({ commit, dispatch }, payload) {\n      commit(\"setLoading\", { type: \"submit\", loading: true });\n      commit(\"setError\", { type: \"submit\", error: false, message: \"\" });\n      axios\n        .post(\"clinic/register-clinic\", payload, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          dispatch(\"staffs\");\n          commit(\"setLoading\", { type: \"submit\", loading: false });\n          commit(\"setDialog\", { type: \"submit\", dialog: false });\n            Swal.fire({\n              title: \"Success\",\n              text: \"Successfully Created Staff\",\n              icon: \"success\",\n              confirmButtonText: \"close\",\n              showCloseButton: true,\n              html: `The Username & Password is <b>${res.data.data.username} </b> <br>`,\n            });\n            console.log(res.data);\n          })\n        .catch((err) => {\n          commit(\"setLoading\", { type: \"submit\", loading: false });\n          commit(\"setError\", {\n            type: \"submit\",\n            error: true,\n            message: err.response.data.message,\n          });\n          console.log(err.response.data);\n        });\n    },\n    async getApproval({ commit }) {\n      axios\n        .get(\"clinic/get-approval\", {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          commit(\"setData\", { type: \"all\", data: res.data.data });\n          console.log(\"approval\", res.data);\n        });\n    },\n    async getCounts({ commit }) {\n      axios\n        .get(\"clinic/get-count\", {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          commit(\"setData\", { type: \"counts\", data: res.data });\n          console.log(res.data);\n        });\n    },\n    async approval({ dispatch }, payload) {\n      axios\n        .put(\n          `clinic/for-approval/${payload.data.id}`,\n          {\n            status: payload.status,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        )\n        .then((res) => {\n          dispatch(\"getApproval\");\n          dispatch(\"getCounts\");\n          console.log(res.data);\n        });\n    },\n    async staffs({ commit }, params) {\n      axios\n        .get(`clinic/staff?page=${params}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          commit(\"setData\", { type: \"staffs\", data: res.data.data.data });\n          commit(\"setPage\", { type: \"staffs\", page: res.data.data.last_page });\n          console.log(res.data);\n        });\n    },\n    async search({ commit, dispatch }, params) {\n      if (!params.trim()) {\n        dispatch(\"staffs\");\n        return true;\n      }\n      axios\n        .get(`clinic/staff-search/${params}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          commit(\"setData\", { type: \"staffs\", data: res.data.data });\n          console.log(res.data);\n        });\n    },\n    async delete({ dispatch, state }, payload) {\n      axios\n        .delete(`clinic/delete-clinic/${payload.id}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          dispatch(\"staffs\", state.staffs.page);\n          Swal.fire({\n            title: \"Success\",\n            text: \"Successfully Deleted\",\n            icon: \"success\",\n            confirmButtonText: \"close\",\n            timer: 2000,\n          });\n          console.log(res.data);\n        });\n    },\n    async changeRole({ commit, dispatch, state }, payload) {\n      commit(\"setLoading\", { type: \"role\", loading: true });\n      axios\n        .put(\n          `clinic/update-role/${payload.id}`,\n          { role_id: payload.role_id },\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        )\n        .then((res) => {\n          dispatch(\"staffs\", state.staffs.page);\n          commit(\"setDialog\", { type: \"role\", dialog: false });\n          commit(\"setLoading\", { type: \"role\", loading: false });\n          Swal.fire({\n            title: \"Success\",\n            text: \"Successfully Change Role\",\n            icon: \"success\",\n            confirmButtonText: \"close\",\n            timer: 2000,\n          });\n          console.log(\"role\", res.data.data);\n        });\n    },\n  },\n};\n","/home/wardy/Desktop/capstone/fe/src/store/modules/closeContact.js",["456","457","458","459","460","461","462","463","464","465","466","467","468","469","470"],"import axios from \"@/config/axios\";\n// import { all } from \"core-js/fn/promise\";\n// import Swal from 'sweetalert2'\nexport default {\n  namespaced: true,\n  state: () => ({\n    all: {\n      data: [],\n      error: false,\n      message: \"\",\n      dialog: false,\n      loading: false,\n      page: 1,\n      allContacts: null,\n    },\n    update: {\n      dialog: false,\n      loading: false,\n    },\n    delete: {\n      dialog: false,\n      loading: false,\n    },\n\n  }),\n  mutations: {\n    setData(state, data) {\n      state[data.type].data = data.data;\n    },\n    setDialog(state, data) {\n      state.all.dialog = data;\n    },\n    setLoading(state, data) {\n      state.all.loading = data;\n    },\n    setPage(state, data) {\n      state.all.page = data;\n    },\n    setError(state, data) {\n      state.all.error = data.error;\n      state.all.message = data.message;\n    },\n    setContacts(state, data) {\n      state.all.allContacts = data;\n    },\n  },\n  actions: {\n    async searchPatient({ commit, dispatch }, param) {\n      commit(\"setLoading\", true);\n      if (!param.trim()) {\n        dispatch(\"getPatient\");\n      }\n      axios\n        .get(`clinic/patient-search/${param}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          const { data } = res.data;\n          commit(\"setLoading\", false);\n          commit(\"setData\", { type: \"all\", data: data });\n          console.log(\"patient\", data);\n        })\n        .catch((err) => {\n          commit(\"setError\", {\n            error: true,\n            message: err.response.data.message,\n          });\n          commit(\"setLoading\", false);\n          console.log(err.response.data);\n        });\n    },\n    async getPatient({ commit }, param) {\n      commit(\"setLoading\", true);\n      axios\n        .get(`clinic/get-patient?page=${param}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          const { data, active_patient } = res.data;\n          commit(\"setLoading\", false);\n          commit(\"setData\", { type: \"all\", data: data.data });\n          commit(\"setPage\", data.last_page);\n          commit(\"setContacts\", active_patient);\n        })\n        .catch((err) => {\n          commit(\"setError\", {\n            error: true,\n            message: err.response.data.message,\n          });\n          commit(\"setLoading\", false);\n          console.log(err.response.data);\n        });\n    },\n    async getContacts({ commit }, payload) {\n      commit(\"setLoading\", true);\n      axios\n        .get(`clinic/get-contact/${payload}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          const { data } = res.data;\n          commit(\"setLoading\", false);\n          commit(\"setData\", { type: \"all\", data: data });\n          // Swal.fire({\n          //     title: 'Success',\n          //     text: 'Successfully Submitted',\n          //     icon: 'success',\n          //     confirmButtonText: 'close',\n          //     timer: 2000\n          //   })\n          console.log(\"contacts\", data);\n        })\n        .catch((err) => {\n          commit(\"setError\", {\n            error: true,\n            message: err.response.data.message,\n          });\n          commit(\"setLoading\", false);\n          console.log(err.response.data);\n        });\n    },\n    async filterVisitedRecord({ commit }, payload) {\n      commit(\"setLoading\", true);\n      axios\n        .post(`clinic/get-filter-visited-location/${payload.id}`, payload, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          const { data } = res.data;\n          commit(\"setLoading\", false);\n          commit(\"setData\", { type: \"all\", data: data });\n          // Swal.fire({\n          //     title: 'Success',\n          //     text: 'Successfully Submitted',\n          //     icon: 'success',\n          //     confirmButtonText: 'close',\n          //     timer: 2000\n          //   })\n          console.log(data);\n        })\n        .catch((err) => {\n          commit(\"setError\", {\n            error: true,\n            message: err.response.data.message,\n          });\n          commit(\"setLoading\", false);\n          console.log(err.response.data);\n        });\n    },\n    async submitContact({ commit }, payload) {\n      commit(\"setLoading\", false);\n      axios\n        .post(\"clinic/store-contact\", payload, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          console.log(\"submitted\", res.data);\n        })\n        .catch((err) => {\n          console.log(err.response.data);\n        });\n    },\n    //Delete and duration dialog patient\n    async updateTaggedDuration({ state, dispatch }, payload) {\n      state.update.loading = true;\n      axios\n        .put(`clinic/update-tagged/${payload.id}`, payload, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          dispatch(\"getContacts\", payload.paramId);\n          console.log(res.data);\n          state.update.loading = false;\n          state.update.dialog = false;\n        })\n        .catch((err) => {\n          console.log(err.response.data);\n          state.update.loading = false;\n        });\n    },\n    async updatePatientDuration({ state, dispatch }, payload) {\n      state.update.loading = true;\n      axios\n        .put(`clinic/update-patient/${payload.id}`, payload, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then((res) => {\n          dispatch(\"getPatient\");\n          console.log(res.data);\n          state.update.loading = false;\n          state.update.dialog = false;\n        })\n        .catch((err) => {\n          console.log(err.response.data);\n          state.update.loading = false;\n        });\n    },\n    async deleteTagged({ state, dispatch }, payload) {\n      state.delete.loading = true;\n\n      axios\n        .delete(`clinic/delete-contact/${payload.deleteId}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then(() => {\n          dispatch(\"getContacts\", payload.paramId);\n          state.delete.dialog = false;\n          state.delete.loading = false;\n        })\n        .catch((err) => {\n          console.log(err.response.data);\n          state.delete.loading = false;\n        });\n    },\n    async deletePatient({ state, dispatch }, payload) {\n      state.delete.loading = true;\n\n      const res = await axios\n        .delete(`clinic/delete-patient/${payload.deleteId}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        })\n        .then(() => {\n          dispatch(\"getContacts\", payload.paramId);\n          state.delete.dialog = false;\n          state.delete.loading = false;\n\n          return true;\n        })\n        .catch((err) => {\n          console.log(err.response.data);\n          state.delete.loading = false;\n          return false;\n        });\n\n      return res;\n    },\n  },\n};\n","/home/wardy/Desktop/capstone/fe/src/store/modules/location.js",["471","472"],"import axios from \"@/config/axios\";\n\nexport default {\n  namespaced: true,\n  state: () => ({\n    all: {\n      data: [],\n      loading: false,\n    },\n    userRecord: {\n      data: [],\n      loading: false,\n    },\n  }),\n  mutations: {\n    setData(state,payload) {\n        state.all.data = payload\n    },\n    setLoading(state,payload) {\n        state.all.loading = payload\n    },\n  },\n  actions: {\n    async get({commit}) {\n        commit('setLoading',true)\n      try {\n        const { data } = await axios.get(\"get-location\", {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n        commit('setLoading',false)\n        commit('setData',data.data)\n\n        console.log(\"location\", data);\n      } catch (error) {\n        commit('setLoading',false)\n        console.log(error);\n      }\n    },\n  },\n};\n","/home/wardy/Desktop/capstone/fe/src/store/modules/match.js",["473","474","475","476","477","478"],"import axios from \"@/config/axios\";\nimport Swal from \"sweetalert2\";\nexport default {\n  namespaced: true,\n  state: () => ({\n    all: {\n      data: [],\n      loading: false,\n      error: false,\n      message: \"\",\n    },\n    matching: {\n      data: null,\n      loading: false,\n      error: false,\n      success: false,\n      message: \"\",\n      playing: true,\n    },\n  }),\n  mutations: {\n    setData(state, payload) {\n      state[payload.type].data = payload.data;\n    },\n    setLoading(state, payload) {\n      state[payload.type].loading = payload.loading;\n    },\n    setPlaying(state, payload) {\n      state.matching.playing = payload;\n    },\n  },\n  actions: {\n    async getVisitedUser({ commit }, payload) {\n      try {\n        const { data } = await axios.post(\n          \"station/get-visitor\",\n          { location_id: payload },\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        );\n        console.log(\"visited user\", data);\n        await commit(\"setData\", { type: \"all\", data: data.data });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async matchUser({ commit, dispatch }, payload) {\n    console.log('paylaod', payload);\n    localStorage.setItem('location', payload.location_id)\n      commit(\"setPlaying\", false);\n      try {\n        const { data } = await axios.post(\"station/match\",{location_id:localStorage.getItem(\"location\"),user_id:payload.user_id}, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n        await commit(\"setPlaying\", true);\n        console.log('paylaod inner', payload);\n        await Swal.fire({\n          title: \"Success\",\n          text: `Successfully Logged In`,\n          icon: \"success\",\n          confirmButtonText: \"close\",\n          timer: 2000,\n        });\n        await commit(\"setData\", { type: \"matching\", data: data.data });\n        await dispatch(\"getVisitedUser\", payload.location_id);\n        console.log(\"matching Data\", data.data);\n      } catch (error) {\n        console.log(error);\n        commit(\"setPlaying\", true);\n      }\n    },\n  },\n};\n","/home/wardy/Desktop/capstone/fe/src/store/modules/disease.js",["479","480","481","482","483","484","485"],"import axios from \"../../config/axios\";\nexport default {\n  namespaced: true,\n  state: () => ({\n    all: {\n      data: [],\n      loading: false,\n      error: false,\n    },\n    store: {\n      loading: false,\n      error: false,\n    },\n    update: {\n      loading: false,\n      error: false,\n    },\n    status: {\n      loading: false,\n      error: false,\n    },\n    delete: {\n      loading: false,\n      error: false,\n    },\n  }),\n  mutations: {\n    setData(state, payload) {\n      state[payload.type].data = payload.data;\n    },\n    setLoading(state, payload) {\n      state[payload.type].loading = payload.loading;\n    },\n    setError(state, payload) {\n      state[payload.type].error = payload.error;\n    },\n  },\n  actions: {\n    async search({commit,dispatch},payload){\n        if(payload.trim() == \"\"){\n            dispatch('getData')\n            return ;\n        }\n        try {\n            const { data } = await axios.get(`clinic/disease-search/${payload}`, {\n              headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n            });\n            commit(\"setLoading\", { type: \"all\", loading: false });\n            commit(\"setData\", { type: \"all\", data: data.data });\n            console.log(\"data\", data.data);\n          } catch (error) {\n            commit(\"setLoading\", { type: \"all\", loading: false });\n            commit(\"setError\", { type: \"all\", error: error.response.data.errors });\n          }            \n    },\n    async getData({ commit }) {\n      commit(\"setLoading\", { type: \"all\", loading: true });\n      try {\n        const { data } = await axios.get(\"clinic/disease\", {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n        commit(\"setLoading\", { type: \"all\", loading: false });\n        commit(\"setData\", { type: \"all\", data: data.data });\n        console.log(\"data\", data.data);\n      } catch (error) {\n        commit(\"setLoading\", { type: \"all\", loading: false });\n        commit(\"setError\", { type: \"all\", error: error.response.data.errors });\n      }\n    },\n    async store({ commit, dispatch }, payload) {\n        commit(\"setLoading\", { type: \"store\", loading: true });\n        commit(\"setError\", { type: \"store\", error: false });\n        try {\n        const { data } = await axios.post(\"clinic/store-disease\", payload, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n        commit(\"setLoading\", { type: \"store\", loading: false });\n        dispatch(\"getData\");\n        console.log(\"data\", data.data);\n\n        return true;\n      } catch (error) {\n        console.log(error);\n        commit(\"setLoading\", { type: \"store\", loading: false });\n        commit(\"setError\", {\n          type: \"store\",\n          error: error.response.data.errors,\n        });\n\n        return false;\n      }\n    },\n    async update({ commit, dispatch }, payload) {\n        commit(\"setLoading\", { type: \"update\", loading: true });\n        try {\n          const { data } = await axios.put(\n            `clinic/update-disease/${payload.id}`,\n            payload,\n            {\n              headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n              },\n            }\n          );\n          commit(\"setLoading\", { type: \"update\", loading: false });\n          dispatch(\"getData\");\n          console.log(\"data\", data.data);\n  \n          return true;\n        } catch (error) {\n          commit(\"setLoading\", { type: \"update\", loading: false });\n          commit(\"setError\", {\n            type: \"update\",\n            error: error.response.data.errors,\n          });\n  \n          return false;\n        }\n      },\n      async status({ commit, dispatch }, payload) {\n        commit(\"setLoading\", { type: \"status\", loading: true });\n        try {\n          const { data } = await axios.put(\n            `clinic/update-disease-status/${payload.id}`,\n            payload,\n            {\n              headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n              },\n            }\n          );\n          commit(\"setLoading\", { type: \"status\", loading: false });\n          dispatch(\"getData\");\n          console.log(\"data\", data.data);\n  \n          return true;\n        } catch (error) {\n          commit(\"setLoading\", { type: \"status\", loading: false });\n          commit(\"setError\", {\n            type: \"status\",\n            error: error.response.data.errors,\n          });\n  \n          return false;\n        }\n      },      \n      async delete({ commit, dispatch }, payload) {\n        commit(\"setLoading\", { type: \"delete\", loading: true });\n        try {\n          const { data } = await axios.delete(\n            `clinic/delete-disease/${payload.id}`,\n            {\n              headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n              },\n            }\n          );\n          commit(\"setLoading\", { type: \"delete\", loading: false });\n          dispatch(\"getData\");\n          console.log(\"data\", data.data);\n  \n          return true;\n        } catch (error) {\n          commit(\"setLoading\", { type: \"delete\", loading: false });\n          commit(\"setError\", {\n            type: \"delete\",\n            error: error.response.data.errors,\n          });\n  \n          return false;\n        }\n      },\n\n    },\n};\n","/home/wardy/Desktop/capstone/fe/src/store/modules/questions.js",[],"/home/wardy/Desktop/capstone/fe/src/store/modules/generates.js",["486","487","488","489","490","491","492","493","494","495","496"],"import axios from \"@/config/axios\";\n// import { all } from \"core-js/fn/promise\";\n// import Swal from 'sweetalert2'\nexport default {\n  namespaced: true,\n  state: () => ({\n    all: {\n      data: [],\n      error: false,\n      message: \"\",\n      dialog: false,\n      loading: false,\n      page:1,\n      allContacts:null\n    },\n    submit:{\n        data:[],\n        loading:false\n    },\n    taggeds:{\n        data:[],\n        loading:false\n    }\n  }),\n  mutations: {\n    setData(state, data) {\n      state[data.type].data = data.data;\n    },\n    setDialog(state, data) {\n      state.all.dialog = data;\n    },\n    setLoading(state, data) {\n      state.all.loading = data;\n    },\n    setPage(state, data) {\n      state.all.page = data;\n    },\n    setError(state, data) {\n      state.all.error = data.error;\n      state.all.message = data.message;\n    },\n    setContacts(state,data){\n      state.all.allContacts = data\n    }\n  },\n  actions: {\n    async getPatient({ commit }) {\n      commit(\"setLoading\", true);\n      axios\n        .get(`clinic/get-all-patient`,{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}})\n        .then((res) => {\n          const { data,active_patient } = res.data;\n          commit(\"setLoading\", false);\n          commit(\"setData\", { type: \"all\", data: data });\n          commit('setContacts', active_patient)\n          console.log('patient',data);\n        })\n        .catch((err) => {\n          commit(\"setError\", {\n            error: true,\n            message: err.response.data.message,\n          });\n          commit(\"setLoading\", false);\n          console.log(err.response.data);\n        });\n    },\n    async getDatePatient({ commit },params) {\n        commit(\"setLoading\", true);\n        axios\n          .post(`clinic/get-date-patients`,params,{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}})\n          .then((res) => {\n            const { data,active_patient } = res.data;\n            commit(\"setLoading\", false);\n            commit(\"setData\", { type: \"all\", data: data });\n            commit('setContacts', active_patient)\n          })\n          .catch((err) => {\n            commit(\"setError\", {\n              error: true,\n              message: err.response.data.message,\n            });\n            commit(\"setLoading\", false);\n            console.log(err.response.data);\n          });\n      },\n    async submittedResponse({ commit }) {\n      commit(\"setLoading\", true);\n      axios\n        .get(`get-all-response`,{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}})\n        .then((res) => {\n          const { data } = res.data;\n        //   commit(\"setLoading\", false);\n          commit(\"setData\", { type: \"submit\", data: data });\n          console.log(\"contactss\", data);\n        })\n        .catch((err) => {\n          commit(\"setError\", {\n            error: true,\n            message: err.response.data.message,\n          });\n          commit(\"setLoading\", false);\n          console.log(err.response.data);\n        });\n    },\n    async dateResponse({ commit },params) {\n      commit(\"setLoading\", true);\n      axios\n        .post(`get-date-response`,params,{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}})\n        .then((res) => {\n          const { data } = res.data;\n        //   commit(\"setLoading\", false);\n          commit(\"setData\", { type: \"submit\", data: data });\n          console.log(\"contactss\", data);\n        })\n        .catch((err) => {\n          commit(\"setError\", {\n            error: true,\n            message: err.response.data.message,\n          });\n          commit(\"setLoading\", false);\n          console.log(err.response.data);\n        });\n    },\n    async getTaggeds({ commit },params) {\n        commit(\"setLoading\", true);\n        axios\n          .post(`clinic/get-all-contacts`,params,{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}})\n          .then((res) => {\n            const { data } = res.data;\n          //   commit(\"setLoading\", false);\n            commit(\"setData\", { type: \"taggeds\", data: data });\n            console.log(\"taggeds\", data);\n          })\n          .catch((err) => {\n            commit(\"setError\", {\n              error: true,\n              message: err.response.data.message,\n            });\n            commit(\"setLoading\", false);\n            console.log(err.response.data);\n          });\n      },\n    async getDateTaggeds({ commit },params) {\n        commit(\"setLoading\", true);\n        axios\n          .post(`clinic/get-date-contacts`,params,{headers:{\"Authorization\" : `Bearer ${localStorage.getItem('token')}`}})\n          .then((res) => {\n            const { data } = res.data;\n          //   commit(\"setLoading\", false);\n            commit(\"setData\", { type: \"taggeds\", data: data });\n            console.log(\"taggeds\", data);\n          })\n          .catch((err) => {\n            commit(\"setError\", {\n              error: true,\n              message: err.response.data.message,\n            });\n            commit(\"setLoading\", false);\n            console.log(err.response.data);\n          });\n      },\n\n  },\n};\n","/home/wardy/Desktop/capstone/fe/src/store/modules/notifications.js",["497","498","499"],"import axios from \"@/config/axios\";\n// import moment from \"moment\";\n\nexport default {\n  namespaced: true,\n  state: () => ({\n    data: [],\n    loading: [],\n    dot: false,\n  }),\n  mutations: {\n    setData(state, data) {\n      state.data = data;\n    },\n    setLoading(state, data) {\n      state.loading = data;\n    },\n    setDot(state, data) {\n      state.dot = data;\n    },\n  },\n  actions: {\n    async getNotifications({ commit }) {\n      commit(\"setLoading\", true);\n      commit(\"setDot\", true);\n      try {\n        const { data } = await axios.get(`clinic-notifications`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n\n        await commit(\"setData\", data);\n        await commit(\"setDot\", true);\n        await commit(\"setLoading\", false);\n\n        console.log(\"data\", data);\n        return true;\n      } catch (error) {\n        commit(\"setLoading\", false);\n        console.log(error);\n\n        return false;\n      }\n    },\n\n    async getUserNotifications({ commit, state }) {\n      commit(\"setLoading\", true);\n      try {\n        const { data } = await axios.get(`user-notifications`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        });\n\n        if (data.length > state.data.length) {\n          if (data.length) {\n            await commit(\"setData\", data);\n            commit(\"setDot\", true);\n          }\n        }\n        await commit(\"setLoading\", false);\n\n        return true;\n      } catch (error) {\n        commit(\"setLoading\", false);\n        console.log(error);\n\n        return false;\n      }\n    },\n  },\n};\n","/home/wardy/Desktop/capstone/fe/src/views/error/NotFound.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/Login/LoginClinic.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/Login/LoginUser.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/user/UserView.vue",["500"],"<template>\n  <v-app>\n    <div v-if=\"loading\" class=\"ma-auto \">\n      <Loading />\n    </div>\n    <div v-else>\n      <app-bar :data=\"user\" type=\"user\" @handleDialog=\"handleDialog\" />\n      <router-view></router-view>\n      <side-bar  v-if=\"!$vuetify.breakpoint.mobile\" :dialog=\"dialog\" />\n      <bottom-bar v-if=\"$vuetify.breakpoint.mobile\"></bottom-bar>\n    </div>\n  </v-app>\n</template>\n\n<script>\nimport Loading from '@/components/LoadingView.vue'\nimport AppBar from \"@/components/AppBar.vue\";\nimport BottomBar from \"@/views/user/BottomNavigation.vue\"\nimport SideBar from \"@/views/user/SideBar.vue\";\nimport { mapState } from \"vuex\";\nexport default {\n  components: { AppBar, SideBar, Loading, BottomBar },\n  computed: {\n    ...mapState({\n      loading: (state) => state.user.credentials.loading,\n      user: (state) => state.user.credentials.data,\n    }),\n  },\n  data() {\n    return {\n      dialog: true\n    };\n  },\n  mounted() {\n    if (!localStorage.getItem(\"token\")) {\n      this.$router.push(\"/user-login\")\n    }\n    this.$store.dispatch('user/getUser')\n\n    console.log('env',process.env.VUE_APP_IMAGE_URL)\n  },\n  methods: {\n    handleDialog() {\n      this.dialog = !this.dialog\n    }\n  }\n};\n</script>\n","/home/wardy/Desktop/capstone/fe/src/views/user/HomeView.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/user/pages/PersonalProfile.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/user/pages/FollowUps.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/user/pages/LocationRecord.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/Profile/EditProfile.vue",["501","502"],"<template>\n  <v-app>\n    <v-main class=\"bg\">\n      <v-container class=\"ml-10\">\n        <div class=\"mt-12\">\n          <h2 class=\"font-weight-bold\">Edit Personal Profile</h2>\n        </div>\n        <div class=\"my-8\">\n          <v-avatar color=\"primary\" size=\"90\" class=\"white--text\" tile\n            ><h3>{{ user.first_name.slice(0,1).toUpperCase() }}</h3></v-avatar\n          >\n        </div>\n\n        <v-divider></v-divider>\n        <div class=\"mb-2 mt-5\">\n          <h3 class=\"gray--text mb-2\">Personal Information</h3>\n          <v-btn color=\"primary\" outlined small class=\"mb-5\" @click=\"editDialog\"\n            ><v-icon left>edit</v-icon> Edit Profile</v-btn\n          >\n        </div>\n\n        <div class=\"d-flex mb-2\">\n          <h4>Name:</h4>\n          <h4 class=\"ml-2 font-weight-bold primary--text text-capitalize\">\n            {{ `${user.first_name} ${user.middle_name} ${user.last_name}` }}\n          </h4>\n        </div>\n        <!-- \n            <div class=\"d-flex mb-3\">\n                <h4>Age:</h4>\n                <h4 class=\"ml-2 font-weight-bold primary--text\">21</h4>\n            </div> -->\n\n        <div class=\"d-flex mb-3\">\n          <h4>Gender:</h4>\n          <h4 class=\"ml-2 font-weight-bold primary--text text-capitalize\">\n            {{ user.gender }}\n          </h4>\n        </div>\n\n        <div class=\"d-flex mb-3\">\n                <h4>Address:</h4>\n                <h4 class=\"ml-2 font-weight-bold primary--text\">{{user.address}}</h4>\n            </div>\n\n        <div class=\"d-flex mb-3\">\n          <h4>Contact Number:</h4>\n          <h4 class=\"ml-2 font-weight-bold primary--text\">\n            {{ user.contact_number }}\n          </h4>\n        </div>\n\n        <div class=\"d-flex mb-3\">\n          <h4>Email:</h4>\n          <h4 class=\"ml-2 font-weight-bold primary--text\">{{ user.email }}</h4>\n        </div>\n\n        <div class=\"d-flex mb-3\">\n          <h4>Role:</h4>\n          <h4 class=\"ml-2 font-weight-bold primary--text text-capitalize\">\n            {{ user.role.name }}\n          </h4>\n        </div>\n        <!-- <div class=\"d-flex mb-3\">\n                <h4>Vaccination Status:</h4>\n                <h4 class=\"ml-2 font-weight-bold primary--text\">Fully Vaccinated</h4>\n            </div> -->\n\n        <v-divider class=\"mt-8\"></v-divider>\n        <div class=\"mb-6 mt-6\">\n          <h3 class=\"gray--text mb-2\">Change Security Password</h3>\n        </div>\n        <div>\n          <v-card color=\"transparent\" flat width=\"320\">\n            <v-alert type=\"success\" :value=\"success\">\n              Change Password Successfully\n            </v-alert>\n            <v-text-field\n              outlined\n              label=\"Current Password\"\n              type=\"password\"\n              dense\n              filled\n              :error-messages=\"error?.old_password?.length ? error.old_password : false\"\n              v-model=\"old_password\"\n            ></v-text-field>\n            <v-text-field\n              outlined\n              label=\"New Password\"\n              type=\"password\"\n              dense\n              filled\n              :error-messages=\"error?.new_password?.length ? error.new_password : false\"\n              v-model=\"new_password\"\n            ></v-text-field>\n            <v-text-field\n              outlined\n              label=\"Confirm New Password\"\n              type=\"password\"\n              dense\n              filled\n              v-model=\"new_password_confirmation\"\n              :error=\"error?.new_password?.length ? true : false\"\n            ></v-text-field>\n\n            <div class=\"mt-n2 d-flex justify-end\">\n              <v-btn class=\"primary text-capitalize\" @click=\"handlePassword\"><h5>Change Password</h5></v-btn>\n            </div>\n          </v-card>\n        </div>\n        <v-divider class=\"mt-8\"></v-divider>\n      </v-container>\n      <EditProfile :profile=\"profile\" @handleProfile=\"profile = null\" @snackBar=\"snackbar = true\"/>\n    </v-main>\n    <v-snackbar\n      :timeout=\"2000\"\n      v-model=\"snackbar\"\n      bottom\n      right\n      color=\"success\"\n      elevation=\"24\"\n    >\n      Successfully Updated Profile.\n    </v-snackbar>\n  </v-app>\n\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport EditProfile from \"@/views/admin/Dialog/Profile/EditProfile.vue\"\nexport default {\n  components:{\n    EditProfile\n  },\n  mounted() {\n    console.log(\"user\", this.user);\n  },\n  data() {\n    return {\n      old_password: \"\",\n      new_password: \"\",\n      new_password_confirmation: \"\",\n      profile:\"\",\n      snackbar:false\n    };\n  },\n  computed: {\n    ...mapState({\n      loading: (state) => state.clinic.credentials.loading,\n      user: (state) => state.clinic.credentials.data,\n      success: (state) => state.clinic.credentials.success,\n      error: (state) => state.clinic.credentials.error,\n    }),\n  },\n  methods: {\n      handlePassword() {\n        const forms = {\n          old_password: this.old_password,\n          new_password: this.new_password,\n          new_password_confirmation: this.new_password_confirmation,\n        };\n        this.$store.dispatch(\"clinic/changePassword\", { id: this.user.id,forms:forms });\n        console.log(forms + this.user.id);\n      },\n      editDialog(){\n        this.profile = this.user\n      }\n    },\n};\n</script>\n\n<style scoped>\n.bg {\n  background-color: #f8f0f0;\n}\n.adj {\n  width: 280px;\n}\n</style>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/Profile/CheckProfile.vue",["503","504"],"<template>\n  <v-main class=\"accent\">\n    <v-container>\n      <div class=\"ma-12 text-capitalize\">\n        <div class=\"mt-2\">\n          <div class=\"py-1\">\n            <v-btn color=\"primary\" rounded text @click=\"$router.go(-1)\"\n              ><v-icon left>arrow_back_ios</v-icon>\n              <h4>Return</h4></v-btn\n            >\n          </div>\n          <!-- <h2 class=\"font-weight-bold\"><b class=\"primary--text\">{{`${profile.first_name} ${profile.middle_name} ${profile.last_name}`}} </b></h2>\n                <h2>Profile</h2> -->\n        </div>\n        <div class=\"mb-8 mt-6\">\n          <v-row align=\"center\">\n            <v-col cols=\"1\">\n              <v-avatar color=\"primary\" size=\"98\" class=\"white--text elevation-3\" tile\n                >\n                <img :src=\"`${imageUrl}${profile.images_path}`\" alt=\"\">\n                </v-avatar\n              >\n            </v-col>\n            <v-col>\n              <v-row>\n                <v-col class=\"ml-6\">\n                  <h3 class=\"mb-3 primary--text\">\n                    {{\n                      `${profile.first_name} ${profile.middle_name} ${profile.last_name}`\n                    }}\n                  </h3>\n                  <v-row>\n                    <v-col cols=\"3\">\n                      <h4 class=\"font-weight-thin\">{{ profile.gender }}</h4>\n                      <h4 class=\"font-weight-thin\">\n                        {{ profile.classification.name }}\n                      </h4>\n                      <h4 class=\"font-weight-thin\">\n                        {{ profile.vaccination_status }}\n                      </h4>\n                    </v-col>\n                    <v-divider vertical inset></v-divider>\n                    <v-col cols=\"4\">\n                      <h4 class=\"font-weight-thin\">{{ profile.address }}</h4>\n                      <h4 class=\"font-weight-thin\">\n                        {{ profile.contact_number }}\n                      </h4>\n                      <h4 class=\"font-weight-thin\">{{ profile.email }}</h4>\n                    </v-col>\n                    <v-divider vertical inset></v-divider>\n                    <v-col>\n                      <h4>status :</h4>\n                      <h4\n                        class=\"text-uppercase\"\n                        :class=\"checkStatus() ? 'error--text' : 'primary--text'\"\n                      >\n                        {{ checkStatus() ? \"Close Contact\" : \"No Contact\" }}\n                      </h4>\n                    </v-col>\n                  </v-row>\n                </v-col>\n              </v-row>\n            </v-col>\n          </v-row>\n        </div>\n\n        <v-divider></v-divider>\n        <v-tabs\n          background-color=\"transparent\"\n          slider-size=\"3\"\n          color=\"primary\"\n          class=\"my-5\"\n          v-model=\"tab\"\n        >\n          <v-tab>Health Declaration</v-tab>\n          <v-tab>Stations Visited</v-tab>\n          <v-tab>Follow Ups</v-tab>\n        </v-tabs>\n\n        <v-tabs-items v-model=\"tab\">\n          <v-tab-item>\n            <v-card>\n              <v-simple-table>\n                <thead>\n                  <tr>\n                    <th>Time Submitted</th>\n                    <th>Date Submitted</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"detail in details.hdr\" :key=\"detail.id\">\n                    <td>{{ detail.created_at | time }}</td>\n                    <td>{{ detail.created_at | date }}</td>\n                    <td>\n                      <v-tooltip bottom>\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-btn\n                            color=\"primary\"\n                            dark\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                            icon\n                            @click=\"handleResponse(detail.answers)\"\n                            ><v-icon>description</v-icon></v-btn\n                          >\n                        </template>\n                        <span>Check Form</span>\n                      </v-tooltip>\n                    </td>\n                  </tr>\n                </tbody>\n              </v-simple-table>\n            </v-card>\n\n          </v-tab-item>\n          <v-tab-item>\n            <v-simple-table>\n              <thead>\n                <tr>\n                  <th>Location Visited</th>\n                  <th>Time</th>\n                  <th>Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"visited in details.visited\" :key=\"visited.id\">\n                  <td>{{visited.location.name}}</td>\n                  <td>{{visited.created_at | time}}</td>\n                  <td>{{visited.created_at | date}}</td>\n                </tr>\n              </tbody>\n            </v-simple-table>\n          </v-tab-item>\n          <v-tab-item>\n            <v-simple-table>\n              <thead>\n                <tr>\n                  <th>Submitted Response</th>\n                  <th>Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"followUp in details.followUps\" :key=\"followUp.id\">\n                  <td>{{followUp.follow_up_status}}</td>\n                  <td>{{followUp.created_at | date}}</td>\n                </tr>\n              </tbody>\n            </v-simple-table>\n          </v-tab-item>\n        </v-tabs-items>\n      </div>\n\n      <v-dialog v-model=\"checkDialog\" width=\"540\">\n        <v-app-bar color=\"primary\">\n          <v-app-bar-title class=\"white--text\">\n            <h5>Response</h5>\n          </v-app-bar-title>\n        </v-app-bar>\n        <v-card\n          v-for=\"(response, index) in responseData\"\n          :key=\"response.id\"\n          tile\n        >\n          <v-card-title primary-title class=\"text-justify\">\n            <h6>{{ `${index + 1}. ${response.question.question}` }}</h6>\n          </v-card-title>\n\n          <v-card-text>\n            <ul v-if=\"response.question.sub_question\" class=\"mt-n4\">\n              <li\n                v-for=\"(q, index) in handleQuestion(\n                  response.question.sub_question\n                )\"\n                :key=\"index\"\n              >\n                <h4>{{ q }}</h4>\n              </li>\n            </ul>\n\n            <div class=\"mt-4\">\n              <!-- <h4 class=\"primary--text\">Answer: {{response.answer == 1 ? \"True\" : \"False\"   }}</h4> -->\n              <v-text-field\n                outlined\n                readonly\n                label=\"Answer\"\n                :value=\"response.answer == 1 ? `Yes` : `No`\"\n              ></v-text-field>\n            </div>\n          </v-card-text>\n        </v-card>\n      </v-dialog>\n    </v-container>\n  </v-main>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport moment from \"moment\";\n\nexport default {\n  computed: {\n    ...mapState({\n      profile: (state) => state.user.checkProfile.data,\n      details: (state) => state.user.details.data,\n    }),\n  },\n  data() {\n    return {\n      imageUrl: process.env.VUE_APP_IMAGE_URL,\n      tab: 0,\n      checkDialog: false,\n      responseData: null,\n    };\n  },\n  filters: {\n    date(val) {\n      return moment(val).format(\"MMM DD, YYYY\").toString();\n    },\n    time(val) {\n      return moment(val).format(\"h:m A\").toString();\n    },\n  },\n  mounted() {\n    this.$store.dispatch(\"user/checkProfile\", this.$route.params.id);\n    this.$store.dispatch(\"user/userDetails\",this.$route.params.id);\n    console.log(\"reg\");\n  },\n  methods: {\n    handleResponse(data) {\n      this.checkDialog = true;\n      this.responseData = data;\n\n      console.log(data);\n    },\n    handleQuestion(data){\n      if(data.trim()){\n        const arr = data.split(\",\")\n        return arr\n      }\n      return []\n    },\n    checkStatus() {\n      const patient = this.profile?.user_patient;\n      const tagged = this.profile?.user_tagged;\n\n      const patientResult = patient.map((m) => {\n        if (m.days_left) {\n          return true;\n        }\n      });\n\n      const taggedResult = tagged.map((m) => {\n        if (m.days_left) {\n          return true;\n        }\n      });\n\n      if (patientResult.length || taggedResult.length) {\n        return true;\n      }\n\n      return false;\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n","/home/wardy/Desktop/capstone/fe/src/views/user/pages/profile/EditProfile.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/user/pages/HealthDeclarationForm.vue",["505","506","507"],"<template>\n  <v-app>\n    <v-main class=\"accent\">\n      <div v-if=\"checkDays()\">\n        <v-container>\n          <div class=\"text-center mt-12\">\n            <v-avatar size=\"240\" tile>\n              <img :src=\"require('@/assets/relax.svg')\" alt=\"alt\" />\n            </v-avatar>\n            <div class=\"primary--text mt-4 font-weight-bold text-h5 text-lg-h4\">\n              Sorry!\n            </div>\n            <div class=\"text-body-1 mt-2\">\n              you are temporarily cannot access this feature.\n            </div>\n          </div>\n        </v-container>\n      </div>\n\n      <div v-else>\n        <v-container v-if=\"questionnaires.length == 0 || loading\">\n          <div class=\"mx-auto mx-lg-16\">\n            <v-skeleton-loader type=\"card\" class=\"mb-12\"></v-skeleton-loader>\n            <v-skeleton-loader type=\"card\" class=\"mb-12\"></v-skeleton-loader>\n            <v-skeleton-loader type=\"card\" class=\"mb-12\"></v-skeleton-loader>\n          </div>\n        </v-container>\n\n        <v-container>\n          <div class=\"mx-auto mx-lg-16\" v-if=\"exists\">\n            <h2 class=\"primary--text font-weight-bold mt-4 mt-lg-12 mb-1\">\n              Health Declaration Form\n            </h2>\n            <h5 class=\"secondary--text\">Filled Up Form</h5>\n\n            <v-alert\n              type=\"success\"\n              color=\"primary\"\n              :value=\"true\"\n              text\n              info\n              class=\"mt-8 text-body-2\"\n              prominent\n              outlined\n              dense\n            >\n              Thank you for submitting your response. The form will be active\n              tomorrow.\n            </v-alert>\n\n            <div class=\"d-flex justify-center mt-16 mt-lg-12\">\n              <v-avatar :size=\"$vuetify.breakpoint.mobile ? 180 : 260\" tile>\n                <img src=\"@/assets/completed.svg\" alt=\"\" />\n              </v-avatar>\n            </div>\n            <!-- <v-card\n            class=\"mt-8\"\n            v-for=\"existed in existData\"\n            :key=\"existed.id\"\n            :disabled=\"exists\"\n          >\n            <v-card-title\n              class=\"text-body-1 black--text font-weight-bold text-justify\"\n            >\n              {{ existed.question.question }}\n            </v-card-title>\n            <v-card-text v-if=\"existed.question.sub_question\">\n              <div>\n                <ul\n                  class=\"black--text text-body-2 text-capitalize\"\n                  v-for=\"splits in existed.question.sub_question.split(',')\"\n                  :key=\"splits\"\n                >\n                  <li class=\"mb-1\">{{ splits }}</li>\n                </ul>\n              </div>\n            </v-card-text>\n            <v-card-actions>\n              <h4 class=\"mx-4 my-3\">\n                Answer :\n                <b class=\"ml-2 primary--text\">{{\n                  existed.answer ? \"Yes\" : \"No\"\n                }}</b>\n              </h4>\n            </v-card-actions>\n          </v-card>\n          <v-btn\n            class=\"text-capitalize mt-12 py-lg-4 py-2 font-weight-bold\"\n            :block=\"$vuetify.breakpoint.mobile\"\n            color=\"primary\"\n            :loading=\"loading\"\n            @click=\"edit\"\n            >Edit Form</v-btn\n          > -->\n          </div>\n\n          <div class=\"mx-auto mx-lg-16\" v-else>\n            <h2 class=\"primary--text font-weight-bold mt-4 mt-lg-12 mb-1\">\n              Health Declaration Form\n            </h2>\n            <h5 class=\"secondary--text\">Filled Up Form</h5>\n            <v-card\n              class=\"mt-8\"\n              v-for=\"(question, index) in questionnaires\"\n              :key=\"question.id\"\n            >\n              <v-card-title\n                class=\"text-body-1 black--text font-weight-bold text-justify\"\n              >\n                {{ question.question }}\n              </v-card-title>\n              <v-card-text v-if=\"question.sub_question\">\n                <div>\n                  <ul\n                    class=\"black--text text-body-2 text-capitalize\"\n                    v-for=\"splits in question.sub_question.split(',')\"\n                    :key=\"splits\"\n                  >\n                    <li class=\"mb-1\">{{ splits }}</li>\n                  </ul>\n                </div>\n              </v-card-text>\n              <v-card-actions class=\"ml-2 mt-n4\">\n                <v-checkbox\n                  label=\"Yes\"\n                  @click=\"questionnaire_id[index] = question.id\"\n                  v-model=\"answer[index]\"\n                  value=\"true\"\n                  class=\"mr-4\"\n                ></v-checkbox>\n                <v-checkbox\n                  label=\"No\"\n                  @click=\"questionnaire_id[index] = question.id\"\n                  v-model=\"answer[index]\"\n                  value=\"false\"\n                ></v-checkbox>\n              </v-card-actions>\n            </v-card>\n\n            <v-btn\n              class=\"text-capitalize mt-6 py-6 font-weight-bold\"\n              block\n              color=\"primary\"\n              :loading=\"loading\"\n              @click=\"submit\"\n              >Submit Form</v-btn\n            >\n\n            <v-btn\n              color=\"black\"\n              class=\"text-capitalize mt-2 font-weight-bold\"\n              text\n              plain\n              @click=\"reset\"\n              block\n              >Reset</v-btn\n            >\n          </div>\n        </v-container>\n      </div>\n      <v-snackbar v-model=\"error\" color=\"red\" right bottom timeout=\"2000\" app>\n        <v-icon left>error</v-icon>\n        Please Filled Up All Questions\n      </v-snackbar>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport { emits } from \"@/config/webSocket\";\nexport default {\n  // updated(){\n  //   if(this.exists){\n  //     this.existData.forEach((element,index) => {\n  //       console.log('le',element.answer, index);\n  //       this.answer.push(element.answer)\n  //     });\n  //   }\n  // },\n  async mounted() {\n    this.$store.dispatch(\"followUps/checkFollowUp\");\n    await this.$store.dispatch(\"declaration/getQuestions\");\n    await this.$store.dispatch(\"declaration/checkExist\");\n  },\n  computed: {\n    ...mapState({\n      loading: (state) => state.declaration.submit.loading,\n      loadingForm: (state) => state.declaration.all.loading,\n      questionnaires: (state) => state.declaration.all.data,\n      existData: (state) => state.declaration.existForm.data,\n      exists: (state) => state.declaration.existForm.exist,\n      checkContact: (state) => state.followUps.check.data,\n    }),\n  },\n\n  data() {\n    return {\n      answer: [],\n      displayAnswer: [],\n      questionnaire_id: [],\n      error: false,\n      all: [],\n    };\n  },\n  methods: {\n    checkDays() {\n      let taggedHasDays = false;\n      let patientHasDays = false;\n\n      for (const iterator of this.checkContact.data[0]?.user_tagged) {\n        if (iterator.days_left != 0) {\n          taggedHasDays = true;\n        }\n      }\n\n      for (const iterator of this.checkContact.data[0]?.user_patient) {\n        if (iterator.days_left != 0) {\n          patientHasDays = true;\n        }\n      }\n\n      return taggedHasDays || patientHasDays;\n    },\n    submitForm() {\n      this.$store.dispatch(\"declaration/submitForm\", this.answers);\n    },\n    async submit() {\n      if (this.answer.length == 0) {\n        console.log(\"zero\");\n        this.error = true;\n        return this.answer.length == 0;\n      }\n\n      for (const value of this.answer) {\n        if (\n          value == undefined ||\n          value == null ||\n          this.questionnaires.length > this.answer.length ||\n          this.answer.length == 0\n        ) {\n          console.log(\"w\");\n          this.error = true;\n          return null;\n        }\n      }\n      this.answer.forEach((element, index) => {\n        this.all.push({\n          questionnaire_id: this.questionnaire_id[index],\n          answer: element == \"true\" ? true : false,\n        });\n      });\n\n      console.log(this.all);\n      const res = await this.$store.dispatch(\n        \"declaration/submitForm\",\n        this.all\n      );\n      if (res) {\n        emits();\n      }\n      this.reset();\n    },\n    edit() {\n      this.$store.state.declaration.existForm.exist = false;\n    },\n    reset() {\n      this.all = [];\n      this.answer = [];\n      this.questionnaire_id = [];\n    },\n  },\n};\n</script>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Staff/UpdateRoleDialog.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Staff/AddDialog.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Disease/UpdateDialog.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Disease/DiseaseDialog.vue",["508"],"<template>\n  <v-dialog :value=\"dialog\" fullscreen transition=\"dialog-bottom-transition\">\n    <v-card color=\"accent text-capitalize\">\n      <v-toolbar color=\"primary\">\n        <v-btn @click=\"handleDialog\" icon large color=\"accent\"\n          ><v-icon>close</v-icon></v-btn\n        >\n        <v-toolbar-title class=\"accent--text font-weight-bold\"\n          >Add Disease Classification</v-toolbar-title\n        >\n        <v-spacer></v-spacer>\n      </v-toolbar>\n      <v-container>\n        <h2 class=\"font-weight-regular mb-4 mt-4\">Disease Details</h2>\n\n        <v-row dense>\n          <v-col sm=\"5\">\n            <v-text-field\n              filled\n              outlined\n              :error-messages=\"error.name?.length ? error.name : false\"\n              label=\"Disease Name\"\n              v-model=\"name\"\n            ></v-text-field>\n          </v-col>\n        </v-row>\n        <v-row dense class=\"mt-n2\">\n          <v-col md=\"2\">\n            <v-btn\n              color=\"primary\"\n              block\n              :loading=\"loading\"\n              class=\"px-12 py-5 text-capitalize font-weight-bold\"\n              @click=\"submit()\"\n              >Add Disease</v-btn\n            >\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n\nexport default {\n  props: ['dialog'],\n  computed: {\n    ...mapState({\n      loading: (state) => state.disease.store.loading,\n      error: (state) => state.disease.store.error,\n      message: (state) => state.staff.submit.message,\n    }),\n  },\n  data() {\n    return {\n        name:\"\"\n    };\n  },\n  methods: {\n    async submit() {\n      const res = await this.$store.dispatch(\"disease/store\", {name:this.name});\n      console.log(res);\n      if(res){\n        this.name = \"\"\n        this.$emit('handleDialog')        \n        this.$emit('snackBar')\n      }\n    },\n    async handleDialog() {\n     this.$emit('handleDialog')\n    },\n  },\n};\n</script>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Station/AddDialog.vue",["509"],"<template>\n  <v-dialog v-model=\"dialog\" fullscreen transition=\"dialog-bottom-transition\">\n    <v-card color=\"accent text-capitalize\">\n      <v-toolbar color=\"primary\">\n        <v-btn @click=\"handleDialog\" icon large color=\"accent\"\n          ><v-icon>close</v-icon></v-btn\n        >\n        <v-toolbar-title class=\"accent--text font-weight-bold\"\n          >Add Station</v-toolbar-title\n        >\n        <v-spacer></v-spacer>\n      </v-toolbar>\n      <v-container>\n        <h2 class=\"font-weight-regular mb-4 mt-4\">Station Details</h2>\n        <v-alert\n          type=\"info\"\n          icon=\"\"\n          border=\"left\"\n          text\n          :value=\"true\"\n          class=\"mb-6\"\n        >\n          The Username and Password will automatically generate.\n        </v-alert>\n\n        <v-alert type=\"error\" :value=\"error\">\n          {{ message }}\n        </v-alert>\n        <v-row dense>\n          <v-col cols=\"6\">\n            <v-text-field\n              filled\n              outlined\n              label=\"Set Location\"\n              v-model=\"station.location\"\n            ></v-text-field>\n          </v-col>\n        </v-row>\n        <v-row dense class=\"mt-n4\">\n          <v-col cols=\"6\">\n            <v-select\n              outlined\n              filled\n              :items=\"[true,false]\"\n              item-text=\"name\"\n              item-value=\"id\"\n              v-model=\"station.required\"\n              @input=\"handleRequired\"\n              label=\"Contact Trace Required\"\n            ></v-select>\n          </v-col>\n        </v-row>\n        <v-row dense class=\"mt-n4\">\n          <v-col md=\"2\">\n            <v-btn\n              color=\"primary\"\n              block\n              :loading=\"loading\"\n              class=\"px-12 py-5 text-capitalize font-weight-bold\"\n              @click=\"submit()\"\n              >Add Station</v-btn\n            >\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n\nexport default {\n  // mounted() {\n  //   this.$store.dispatch(\"clinic/getRole\");\n  // },\n  computed: {\n    ...mapState({\n     // role: (state) => state.clinic.role,\n      loading: (state) => state.station.submit.loading,\n      error: (state) => state.station.submit.error,\n      message: (state) => state.station.submit.message,\n      dialog: (state) => state.station.submit.dialog,\n    }),\n  },\n  data() {\n    return {\n      station: {\n        location: \"\",\n        required:false\n      },\n    };\n  },\n  methods: {\n    submit() {\n      this.$store.dispatch(\"station/submit\", this.station);\n    },\n    handleDialog() {\n      this.$store.state.station.submit.dialog = false;\n      this.$store.state.station.submit.error = false;\n    },\n    handleRequired(data){\n      console.log(data);\n    }\n  },\n};\n</script>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Form/UpdateDialog.vue",["510"],"<template>\n  <v-dialog :value=\"dialog\" fullscreen transition=\"dialog-bottom-transition\">\n    <v-card color=\"accent text-capitalize\">\n      <v-toolbar color=\"primary\">\n        <v-btn @click=\"handleDialog\" icon large color=\"accent\"\n          ><v-icon>close</v-icon></v-btn\n        >\n        <v-toolbar-title class=\"accent--text font-weight-bold\"\n          >Update Form</v-toolbar-title\n        >\n        <v-spacer></v-spacer>\n      </v-toolbar>\n      <v-container>\n        <v-card width=\"420\" flat color=\"transparent\">\n          <div class=\"d-flex align-center justify-space-between\">\n            <h2 class=\"font-weight-regular mb-4 mt-4\">Question Details</h2>\n            <v-btn\n              color=\"primary\"\n              class=\"px-6 py-5 text-capitalize font-weight-bold\"\n              small\n              text\n              @click=\"addRow()\"\n            >\n              <v-icon>add</v-icon>\n              Add Sub Row\n            </v-btn>\n          </div>\n\n          <v-row dense>\n            <v-text-field\n              filled\n              outlined\n              :error-messages=\"error.question?.length ? error.question : false\"\n              label=\"Question Name\"\n              v-model=\"question\"\n            ></v-text-field>\n            \n            <div v-show=\"sub_question.split(',').length\">\n            <div v-for=\"(subs, index) in arraySub\" :key=\"index\">\n              <div class=\"d-flex\">\n                <v-text-field\n                  filled\n                  outlined\n                  label=\"Sub List Name\"\n                  v-model=\"arraySub[index]\"\n                ></v-text-field>\n\n                <v-btn\n                  class=\"mt-2 ml-2 text-capitalize\"\n                  color=\"error\"\n                  icon\n                  @click=\"removeSub(index)\"\n                >\n                  <v-icon>delete</v-icon>\n                </v-btn>\n              </div>\n            </div>\n          </div>\n          </v-row>\n          <v-row dense class=\"mt-n2\">\n            <v-col md=\"2\">\n              <v-btn\n                color=\"primary\"\n                block\n                :loading=\"loading\"\n                class=\"px-12 py-5 text-capitalize font-weight-bold\"\n                @click=\"submit()\"\n                >Update Form</v-btn\n              >\n            </v-col>\n          </v-row>\n        </v-card>\n      </v-container>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n\nexport default {\n  props: [\"dialog\", \"updateData\"],\n  computed: {\n    ...mapState({\n      loading: (state) => state.questions.update.loading,\n      error: (state) => state.questions.update.error,\n    }),\n  },\n  watch: {\n    updateData() {\n      if (this.updateData) {\n        console.log(this.updateData);\n        this.id = this.updateData.id\n        this.question = this.updateData[\"question\"];\n        // this.sub_question = this.updateData[\"sub_question\"];\n        this.arraySub = this.updateData[\"sub_question\"].split(',')\n      }\n    },\n  },\n  data() {\n    return {\n      id: null,\n      question: \"\",\n      sub_question: \"\",\n      arraySub:[]\n    };\n  },\n  methods: {\n    async submit() {\n      const subTrim = this.arraySub.filter((e) => e.trim() != \"\");\n      const res = await this.$store.dispatch(\"questions/update\", {\n        id:this.id,\n        question: this.question,\n        sub_question: subTrim.join(),\n      });\n      if (res) {\n        this.question = \"\";\n        this.sub_question = \"\";\n        this.id = null;\n        this.$emit(\"handleDialog\");\n        this.$emit(\"snackBar\");\n        this.$emit(\"handleUpdateData\");\n      }\n    },\n    async handleDialog() {\n      this.$emit(\"handleDialog\");\n      this.$emit(\"handleUpdateData\");\n    },\n    removeSub(data) {\n      const subs = this.arraySub;\n      const filter = subs.filter((e, index) => {\n        return index != data;\n      });\n\n      this.arraySub = filter;\n    },\n    async addRow() {\n      this.arraySub.push(\"\");\n    },\n  },\n};\n</script>\n","/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Form/AddDialog.vue",["511"],"<template>\n  <v-dialog :value=\"dialog\" fullscreen transition=\"dialog-bottom-transition\">\n    <v-card color=\"accent text-capitalize\">\n      <v-toolbar color=\"primary\">\n        <v-btn @click=\"handleDialog\" icon large color=\"accent\"\n          ><v-icon>close</v-icon></v-btn\n        >\n        <v-toolbar-title class=\"accent--text font-weight-bold\"\n          >Add Question</v-toolbar-title\n        >\n        <v-spacer></v-spacer>\n      </v-toolbar>\n      <v-container>\n        <v-card width=\"420\" flat color=\"transparent\">\n          <div class=\"d-flex align-center justify-space-between\">\n            <h2 class=\"font-weight-regular mb-4 mt-4\">Question Details</h2>\n            <v-btn\n              color=\"primary\"\n              class=\"px-6 py-5 text-capitalize font-weight-bold\"\n              small\n              text\n              @click=\"addRow()\"\n            >\n              <v-icon>add</v-icon>\n              Add Sub Row\n            </v-btn>\n          </div>\n\n          <v-text-field\n            filled\n            outlined\n            :error-messages=\"error.question?.length ? error.question : false\"\n            label=\"Question Name\"\n            v-model=\"name\"\n          ></v-text-field>\n\n          <div v-for=\"(subs, index) in arraySub\" :key=\"index\">\n            <div class=\"d-flex\">\n              <v-text-field\n                filled\n                outlined\n                label=\"Sub List Name\"\n                v-model=\"arraySub[index]\"\n              ></v-text-field>\n\n              <v-btn\n                class=\"mt-2 ml-2 text-capitalize\"\n                color=\"error\"\n                icon\n                @click=\"removeSub(index)\"\n              >\n                <v-icon>delete</v-icon>\n              </v-btn>\n            </div>\n          </div>\n\n          <v-btn\n            color=\"primary\"\n            :loading=\"loading\"\n            class=\"px-12 py-5 text-capitalize font-weight-bold\"\n            @click=\"submit()\"\n            >Add Question</v-btn\n          >\n        </v-card>\n      </v-container>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n\nexport default {\n  props: [\"dialog\"],\n  computed: {\n    ...mapState({\n      loading: (state) => state.questions.store.loading,\n      error: (state) => state.questions.store.error,\n      message: (state) => state.staff.submit.message,\n    }),\n  },\n  data() {\n    return {\n      name: \"\",\n      arraySub: [],\n    };\n  },\n  methods: {\n    async submit() {\n      const subTrim = this.arraySub.filter((e) => e.trim() != \"\");\n      const res = await this.$store.dispatch(\"questions/store\", {\n        question: this.name,\n        sub_question: subTrim.join(),\n      });\n      console.log(res);\n      if (res) {\n        this.name = \"\";\n        this.$emit(\"handleDialog\");\n        this.$emit(\"snackBar\");\n        this.arraySub = [];\n      }\n    },\n    removeSub(data) {\n      const subs = this.arraySub;\n      const filter = subs.filter((e, index) => {\n        return index != data;\n      });\n\n      this.arraySub = filter;\n    },\n    async handleDialog() {\n      this.$emit(\"handleDialog\");\n      this.name = \"\";\n      this.arraySub = [];\n    },\n    async addRow() {\n      this.arraySub.push(\"\");\n    },\n  },\n};\n</script>\n","/home/wardy/Desktop/capstone/fe/src/config/axios.js",[],"/home/wardy/Desktop/capstone/fe/src/config/webSocket.js",["512"],"/home/wardy/Desktop/capstone/fe/src/views/user/dialogs/followUpDialog.vue",[],"/home/wardy/Desktop/capstone/fe/src/components/ClinicAppBar.vue",["513"],"<template>\n  <v-app-bar app color=\"accent\">\n    <v-app-bar-nav-icon color=\"primary\" @click=\"$emit('handleDialog')\"></v-app-bar-nav-icon>\n    <v-app-bar-title>\n      <h4 class=\"primary--text mr-4 text-capitalize font-weight-bold\">\n        UniTrace.\n      </h4>\n    </v-app-bar-title>\n\n    <v-spacer></v-spacer>\n    <v-menu :rounded=\"rounded\" offset-y transition=\"slide-y-transition\" max-width=\"280\">\n      <template v-slot:activator=\"{ attrs, on }\">\n        <v-badge color=\"red\" left dot :value=\"dot\">\n          <v-icon class=\"primary--text mr-8\" size=\"26\" v-bind=\"attrs\" v-on=\"on\"\n            @click=\"$store.state.notifications.dot = false\">\n            notifications\n          </v-icon>\n        </v-badge>\n      </template>\n      <v-list>\n        <v-list-item three-line v-for=\"notif in fiveNotif()\" :key=\"notif.id\">\n          <v-list-item-content>\n            <v-list-item-title class=\"font-weight-bold text-capitalize\">\n              <h5>{{\n                `${notif.user_account.first_name} ${notif.user_account.last_name}`\n              }}</h5>\n            </v-list-item-title>\n            <v-list-item-subtitle class=\"text-capitalize pt-2 pb-2 black--text\">\n              <h5 class=\"font-weight-thin\">{{ notif.message }}</h5>\n            </v-list-item-subtitle>\n            <v-list-item-subtitle>\n              <h5 class=\"font-weight-thin\"> {{ notif.created_at | timeFormat }}</h5>\n            </v-list-item-subtitle>\n          </v-list-item-content>\n        </v-list-item>\n        <v-divider></v-divider>\n        <v-btn block text color=\"primary\" class=\"text-capitalize\" to=\"/admin/notifications\">See all notifications</v-btn>\n      </v-list>\n    </v-menu>\n    <h4 class=\"black--text mr-4 text-capitalize font-weight-regular\">\n      Welcome,\n      <b class=\"font-weight-bold primary--text\">{{\n        `${data.first_name} ${data.last_name}`\n      }}</b>\n    </h4>\n    <v-menu offset-y bottom transition=\"slide-y-transition\" rounded=\"lg\">\n      <template v-slot:activator=\"{ on, attrs }\">\n        <v-avatar color=\"primary\" class=\"white--text font-weight-bold\" v-bind=\"attrs\" v-on=\"on\" size=\"50\">{{\n          data.first_name.slice(0, 1).toUpperCase() }}</v-avatar>\n      </template>\n      <v-list>\n        <v-list-item to=\"/admin/editprofile\">\n          <v-list-item-icon class=\"mr-4\"><v-icon color=\"primary\">account_circle</v-icon></v-list-item-icon>\n          <v-list-item-title class=\"font-weight-bold\">\n            <h5>Edit Profile</h5>\n          </v-list-item-title>\n        </v-list-item>\n        <v-divider></v-divider>\n        <v-list-item @click=\"logout\">\n          <v-list-item-icon class=\"mr-4\"><v-icon color=\"primary\">logout</v-icon></v-list-item-icon>\n          <v-list-item-title class=\"font-weight-bold\">\n            <h5>Logout</h5>\n          </v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </v-app-bar>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport { mapState } from \"vuex\";\nexport default {\n  props: [\"data\", 'dialog'],\n  mounted() {\n    this.$store.dispatch(\"notifications/getNotifications\");\n  },\n  filters: {\n    dateFormat(val) {\n      return moment(val).format(\"MMM. DD, YYYY\").toString();\n    },\n    timeFormat(val) {\n      return moment(val).fromNow().toString();\n    },\n  },\n  computed: {\n    ...mapState({\n      notify: (state) => state.notifications.data,\n      loading: (state) => state.notifications.loading,\n      dot: (state) => state.notifications.dot,\n    }),\n  },\n  methods: {\n    fiveNotif() {\n      const slice = this.notify.slice(0, 4)\n      console.log(\"wa\", slice);\n      return slice;\n    },\n    async logout() {\n      this.$store.dispatch(\"user/logout\");\n      this.$router.push(\"/clinic-login\");\n    },\n  },\n};\n</script>\n","/home/wardy/Desktop/capstone/fe/src/components/SideBar.vue",[],"/home/wardy/Desktop/capstone/fe/src/components/LoadingView.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/user/BottomNavigation.vue",[],"/home/wardy/Desktop/capstone/fe/src/components/AppBar.vue",["514"],"<template>\n  <v-app-bar app color=\"accent\">\n    <v-app-bar-nav-icon v-if=\"!$vuetify.breakpoint.mobile\" color=\"primary\"\n      @click=\"$emit('handleDialog')\"></v-app-bar-nav-icon>\n\n    <v-app-bar-title>\n      <h4 class=\"primary--text mr-4 text-capitalize font-weight-bold\">\n        UniTrace.\n      </h4>\n    </v-app-bar-title>\n\n    <v-spacer></v-spacer>\n    <!-- <v-menu :rounded=\"rounded\" offset-y transition=\"slide-y-transition\" max-width=\"280\">\n      <template v-slot:activator=\"{ attrs, on }\">\n        <v-badge color=\"red\" left dot :value=\"dot\">\n          <v-icon class=\"primary--text mr-8\" size=\"26\" v-bind=\"attrs\" v-on=\"on\"\n            @click=\"$store.state.notifications.dot = false\">\n            notifications\n          </v-icon>\n        </v-badge>\n      </template>\n      <v-list>\n        <v-list-item three-line v-for=\"notif in fiveNotif()\" :key=\"notif.id\">\n          <v-list-item-content>\n            <v-list-item-title class=\"font-weight-bold text-capitalize\">\n              <h5>{{\n                `${notif.user_account.first_name} ${notif.user_account.last_name}`\n              }}</h5>\n            </v-list-item-title>\n            <v-list-item-subtitle class=\"text-capitalize pt-2 pb-2 black--text\">\n              <h5 class=\"font-weight-thin\">{{ notif.message }}</h5>\n            </v-list-item-subtitle>\n            <v-list-item-subtitle>\n              <h5 class=\"font-weight-thin\"> {{ notif.created_at | timeFormat }}</h5>\n            </v-list-item-subtitle>\n          </v-list-item-content>\n        </v-list-item>\n        <v-divider></v-divider>\n        <v-btn block text color=\"primary\" class=\"text-capitalize mt-2\" to=\"/admin/notifications\">See all notifications</v-btn>\n      </v-list>\n    </v-menu> -->\n    <v-menu offset-y bottom transition=\"slide-y-transition\" rounded=\"lg\">\n      <template v-slot:activator=\"{ on, attrs }\">\n        <v-avatar color=\"primary\" v-bind=\"attrs\" v-on=\"on\" size=\"45\"><img :src=\"`${BaseImage}${data.images_path}`\"\n            alt=\"image\"></v-avatar>\n      </template>\n      <v-list>\n        <v-list-item to=\"/admin/editprofile\" v-if=\"type == `admin`\">\n          <v-list-item-icon class=\"mr-4\"><v-icon color=\"primary\">account_circle</v-icon></v-list-item-icon>\n          <v-list-item-title class=\"font-weight-bold\">\n            <h5>Edit Profile</h5>\n          </v-list-item-title>\n        </v-list-item>\n        <v-list-item to=\"/user/personal-profile\" v-else>\n          <v-list-item-icon class=\"mr-4\"><v-icon color=\"primary\">account_circle</v-icon></v-list-item-icon>\n          <v-list-item-title class=\"font-weight-bold\">\n            <h5>Edit Profile</h5>\n          </v-list-item-title>\n        </v-list-item>\n        <v-divider></v-divider>\n        <v-list-item @click=\"logout\">\n          <v-list-item-icon class=\"mr-4\"><v-icon color=\"primary\">logout</v-icon></v-list-item-icon>\n          <v-list-item-title class=\"font-weight-bold\">\n            <h5>Logout</h5>\n          </v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </v-app-bar>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport { mapState } from \"vuex\";\nexport default {\n  props: [\"data\", \"type\"],\n  mounted() {\n    this.$store.dispatch(\"notifications/getNotifications\");\n  },\n  data() {\n    return {\n      BaseImage: process.env.VUE_APP_IMAGE_URL\n    }\n  },\n  filters: {\n    dateFormat(val) {\n      return moment(val).format(\"MMM. DD, YYYY\").toString();\n    },\n    timeFormat(val) {\n      return moment(val).fromNow().toString();\n    },\n  },\n  computed: {\n    ...mapState({\n      notify: (state) => state.notifications.data,\n      loading: (state) => state.notifications.loading,\n      dot: (state) => state.notifications.dot,\n    }),\n  },\n  methods: {\n    async logout() {\n      this.$store.dispatch(\"user/logout\");\n      this.$router.push(\"/\");\n    },\n    fiveNotif() {\n      const slice = this.notify.slice(0, 4)\n      console.log(\"wa\", slice);\n      return slice;\n    },\n  },\n};\n</script>\n","/home/wardy/Desktop/capstone/fe/src/views/user/SideBar.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/user/pages/profile/EditProfileDialog.vue",[],"/home/wardy/Desktop/capstone/fe/src/views/admin/Dialog/Profile/EditProfile.vue",["515"],"<template>\n    <v-dialog v-model=\"dialog\" fullscreen transition=\"dialog-bottom-transition\">\n      <v-card color=\"accent text-capitalize\">\n        <v-toolbar color=\"primary\"> \n          <v-btn @click=\"handleDialog\" icon large color=\"accent\"><v-icon>close</v-icon></v-btn>\n          <v-toolbar-title class=\"accent--text font-weight-bold\">Edit Profile</v-toolbar-title>\n          <v-spacer></v-spacer>\n        </v-toolbar>\n        <v-container>\n          <h2 class=\"font-weight-regular mb-4 mt-4\">Personal Information</h2>\n          \n          <v-row dense>\n            <v-col>\n              <v-text-field filled outlined label=\"First Name\" v-model=\"clinic.first_name\" :error-messages=\"error?.first_name ? error?.first_name : false \"></v-text-field>\n            </v-col>\n            <v-col>\n              <v-text-field filled outlined label=\"Middle Name\" v-model=\"clinic.middle_name\" :error-messages=\"error?.middle_name ? error?.middle_name : false \"></v-text-field>\n            </v-col>\n            <v-col>\n              <v-text-field filled outlined label=\"Last Name\" v-model=\"clinic.last_name\" :error-messages=\"error?.last_name ? error?.last_name : false \"></v-text-field>\n            </v-col>\n          </v-row>\n  \n          <v-row dense class=\"mt-n3\">\n            <v-col cols=\"3\">\n              <v-select\n                outlined\n                filled\n                :items=\"['male', 'female']\"\n                v-model=\"clinic.gender\"\n                label=\"Gender\"\n                :error-messages=\"error?.gender ? error?.gender : false \"\n              ></v-select>\n            </v-col>\n            <v-col cols=\"3\">\n              <v-select\n                outlined\n                filled\n                :items=\"role\"\n                item-text=\"name\"\n                item-value=\"id\"\n                v-model=\"clinic.role\"\n                label=\"Role\"\n              ></v-select>\n            </v-col>\n            <v-col cols=\"6\">\n              <v-text-field filled outlined label=\"Address\" v-model=\"clinic.address\" :error-messages=\"error?.address ? error.address : false\"></v-text-field>\n            </v-col>\n          </v-row>\n          <v-row dense class=\"mt-n3\">\n            <v-col cols=\"4\">\n              <v-text-field filled outlined maxlength=\"11\" :rules=\"[(value) => value.length <=11]\" label=\"Contact Number\" v-model=\"clinic.contact_number\" :error-messages=\"error?.contact_number ? error?.contact_number : false \"></v-text-field>\n            </v-col>\n            <v-col cols=\"4\">\n              <v-text-field filled outlined label=\"Email\" v-model=\"clinic.email\" :error-messages=\"error?.email ? error?.email : false \"></v-text-field>\n            </v-col>\n          </v-row>\n          <v-row dense class=\"mt-n4\">\n            <v-col md=\"2\">\n              <v-btn\n                color=\"primary\"\n                block\n                :loading=\"loading\"\n                class=\"px-12 py-5 text-capitalize font-weight-bold\"\n                @click=\"editProfile()\">Edit Profile</v-btn\n              >\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-card>\n    </v-dialog>\n  </template>\n  \n  <script>\n  import { mapState } from 'vuex';\n  \n  export default {\n    mounted(){\n    this.$store.dispatch('clinic/getRole')\n    },\n    props:['profile'],\n    computed:{\n      ...mapState({\n        role:state => state.clinic.role,\n        loading:state => state.staff.update.loading,\n        error:state => state.staff.update.error,\n        message:state => state.staff.submit.message,\n      })\n    },\n    watch:{\n        profile(){\n            console.log('profile watch',this.profile);\n            if(this.profile){\n                this.dialog = true\n                this.clinic.id = this.profile.id\n                this.clinic.first_name = this.profile.first_name\n                this.clinic.middle_name = this.profile.middle_name\n                this.clinic.last_name = this.profile.last_name\n                this.clinic.gender = this.profile.gender\n                this.clinic.address = this.profile.address\n                this.clinic.role = this.profile.role_id\n                this.clinic.contact_number = this.profile.contact_number\n                this.clinic.email = this.profile.email\n            }\n        }\n    },\n    data() {\n      return {\n        dialog:false,\n        clinic:{\n              id:null,\n              first_name:this.profile?.first_name, \n              middle_name:this.profile?.middle_name,\n              last_name:this.profile?.last_name,\n              gender:this.profile?.gender,\n              role:this.profile?.role,\n              address:this.profile?.address,\n              contact_number:this.profile?.contact_number,\n              email:this.profile?.email\n          }\n      }\n    },\n    methods:{\n      submit(){\n          this.$store.dispatch('staff/createClinic',this.clinic)\n      },\n      handleDialog(){\n        this.dialog = false\n        this.$emit('handleProfile')\n      },\n      async editProfile(){\n        const res =await this.$store.dispatch('staff/editProfile',this.clinic)\n        if(res){\n           this.handleDialog()\n           this.$emit('snackBar')\n           this.$store.dispatch('clinic/loadUser')\n        }\n      }\n    }\n  };\n  </script>\n  ",{"ruleId":"516","severity":1,"message":"517","line":10,"column":7,"nodeType":"518","messageId":"519","endLine":10,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":15,"column":7,"nodeType":"518","messageId":"519","endLine":15,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":18,"column":5,"nodeType":"518","messageId":"519","endLine":18,"endColumn":16},{"ruleId":"516","severity":1,"message":"517","line":19,"column":5,"nodeType":"518","messageId":"519","endLine":19,"endColumn":16},{"ruleId":"516","severity":1,"message":"517","line":135,"column":7,"nodeType":"518","messageId":"519","endLine":135,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":220,"column":7,"nodeType":"518","messageId":"519","endLine":220,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":233,"column":7,"nodeType":"518","messageId":"519","endLine":233,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":236,"column":7,"nodeType":"518","messageId":"519","endLine":236,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":249,"column":7,"nodeType":"518","messageId":"519","endLine":249,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":233,"column":7,"nodeType":"518","messageId":"519","endLine":233,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":177,"column":7,"nodeType":"518","messageId":"519","endLine":177,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":181,"column":7,"nodeType":"518","messageId":"519","endLine":181,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":119,"column":7,"nodeType":"518","messageId":"519","endLine":119,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":249,"column":9,"nodeType":"518","messageId":"519","endLine":249,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":270,"column":7,"nodeType":"518","messageId":"519","endLine":270,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":408,"column":7,"nodeType":"518","messageId":"519","endLine":408,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":420,"column":7,"nodeType":"518","messageId":"519","endLine":420,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":425,"column":7,"nodeType":"518","messageId":"519","endLine":425,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":430,"column":7,"nodeType":"518","messageId":"519","endLine":430,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":435,"column":7,"nodeType":"518","messageId":"519","endLine":435,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":446,"column":7,"nodeType":"518","messageId":"519","endLine":446,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":484,"column":11,"nodeType":"518","messageId":"519","endLine":484,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":153,"column":7,"nodeType":"518","messageId":"519","endLine":153,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":131,"column":7,"nodeType":"518","messageId":"519","endLine":131,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":259,"column":7,"nodeType":"518","messageId":"519","endLine":259,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":265,"column":7,"nodeType":"518","messageId":"519","endLine":265,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":310,"column":7,"nodeType":"518","messageId":"519","endLine":310,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":318,"column":7,"nodeType":"518","messageId":"519","endLine":318,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":191,"column":7,"nodeType":"518","messageId":"519","endLine":191,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":305,"column":7,"nodeType":"518","messageId":"519","endLine":305,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":325,"column":7,"nodeType":"518","messageId":"519","endLine":325,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":343,"column":7,"nodeType":"518","messageId":"519","endLine":343,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":283,"column":7,"nodeType":"518","messageId":"519","endLine":283,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":31,"column":21,"nodeType":"518","messageId":"519","endLine":31,"endColumn":32},{"ruleId":"516","severity":1,"message":"517","line":32,"column":21,"nodeType":"518","messageId":"519","endLine":32,"endColumn":32},{"ruleId":"516","severity":1,"message":"517","line":43,"column":24,"nodeType":"518","messageId":"519","endLine":43,"endColumn":37},{"ruleId":"516","severity":1,"message":"517","line":53,"column":21,"nodeType":"518","messageId":"519","endLine":53,"endColumn":32},{"ruleId":"516","severity":1,"message":"517","line":85,"column":9,"nodeType":"518","messageId":"519","endLine":85,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":88,"column":9,"nodeType":"518","messageId":"519","endLine":88,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":103,"column":9,"nodeType":"518","messageId":"519","endLine":103,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":106,"column":9,"nodeType":"518","messageId":"519","endLine":106,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":115,"column":9,"nodeType":"518","messageId":"519","endLine":115,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":118,"column":9,"nodeType":"518","messageId":"519","endLine":118,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":130,"column":11,"nodeType":"518","messageId":"519","endLine":130,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":157,"column":11,"nodeType":"518","messageId":"519","endLine":157,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":161,"column":7,"nodeType":"518","messageId":"519","endLine":161,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":162,"column":7,"nodeType":"518","messageId":"519","endLine":162,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":177,"column":11,"nodeType":"518","messageId":"519","endLine":177,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":185,"column":11,"nodeType":"518","messageId":"519","endLine":185,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":197,"column":11,"nodeType":"518","messageId":"519","endLine":197,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":200,"column":11,"nodeType":"518","messageId":"519","endLine":200,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":211,"column":11,"nodeType":"518","messageId":"519","endLine":211,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":214,"column":11,"nodeType":"518","messageId":"519","endLine":214,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":230,"column":11,"nodeType":"518","messageId":"519","endLine":230,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":60,"column":11,"nodeType":"518","messageId":"519","endLine":60,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":87,"column":9,"nodeType":"518","messageId":"519","endLine":87,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":91,"column":9,"nodeType":"518","messageId":"519","endLine":91,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":105,"column":11,"nodeType":"518","messageId":"519","endLine":105,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":122,"column":11,"nodeType":"518","messageId":"519","endLine":122,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":135,"column":11,"nodeType":"518","messageId":"519","endLine":135,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":56,"column":9,"nodeType":"518","messageId":"519","endLine":56,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":65,"column":9,"nodeType":"518","messageId":"519","endLine":65,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":78,"column":11,"nodeType":"518","messageId":"519","endLine":78,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":79,"column":11,"nodeType":"518","messageId":"519","endLine":79,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":82,"column":11,"nodeType":"518","messageId":"519","endLine":82,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":93,"column":11,"nodeType":"518","messageId":"519","endLine":93,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":96,"column":11,"nodeType":"518","messageId":"519","endLine":96,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":49,"column":11,"nodeType":"518","messageId":"519","endLine":49,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":50,"column":11,"nodeType":"518","messageId":"519","endLine":50,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":52,"column":9,"nodeType":"518","messageId":"519","endLine":52,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":59,"column":9,"nodeType":"518","messageId":"519","endLine":59,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":67,"column":9,"nodeType":"518","messageId":"519","endLine":67,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":76,"column":9,"nodeType":"518","messageId":"519","endLine":76,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":91,"column":11,"nodeType":"518","messageId":"519","endLine":91,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":100,"column":11,"nodeType":"518","messageId":"519","endLine":100,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":68,"column":17,"nodeType":"518","messageId":"519","endLine":68,"endColumn":28},{"ruleId":"516","severity":1,"message":"517","line":70,"column":17,"nodeType":"518","messageId":"519","endLine":70,"endColumn":28},{"ruleId":"516","severity":1,"message":"517","line":81,"column":17,"nodeType":"518","messageId":"519","endLine":81,"endColumn":28},{"ruleId":"516","severity":1,"message":"517","line":92,"column":17,"nodeType":"518","messageId":"519","endLine":92,"endColumn":28},{"ruleId":"516","severity":1,"message":"517","line":101,"column":17,"nodeType":"518","messageId":"519","endLine":101,"endColumn":28},{"ruleId":"516","severity":1,"message":"517","line":120,"column":17,"nodeType":"518","messageId":"519","endLine":120,"endColumn":28},{"ruleId":"516","severity":1,"message":"517","line":124,"column":17,"nodeType":"518","messageId":"519","endLine":124,"endColumn":28},{"ruleId":"516","severity":1,"message":"517","line":142,"column":17,"nodeType":"518","messageId":"519","endLine":142,"endColumn":28},{"ruleId":"516","severity":1,"message":"517","line":146,"column":13,"nodeType":"518","messageId":"519","endLine":146,"endColumn":24},{"ruleId":"516","severity":1,"message":"517","line":161,"column":17,"nodeType":"518","messageId":"519","endLine":161,"endColumn":28},{"ruleId":"516","severity":1,"message":"517","line":55,"column":11,"nodeType":"518","messageId":"519","endLine":55,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":64,"column":11,"nodeType":"518","messageId":"519","endLine":64,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":101,"column":9,"nodeType":"518","messageId":"519","endLine":101,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":102,"column":9,"nodeType":"518","messageId":"519","endLine":102,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":112,"column":9,"nodeType":"518","messageId":"519","endLine":112,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":45,"column":9,"nodeType":"518","messageId":"519","endLine":45,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":47,"column":9,"nodeType":"518","messageId":"519","endLine":47,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":56,"column":9,"nodeType":"518","messageId":"519","endLine":56,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":58,"column":9,"nodeType":"518","messageId":"519","endLine":58,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":69,"column":9,"nodeType":"518","messageId":"519","endLine":69,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":71,"column":9,"nodeType":"518","messageId":"519","endLine":71,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":49,"column":9,"nodeType":"518","messageId":"519","endLine":49,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":71,"column":11,"nodeType":"518","messageId":"519","endLine":71,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":79,"column":11,"nodeType":"518","messageId":"519","endLine":79,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":99,"column":11,"nodeType":"518","messageId":"519","endLine":99,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":107,"column":11,"nodeType":"518","messageId":"519","endLine":107,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":119,"column":9,"nodeType":"518","messageId":"519","endLine":119,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":122,"column":9,"nodeType":"518","messageId":"519","endLine":122,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":68,"column":9,"nodeType":"518","messageId":"519","endLine":68,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":73,"column":9,"nodeType":"518","messageId":"519","endLine":73,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":97,"column":13,"nodeType":"518","messageId":"519","endLine":97,"endColumn":24},{"ruleId":"516","severity":1,"message":"517","line":106,"column":11,"nodeType":"518","messageId":"519","endLine":106,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":116,"column":11,"nodeType":"518","messageId":"519","endLine":116,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":126,"column":11,"nodeType":"518","messageId":"519","endLine":126,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":145,"column":11,"nodeType":"518","messageId":"519","endLine":145,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":156,"column":11,"nodeType":"518","messageId":"519","endLine":156,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":170,"column":11,"nodeType":"518","messageId":"519","endLine":170,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":187,"column":11,"nodeType":"518","messageId":"519","endLine":187,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":213,"column":11,"nodeType":"518","messageId":"519","endLine":213,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":61,"column":11,"nodeType":"518","messageId":"519","endLine":61,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":69,"column":11,"nodeType":"518","messageId":"519","endLine":69,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":91,"column":11,"nodeType":"518","messageId":"519","endLine":91,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":111,"column":11,"nodeType":"518","messageId":"519","endLine":111,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":119,"column":11,"nodeType":"518","messageId":"519","endLine":119,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":139,"column":11,"nodeType":"518","messageId":"519","endLine":139,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":147,"column":11,"nodeType":"518","messageId":"519","endLine":147,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":157,"column":11,"nodeType":"518","messageId":"519","endLine":157,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":160,"column":11,"nodeType":"518","messageId":"519","endLine":160,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":172,"column":11,"nodeType":"518","messageId":"519","endLine":172,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":177,"column":11,"nodeType":"518","messageId":"519","endLine":177,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":189,"column":11,"nodeType":"518","messageId":"519","endLine":189,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":194,"column":11,"nodeType":"518","messageId":"519","endLine":194,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":211,"column":11,"nodeType":"518","messageId":"519","endLine":211,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":230,"column":11,"nodeType":"518","messageId":"519","endLine":230,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":33,"column":9,"nodeType":"518","messageId":"519","endLine":33,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":36,"column":9,"nodeType":"518","messageId":"519","endLine":36,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":44,"column":9,"nodeType":"518","messageId":"519","endLine":44,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":47,"column":9,"nodeType":"518","messageId":"519","endLine":47,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":51,"column":5,"nodeType":"518","messageId":"519","endLine":51,"endColumn":16},{"ruleId":"516","severity":1,"message":"517","line":59,"column":9,"nodeType":"518","messageId":"519","endLine":59,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":69,"column":9,"nodeType":"518","messageId":"519","endLine":69,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":71,"column":9,"nodeType":"518","messageId":"519","endLine":71,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":50,"column":13,"nodeType":"518","messageId":"519","endLine":50,"endColumn":24},{"ruleId":"516","severity":1,"message":"517","line":64,"column":9,"nodeType":"518","messageId":"519","endLine":64,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":79,"column":9,"nodeType":"518","messageId":"519","endLine":79,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":83,"column":9,"nodeType":"518","messageId":"519","endLine":83,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":107,"column":11,"nodeType":"518","messageId":"519","endLine":107,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":134,"column":11,"nodeType":"518","messageId":"519","endLine":134,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":160,"column":11,"nodeType":"518","messageId":"519","endLine":160,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":56,"column":11,"nodeType":"518","messageId":"519","endLine":56,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":64,"column":11,"nodeType":"518","messageId":"519","endLine":64,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":83,"column":13,"nodeType":"518","messageId":"519","endLine":83,"endColumn":24},{"ruleId":"516","severity":1,"message":"517","line":94,"column":11,"nodeType":"518","messageId":"519","endLine":94,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":102,"column":11,"nodeType":"518","messageId":"519","endLine":102,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":113,"column":11,"nodeType":"518","messageId":"519","endLine":113,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":121,"column":11,"nodeType":"518","messageId":"519","endLine":121,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":132,"column":13,"nodeType":"518","messageId":"519","endLine":132,"endColumn":24},{"ruleId":"516","severity":1,"message":"517","line":140,"column":13,"nodeType":"518","messageId":"519","endLine":140,"endColumn":24},{"ruleId":"516","severity":1,"message":"517","line":151,"column":13,"nodeType":"518","messageId":"519","endLine":151,"endColumn":24},{"ruleId":"516","severity":1,"message":"517","line":159,"column":13,"nodeType":"518","messageId":"519","endLine":159,"endColumn":24},{"ruleId":"516","severity":1,"message":"517","line":35,"column":9,"nodeType":"518","messageId":"519","endLine":35,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":39,"column":9,"nodeType":"518","messageId":"519","endLine":39,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":63,"column":9,"nodeType":"518","messageId":"519","endLine":63,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":40,"column":5,"nodeType":"518","messageId":"519","endLine":40,"endColumn":16},{"ruleId":"516","severity":1,"message":"517","line":137,"column":5,"nodeType":"518","messageId":"519","endLine":137,"endColumn":16},{"ruleId":"516","severity":1,"message":"517","line":164,"column":9,"nodeType":"518","messageId":"519","endLine":164,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":227,"column":5,"nodeType":"518","messageId":"519","endLine":227,"endColumn":16},{"ruleId":"516","severity":1,"message":"517","line":234,"column":7,"nodeType":"518","messageId":"519","endLine":234,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":230,"column":9,"nodeType":"518","messageId":"519","endLine":230,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":242,"column":11,"nodeType":"518","messageId":"519","endLine":242,"endColumn":22},{"ruleId":"516","severity":1,"message":"517","line":254,"column":7,"nodeType":"518","messageId":"519","endLine":254,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":64,"column":7,"nodeType":"518","messageId":"519","endLine":64,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":103,"column":7,"nodeType":"518","messageId":"519","endLine":103,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":92,"column":9,"nodeType":"518","messageId":"519","endLine":92,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":95,"column":7,"nodeType":"518","messageId":"519","endLine":95,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":12,"column":5,"nodeType":"518","messageId":"519","endLine":12,"endColumn":16},{"ruleId":"516","severity":1,"message":"517","line":96,"column":7,"nodeType":"518","messageId":"519","endLine":96,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":107,"column":7,"nodeType":"518","messageId":"519","endLine":107,"endColumn":18},{"ruleId":"516","severity":1,"message":"517","line":92,"column":13,"nodeType":"518","messageId":"519","endLine":92,"endColumn":24},"no-console","Unexpected console statement.","MemberExpression","unexpected"]